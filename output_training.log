nohup: ignoring input
[INFO] 准备处理数据集: flights (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 flights，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: flights (CSV: 51.59%.csv, error_rate=51.59%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 8
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_8_algo_1/repaired_dataset_8_algo_1_51.59%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_8_algo_1/repaired_dataset_8_algo_1_51.59%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_8.csv
运行时间: 100.63 秒
[INFO] 运行聚类算法: AP，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8808902464761887, preference=-101
Number of clusters: 38
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_8/repaired_8.txt
Program completed in: 1150.2858986854553 seconds

[INFO] 聚类完成: AP, 运行时间: 1150.29 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_8/repaired_8.txt
Program completed in: 57.465927600860596 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 57.47 秒
[INFO] 运行聚类算法: GMM，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 2
Refining in range: 2 to 48
Final optimal number of components: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_8/repaired_8.txt
Program completed in: 32.409876585006714 seconds

[INFO] 聚类完成: GMM, 运行时间: 32.41 秒
[INFO] 运行聚类算法: HC，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_8/repaired_8.txt
Program completed in: 90.17004537582397 seconds

[INFO] 聚类完成: HC, 运行时间: 90.17 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 43
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_8/repaired_8.txt
Program completed in: 299.2727406024933 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 299.27 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_8/repaired_8.txt
Program completed in: 3264.1579308509827 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3264.16 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 8
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 554.
796399 pairs of (a data error, a potential correction) are featurized.
54% (4643 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1298.
810638 pairs of (a data error, a potential correction) are featurized.
54% (4651 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1019.
815489 pairs of (a data error, a potential correction) are featurized.
54% (4651 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1438.
827352 pairs of (a data error, a potential correction) are featurized.
54% (4704 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1005.
835612 pairs of (a data error, a potential correction) are featurized.
55% (4723 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1138.
849167 pairs of (a data error, a potential correction) are featurized.
55% (4756 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 733.
849636 pairs of (a data error, a potential correction) are featurized.
56% (4821 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1498.
869016 pairs of (a data error, a potential correction) are featurized.
58% (5003 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1157.
877730 pairs of (a data error, a potential correction) are featurized.
58% (5047 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1052.
884620 pairs of (a data error, a potential correction) are featurized.
59% (5071 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2038.
890663 pairs of (a data error, a potential correction) are featurized.
59% (5109 / 8645) of data errors are corrected.
[INFO] 准备处理数据集: flights (CSV: 8.69%.csv, error_rate=8.69%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 1
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_1_algo_1/repaired_dataset_1_algo_1_8.69%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_1_algo_1/repaired_dataset_1_algo_1_8.69%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_1.csv
运行时间: 92.47 秒
[INFO] 运行聚类算法: AP，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7139363836846043, preference=-155
Number of clusters: 1212
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_1/repaired_1.txt
Program completed in: 1101.6084518432617 seconds

[INFO] 聚类完成: AP, 运行时间: 1101.61 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_1/repaired_1.txt
Program completed in: 78.25052833557129 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 78.25 秒
[INFO] 运行聚类算法: GMM，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 9
Refining in range: 9 to 22
Final optimal number of components: 21
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_1/repaired_1.txt
Program completed in: 87.73753690719604 seconds

[INFO] 聚类完成: GMM, 运行时间: 87.74 秒
[INFO] 运行聚类算法: HC，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=41, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_1/repaired_1.txt
Program completed in: 62.89278817176819 seconds

[INFO] 聚类完成: HC, 运行时间: 62.89 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_1/repaired_1.txt
Program completed in: 470.6098458766937 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 470.61 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_1/repaired_1.txt
Program completed in: 3298.901801109314 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3298.90 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 1
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2103.
135330 pairs of (a data error, a potential correction) are featurized.
70% (1039 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2144.
136000 pairs of (a data error, a potential correction) are featurized.
82% (1211 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 934.
136000 pairs of (a data error, a potential correction) are featurized.
84% (1244 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1462.
136332 pairs of (a data error, a potential correction) are featurized.
84% (1244 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1094.
136332 pairs of (a data error, a potential correction) are featurized.
84% (1244 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 917.
136341 pairs of (a data error, a potential correction) are featurized.
86% (1268 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2099.
137003 pairs of (a data error, a potential correction) are featurized.
91% (1335 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 389.
137003 pairs of (a data error, a potential correction) are featurized.
91% (1335 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1963.
137673 pairs of (a data error, a potential correction) are featurized.
91% (1335 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 65.
137673 pairs of (a data error, a potential correction) are featurized.
91% (1335 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 361.
138171 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2282.
139333 pairs of (a data error, a potential correction) are featurized.
[INFO] 准备处理数据集: flights (CSV: 67.74%.csv, error_rate=67.74%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 4
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_4_algo_1/repaired_dataset_4_algo_1_67.74%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_4_algo_1/repaired_dataset_4_algo_1_67.74%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_4.csv
运行时间: 100.61 秒
[INFO] 运行聚类算法: AP，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8967160786816513, preference=-117
Number of clusters: 463
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_4/repaired_4.txt
Program completed in: 1845.2530913352966 seconds

[INFO] 聚类完成: AP, 运行时间: 1845.25 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_4/repaired_4.txt
Program completed in: 100.9134955406189 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 100.91 秒
[INFO] 运行聚类算法: GMM，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 13
Refining in range: 13 to 48
Final optimal number of components: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_4/repaired_4.txt
Program completed in: 75.68060898780823 seconds

[INFO] 聚类完成: GMM, 运行时间: 75.68 秒
[INFO] 运行聚类算法: HC，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_4/repaired_4.txt
Program completed in: 121.52083444595337 seconds

[INFO] 聚类完成: HC, 运行时间: 121.52 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 15
Refining in range: 15 to 48
Refined optimal number of clusters: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_4/repaired_4.txt
Program completed in: 246.9019124507904 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 246.90 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_4/repaired_4.txt
Program completed in: 2879.849056482315 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 2879.85 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 4
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1169.
876238 pairs of (a data error, a potential correction) are featurized.
28% (3201 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 968.
878920 pairs of (a data error, a potential correction) are featurized.
30% (3417 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 510.
899310 pairs of (a data error, a potential correction) are featurized.
34% (3827 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 858.
922978 pairs of (a data error, a potential correction) are featurized.
35% (3946 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 475.
945716 pairs of (a data error, a potential correction) are featurized.
35% (3951 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2006.
956300 pairs of (a data error, a potential correction) are featurized.
35% (3960 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1506.
971420 pairs of (a data error, a potential correction) are featurized.
37% (4222 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2204.
1009039 pairs of (a data error, a potential correction) are featurized.
37% (4224 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1878.
1030504 pairs of (a data error, a potential correction) are featurized.
38% (4345 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1000.
1055435 pairs of (a data error, a potential correction) are featurized.
40% (4510 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1649.
1065589 pairs of (a data error, a potential correction) are featurized.
40% (4549 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2114.
[INFO] 准备处理数据集: flights (CSV: 38.92%.csv, error_rate=38.92%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 5
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_5_algo_1/repaired_dataset_5_algo_1_38.92%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_5_algo_1/repaired_dataset_5_algo_1_38.92%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_5.csv
运行时间: 98.45 秒
[INFO] 运行聚类算法: AP，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6081952481841153, preference=-178
Number of clusters: 2222
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_5/repaired_5.txt
Program completed in: 1324.6723055839539 seconds

[INFO] 聚类完成: AP, 运行时间: 1324.67 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_5/repaired_5.txt
Program completed in: 87.41773867607117 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 87.42 秒
[INFO] 运行聚类算法: GMM，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 2
Refining in range: 2 to 48
Final optimal number of components: 46
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_5/repaired_5.txt
Program completed in: 52.14832067489624 seconds

[INFO] 聚类完成: GMM, 运行时间: 52.15 秒
[INFO] 运行聚类算法: HC，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=ward, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_5/repaired_5.txt
Program completed in: 132.4518084526062 seconds

[INFO] 聚类完成: HC, 运行时间: 132.45 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 19
Refining in range: 19 to 48
Refined optimal number of clusters: 39
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_5/repaired_5.txt
Program completed in: 352.9405941963196 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 352.94 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_5/repaired_5.txt
Program completed in: 2969.841431617737 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 2969.84 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 5
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2007.
810529 pairs of (a data error, a potential correction) are featurized.
64% (3640 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1161.
814064 pairs of (a data error, a potential correction) are featurized.
66% (3771 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 960.
817458 pairs of (a data error, a potential correction) are featurized.
67% (3801 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2193.
817468 pairs of (a data error, a potential correction) are featurized.
67% (3802 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 321.
819214 pairs of (a data error, a potential correction) are featurized.
67% (3802 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1820.
822538 pairs of (a data error, a potential correction) are featurized.
67% (3802 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2099.
835155 pairs of (a data error, a potential correction) are featurized.
71% (4032 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 222.
837648 pairs of (a data error, a potential correction) are featurized.
71% (4035 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 912.
840972 pairs of (a data error, a potential correction) are featurized.
71% (4037 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1749.
842729 pairs of (a data error, a potential correction) are featurized.
71% (4041 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1334.
848728 pairs of (a data error, a potential correction) are featurized.
72% (4079 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 71.
850506 pairs of (a data error, a potential correction) are featurized.
[INFO] 准备处理数据集: flights (CSV: 40.76%.csv, error_rate=40.76%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 3
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_3_algo_1/repaired_dataset_3_algo_1_40.76%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_3_algo_1/repaired_dataset_3_algo_1_40.76%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_3.csv
运行时间: 97.96 秒
[INFO] 运行聚类算法: AP，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.765790012772452, preference=-422
Number of clusters: 2346
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_3/repaired_3.txt
Program completed in: 1252.1793055534363 seconds

[INFO] 聚类完成: AP, 运行时间: 1252.18 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_3/repaired_3.txt
Program completed in: 59.62895321846008 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 59.63 秒
[INFO] 运行聚类算法: GMM，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 10
Refining in range: 10 to 48
Final optimal number of components: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_3/repaired_3.txt
Program completed in: 59.579686880111694 seconds

[INFO] 聚类完成: GMM, 运行时间: 59.58 秒
[INFO] 运行聚类算法: HC，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_3/repaired_3.txt
Program completed in: 129.59532761573792 seconds

[INFO] 聚类完成: HC, 运行时间: 129.60 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 45
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_3/repaired_3.txt
Program completed in: 331.9001364707947 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 331.90 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_3/repaired_3.txt
Program completed in: 3169.9017593860626 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3169.90 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 3
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2166.
652080 pairs of (a data error, a potential correction) are featurized.
57% (3744 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 207.
655456 pairs of (a data error, a potential correction) are featurized.
57% (3746 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1516.
658712 pairs of (a data error, a potential correction) are featurized.
57% (3747 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 86.
665611 pairs of (a data error, a potential correction) are featurized.
57% (3748 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 430.
675066 pairs of (a data error, a potential correction) are featurized.
58% (3795 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1810.
681428 pairs of (a data error, a potential correction) are featurized.
58% (3795 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1081.
684743 pairs of (a data error, a potential correction) are featurized.
58% (3795 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2363.
684783 pairs of (a data error, a potential correction) are featurized.
58% (3795 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1393.
686791 pairs of (a data error, a potential correction) are featurized.
58% (3795 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 213.
692739 pairs of (a data error, a potential correction) are featurized.
60% (3973 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1883.
698641 pairs of (a data error, a potential correction) are featurized.
60% (3973 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2367.
701894 pairs of (a data error, a potential correction) are featurized.
[INFO] 准备处理数据集: flights (CSV: 30.63%.csv, error_rate=30.63%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 6
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_6_algo_1/repaired_dataset_6_algo_1_30.63%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_6_algo_1/repaired_dataset_6_algo_1_30.63%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_6.csv
运行时间: 99.43 秒
[INFO] 运行聚类算法: AP，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8042796735628259, preference=-114
Number of clusters: 197
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_6/repaired_6.txt
Program completed in: 1495.2519516944885 seconds

[INFO] 聚类完成: AP, 运行时间: 1495.25 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_6/repaired_6.txt
Program completed in: 108.47841429710388 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 108.48 秒
[INFO] 运行聚类算法: GMM，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 17
Refining in range: 17 to 48
Final optimal number of components: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_6/repaired_6.txt
Program completed in: 66.20824861526489 seconds

[INFO] 聚类完成: GMM, 运行时间: 66.21 秒
[INFO] 运行聚类算法: HC，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=single, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_6/repaired_6.txt
Program completed in: 138.72244954109192 seconds

[INFO] 聚类完成: HC, 运行时间: 138.72 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_6/repaired_6.txt
Program completed in: 332.8882930278778 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 332.89 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_6/repaired_6.txt
Program completed in: 3019.345032930374 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3019.35 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 6
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 978.
504568 pairs of (a data error, a potential correction) are featurized.
51% (2937 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2017.
510135 pairs of (a data error, a potential correction) are featurized.
52% (2980 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 330.
514130 pairs of (a data error, a potential correction) are featurized.
52% (2980 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 62.
520416 pairs of (a data error, a potential correction) are featurized.
52% (2993 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 347.
524833 pairs of (a data error, a potential correction) are featurized.
52% (2993 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 365.
526629 pairs of (a data error, a potential correction) are featurized.
52% (2993 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 473.
530875 pairs of (a data error, a potential correction) are featurized.
53% (3036 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1990.
534973 pairs of (a data error, a potential correction) are featurized.
53% (3036 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 181.
539390 pairs of (a data error, a potential correction) are featurized.
53% (3036 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1468.
543180 pairs of (a data error, a potential correction) are featurized.
53% (3036 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1022.
547342 pairs of (a data error, a potential correction) are featurized.
57% (3285 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1925.
547342 pairs of (a data error, a potential correction) are featurized.
[INFO] 准备处理数据集: flights (CSV: 45.44%.csv, error_rate=45.44%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 7
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_7_algo_1/repaired_dataset_7_algo_1_45.44%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_7_algo_1/repaired_dataset_7_algo_1_45.44%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_7.csv
运行时间: 99.43 秒
[INFO] 运行聚类算法: AP，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6372901459680553, preference=-223
Number of clusters: 2350
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_7/repaired_7.txt
Program completed in: 1707.8314213752747 seconds

[INFO] 聚类完成: AP, 运行时间: 1707.83 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_7/repaired_7.txt
Program completed in: 98.71738076210022 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 98.72 秒
[INFO] 运行聚类算法: GMM，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 12
Refining in range: 12 to 48
Final optimal number of components: 42
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_7/repaired_7.txt
Program completed in: 52.821603536605835 seconds

[INFO] 聚类完成: GMM, 运行时间: 52.82 秒
[INFO] 运行聚类算法: HC，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_7/repaired_7.txt
Program completed in: 115.44313168525696 seconds

[INFO] 聚类完成: HC, 运行时间: 115.44 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 17
Refining in range: 17 to 48
Refined optimal number of clusters: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_7/repaired_7.txt
Program completed in: 319.2690632343292 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 319.27 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_7/repaired_7.txt
Program completed in: 2765.3761863708496 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 2765.38 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 7
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1356.
807943 pairs of (a data error, a potential correction) are featurized.
60% (4553 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 732.
815216 pairs of (a data error, a potential correction) are featurized.
61% (4636 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1439.
822195 pairs of (a data error, a potential correction) are featurized.
61% (4637 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1992.
834189 pairs of (a data error, a potential correction) are featurized.
61% (4682 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1579.
849585 pairs of (a data error, a potential correction) are featurized.
62% (4739 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 666.
860755 pairs of (a data error, a potential correction) are featurized.
62% (4744 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2120.
872729 pairs of (a data error, a potential correction) are featurized.
63% (4837 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1392.
875759 pairs of (a data error, a potential correction) are featurized.
65% (4930 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2141.
884073 pairs of (a data error, a potential correction) are featurized.
66% (5003 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1448.
896349 pairs of (a data error, a potential correction) are featurized.
66% (5048 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 328.
904325 pairs of (a data error, a potential correction) are featurized.
66% (5052 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 48.
911436 pairs of (a data error, a potential correction) are featurized.
[INFO] 准备处理数据集: flights (CSV: 24.56%.csv, error_rate=24.56%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 0
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_0_algo_1/repaired_dataset_0_algo_1_24.56%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_0_algo_1/repaired_dataset_0_algo_1_24.56%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_0.csv
运行时间: 96.95 秒
[INFO] 运行聚类算法: AP，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.649784370098921, preference=-460
Number of clusters: 2361
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_0/repaired_0.txt
Program completed in: 1751.8874909877777 seconds

[INFO] 聚类完成: AP, 运行时间: 1751.89 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_0/repaired_0.txt
Program completed in: 118.07744574546814 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 118.08 秒
[INFO] 运行聚类算法: GMM，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 19
Refining in range: 19 to 48
Final optimal number of components: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_0/repaired_0.txt
Program completed in: 46.46031737327576 seconds

[INFO] 聚类完成: GMM, 运行时间: 46.46 秒
[INFO] 运行聚类算法: HC，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_0/repaired_0.txt
Program completed in: 125.9470465183258 seconds

[INFO] 聚类完成: HC, 运行时间: 125.95 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 17
Refining in range: 17 to 48
Refined optimal number of clusters: 43
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_0/repaired_0.txt
Program completed in: 298.0795350074768 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 298.08 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_0/repaired_0.txt
Program completed in: 3053.5565745830536 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3053.56 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 0
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1575.
457611 pairs of (a data error, a potential correction) are featurized.
49% (2022 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2287.
461097 pairs of (a data error, a potential correction) are featurized.
55% (2271 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 866.
465136 pairs of (a data error, a potential correction) are featurized.
56% (2313 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 389.
466630 pairs of (a data error, a potential correction) are featurized.
56% (2313 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1140.
466630 pairs of (a data error, a potential correction) are featurized.
56% (2313 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1688.
468124 pairs of (a data error, a potential correction) are featurized.
58% (2399 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 426.
470230 pairs of (a data error, a potential correction) are featurized.
58% (2399 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2181.
471545 pairs of (a data error, a potential correction) are featurized.
58% (2399 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2086.
474381 pairs of (a data error, a potential correction) are featurized.
58% (2399 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 597.
475377 pairs of (a data error, a potential correction) are featurized.
58% (2399 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1018.
475407 pairs of (a data error, a potential correction) are featurized.
58% (2409 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1104.
475407 pairs of (a data error, a potential correction) are featurized.
66% (5056 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 180.
921716 pairs of (a data error, a potential correction) are featurized.
67% (5115 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1712.
923872 pairs of (a data error, a potential correction) are featurized.
67% (5145 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 365.
934117 pairs of (a data error, a potential correction) are featurized.
67% (5145 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1509.
940727 pairs of (a data error, a potential correction) are featurized.
68% (5157 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 667.
944840 pairs of (a data error, a potential correction) are featurized.
68% (5157 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 579.
947992 pairs of (a data error, a potential correction) are featurized.
68% (5157 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 60.
954177 pairs of (a data error, a potential correction) are featurized.
68% (5157 / 7623) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1236.
966542 pairs of (a data error, a potential correction) are featurized.
68% (5157 / 7623) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_7_algo_2/repaired_dataset_7_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_7_algo_2/repaired_dataset_7_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_7.csv
运行时间: 1718.63 秒
[INFO] 运行聚类算法: AP，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7016675090927796, preference=-333
Number of clusters: 6
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_7/repaired_7.txt
Program completed in: 271.2589638233185 seconds

[INFO] 聚类完成: AP, 运行时间: 271.26 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_7/repaired_7.txt
Program completed in: 51.094380378723145 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 51.09 秒
[INFO] 运行聚类算法: GMM，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 12
Refining in range: 12 to 35
Final optimal number of components: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_7/repaired_7.txt
Program completed in: 115.57685875892639 seconds

[INFO] 聚类完成: GMM, 运行时间: 115.58 秒
[INFO] 运行聚类算法: HC，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_7/repaired_7.txt
Program completed in: 39.28335881233215 seconds

[INFO] 聚类完成: HC, 运行时间: 39.28 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 36
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 36
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_7/repaired_7.txt
Program completed in: 723.1926167011261 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 723.19 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_7/repaired_7.txt
Program completed in: 611.0257089138031 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 611.03 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 49.29%.csv, error_rate=49.29%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 11
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_11_algo_1/repaired_dataset_11_algo_1_49.29%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_11_algo_1/repaired_dataset_11_algo_1_49.29%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_11.csv
运行时间: 87.28 秒
[INFO] 运行聚类算法: AP，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8246943595489149, preference=-100
Number of clusters: 32
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_11/repaired_11.txt
Program completed in: 60.10639190673828 seconds

[INFO] 聚类完成: AP, 运行时间: 60.11 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 11, 清洗算法: mode
1098591 pairs of (a data error, a potential correction) are featurized.
40% (4585 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1539.
1119160 pairs of (a data error, a potential correction) are featurized.
40% (4585 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1128.
1131861 pairs of (a data error, a potential correction) are featurized.
40% (4600 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1587.
1149817 pairs of (a data error, a potential correction) are featurized.
41% (4607 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 438.
1167129 pairs of (a data error, a potential correction) are featurized.
41% (4607 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1940.
1189153 pairs of (a data error, a potential correction) are featurized.
41% (4614 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1672.
1208353 pairs of (a data error, a potential correction) are featurized.
41% (4614 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
1216011 pairs of (a data error, a potential correction) are featurized.
41% (4614 / 11374) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1465.
1254665 pairs of (a data error, a potential correction) are featurized.
41% (4614 / 11374) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_4_algo_2/repaired_dataset_4_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_4_algo_2/repaired_dataset_4_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_4.csv
运行时间: 1065.60 秒
[INFO] 运行聚类算法: AP，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7419183208235247, preference=-102
Number of clusters: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_4/repaired_4.txt
Program completed in: 21.88681650161743 seconds

[INFO] 聚类完成: AP, 运行时间: 21.89 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_4/repaired_4.txt
Program completed in: 9.34170651435852 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 9.34 秒
[INFO] 运行聚类算法: GMM，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 11
Refining in range: 11 to 22
Final optimal number of components: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_4/repaired_4.txt
Program completed in: 21.529028177261353 seconds

[INFO] 聚类完成: GMM, 运行时间: 21.53 秒
[INFO] 运行聚类算法: HC，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_4/repaired_4.txt
Program completed in: 9.329916954040527 seconds

[INFO] 聚类完成: HC, 运行时间: 9.33 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 22
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 22
Refined optimal number of clusters: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_4/repaired_4.txt
Program completed in: 73.05790567398071 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 73.06 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_4/repaired_4.txt
Program completed in: 78.21897387504578 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 78.22 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 62.87%.csv, error_rate=62.87%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 9
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_9_algo_1/repaired_dataset_9_algo_1_62.87%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_9_algo_1/repaired_dataset_9_algo_1_62.87%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_9.csv
运行时间: 42.06 秒
[INFO] 运行聚类算法: AP，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5290225767115934, preference=-382
Number of clusters: 2360
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_9/repaired_9.txt
Program completed in: 2211.9244463443756 seconds

[INFO] 聚类完成: AP, 运行时间: 2211.92 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 9, 清洗算法: mode
60% (3973 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1223.
705267 pairs of (a data error, a potential correction) are featurized.
60% (3973 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 574.
707928 pairs of (a data error, a potential correction) are featurized.
60% (3975 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1005.
712057 pairs of (a data error, a potential correction) are featurized.
61% (3989 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2229.
718966 pairs of (a data error, a potential correction) are featurized.
61% (3989 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1216.
725688 pairs of (a data error, a potential correction) are featurized.
61% (3989 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1391.
737552 pairs of (a data error, a potential correction) are featurized.
61% (4001 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 53.
744271 pairs of (a data error, a potential correction) are featurized.
61% (4001 / 6575) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1826.
752008 pairs of (a data error, a potential correction) are featurized.
61% (4001 / 6575) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_3_algo_2/repaired_dataset_3_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_3_algo_2/repaired_dataset_3_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_3.csv
运行时间: 1597.82 秒
[INFO] 运行聚类算法: AP，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8155042365949502, preference=-159
Number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_3/repaired_3.txt
Program completed in: 260.52982473373413 seconds

[INFO] 聚类完成: AP, 运行时间: 260.53 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_3/repaired_3.txt
Program completed in: 45.585365533828735 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 45.59 秒
[INFO] 运行聚类算法: GMM，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 33
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 6
Refining in range: 6 to 33
Final optimal number of components: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_3/repaired_3.txt
Program completed in: 79.29841232299805 seconds

[INFO] 聚类完成: GMM, 运行时间: 79.30 秒
[INFO] 运行聚类算法: HC，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=37, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_3/repaired_3.txt
Program completed in: 45.422743797302246 seconds

[INFO] 聚类完成: HC, 运行时间: 45.42 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 39
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 39
Refined optimal number of clusters: 38
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_3/repaired_3.txt
Program completed in: 777.1420023441315 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 777.14 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_3/repaired_3.txt
Program completed in: 1144.2459807395935 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1144.25 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 11.96%.csv, error_rate=11.96%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 12
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_12_algo_1/repaired_dataset_12_algo_1_11.96%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_12_algo_1/repaired_dataset_12_algo_1_11.96%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_12.csv
运行时间: 118.95 秒
[INFO] 运行聚类算法: AP，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6098459758425918, preference=-218
Number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_12/repaired_12.txt
Program completed in: 71.39874815940857 seconds

[INFO] 聚类完成: AP, 运行时间: 71.40 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 12, 清洗算法: mode
73% (4131 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 653.
856026 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2149.
856058 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 519.
865347 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1114.
873739 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 884.
881370 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 496.
881458 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2252.
885465 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1347.
888789 pairs of (a data error, a potential correction) are featurized.
73% (4141 / 5683) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_5_algo_2/repaired_dataset_5_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_5_algo_2/repaired_dataset_5_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_5.csv
运行时间: 1630.59 秒
[INFO] 运行聚类算法: AP，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.671532751959339, preference=-310
Number of clusters: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_5/repaired_5.txt
Program completed in: 231.9628541469574 seconds

[INFO] 聚类完成: AP, 运行时间: 231.96 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_5/repaired_5.txt
Program completed in: 43.67437720298767 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 43.67 秒
[INFO] 运行聚类算法: GMM，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 40
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 40
Final optimal number of components: 40
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_5/repaired_5.txt
Program completed in: 80.75695538520813 seconds

[INFO] 聚类完成: GMM, 运行时间: 80.76 秒
[INFO] 运行聚类算法: HC，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_5/repaired_5.txt
Program completed in: 45.27811646461487 seconds

[INFO] 聚类完成: HC, 运行时间: 45.28 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 40
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 40
Refined optimal number of clusters: 39
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_5/repaired_5.txt
Program completed in: 880.0294589996338 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 880.03 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_5/repaired_5.txt
Program completed in: 1414.4552364349365 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1414.46 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 27.96%.csv, error_rate=27.96%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 13
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_13_algo_1/repaired_dataset_13_algo_1_27.96%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_13_algo_1/repaired_dataset_13_algo_1_27.96%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_13.csv
运行时间: 152.61 秒
[INFO] 运行聚类算法: AP，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8753523768121154, preference=-112
Number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_13/repaired_13.txt
Program completed in: 81.87820076942444 seconds

[INFO] 聚类完成: AP, 运行时间: 81.88 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 13, 清洗算法: mode
57% (3285 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1737.
549430 pairs of (a data error, a potential correction) are featurized.
57% (3295 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1740.
552074 pairs of (a data error, a potential correction) are featurized.
59% (3380 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1612.
557637 pairs of (a data error, a potential correction) are featurized.
59% (3380 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1023.
559383 pairs of (a data error, a potential correction) are featurized.
59% (3387 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1169.
561711 pairs of (a data error, a potential correction) are featurized.
59% (3387 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1396.
562661 pairs of (a data error, a potential correction) are featurized.
59% (3387 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1295.
567929 pairs of (a data error, a potential correction) are featurized.
59% (3387 / 5746) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 596.
569093 pairs of (a data error, a potential correction) are featurized.
59% (3387 / 5746) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_6_algo_2/repaired_dataset_6_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_6_algo_2/repaired_dataset_6_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_6.csv
运行时间: 1461.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6346680799276722, preference=-463
Number of clusters: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_6/repaired_6.txt
Program completed in: 277.47944355010986 seconds

[INFO] 聚类完成: AP, 运行时间: 277.48 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_6/repaired_6.txt
Program completed in: 61.030168771743774 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 61.03 秒
[INFO] 运行聚类算法: GMM，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 7
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 10
Refining in range: 7 to 10
Final optimal number of components: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_6/repaired_6.txt
Program completed in: 73.68126821517944 seconds

[INFO] 聚类完成: GMM, 运行时间: 73.68 秒
[INFO] 运行聚类算法: HC，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_6/repaired_6.txt
Program completed in: 52.3088800907135 seconds

[INFO] 聚类完成: HC, 运行时间: 52.31 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 39
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 39
Refined optimal number of clusters: 37
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_6/repaired_6.txt
Program completed in: 835.468834400177 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 835.47 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_6/repaired_6.txt
Program completed in: 1402.313524723053 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1402.31 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 hospital，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: hospital (CSV: 8.53%.csv, error_rate=8.53%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 15
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_15_algo_1/repaired_dataset_15_algo_1_8.53%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_15_algo_1/repaired_dataset_15_algo_1_8.53%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_15.csv
运行时间: 116.36 秒
[INFO] 运行聚类算法: AP，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5788580454632932, preference=-415
Number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_15/repaired_15.txt
Program completed in: 65.32286357879639 seconds

[INFO] 聚类完成: AP, 运行时间: 65.32 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 15, 清洗算法: mode
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 140.
900187 pairs of (a data error, a potential correction) are featurized.
59% (5135 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 521.
910021 pairs of (a data error, a potential correction) are featurized.
59% (5135 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1507.
918495 pairs of (a data error, a potential correction) are featurized.
59% (5135 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 0.
928712 pairs of (a data error, a potential correction) are featurized.
59% (5136 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 64.
942680 pairs of (a data error, a potential correction) are featurized.
59% (5136 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1585.
942730 pairs of (a data error, a potential correction) are featurized.
60% (5163 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 484.
958551 pairs of (a data error, a potential correction) are featurized.
60% (5167 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 488.
970369 pairs of (a data error, a potential correction) are featurized.
60% (5167 / 8645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1340.
982019 pairs of (a data error, a potential correction) are featurized.
60% (5167 / 8645) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_8_algo_2/repaired_dataset_8_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_8_algo_2/repaired_dataset_8_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_8.csv
运行时间: 1679.18 秒
[INFO] 运行聚类算法: AP，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8314657921713429, preference=-101
Number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_8/repaired_8.txt
Program completed in: 88.68544936180115 seconds

[INFO] 聚类完成: AP, 运行时间: 88.69 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_8/repaired_8.txt
Program completed in: 28.347667932510376 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 28.35 秒
[INFO] 运行聚类算法: GMM，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 20
Final optimal number of components: 20
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_8/repaired_8.txt
Program completed in: 42.394856691360474 seconds

[INFO] 聚类完成: GMM, 运行时间: 42.39 秒
[INFO] 运行聚类算法: HC，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=24, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_8/repaired_8.txt
Program completed in: 24.807957649230957 seconds

[INFO] 聚类完成: HC, 运行时间: 24.81 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 34
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 34
Refined optimal number of clusters: 34
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_8/repaired_8.txt
Program completed in: 433.18085622787476 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 433.18 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_8/repaired_8.txt
Program completed in: 883.5619463920593 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 883.56 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 16.97%.csv, error_rate=16.97%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 10
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_10_algo_1/repaired_dataset_10_algo_1_16.97%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_10_algo_1/repaired_dataset_10_algo_1_16.97%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_10.csv
运行时间: 58.25 秒
[INFO] 运行聚类算法: AP，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.817235934144134, preference=-103
Number of clusters: 800
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_10/repaired_10.txt
Program completed in: 1620.67067694664 seconds

[INFO] 聚类完成: AP, 运行时间: 1620.67 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 10, 清洗算法: mode
58% (2409 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 436.
478395 pairs of (a data error, a potential correction) are featurized.
61% (2516 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 642.
480885 pairs of (a data error, a potential correction) are featurized.
61% (2516 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1105.
481963 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1951.
481963 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2267.
484453 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 95.
484453 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1094.
484453 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1534.
487994 pairs of (a data error, a potential correction) are featurized.
62% (2553 / 4151) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_0_algo_2/repaired_dataset_0_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_0_algo_2/repaired_dataset_0_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_0.csv
运行时间: 1472.13 秒
[INFO] 运行聚类算法: AP，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8828154437779977, preference=-203
Number of clusters: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_0/repaired_0.txt
Program completed in: 500.3831481933594 seconds

[INFO] 聚类完成: AP, 运行时间: 500.38 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_0/repaired_0.txt
Program completed in: 92.17111229896545 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 92.17 秒
[INFO] 运行聚类算法: GMM，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 30
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 6
Refining in range: 6 to 30
Final optimal number of components: 24
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_0/repaired_0.txt
Program completed in: 103.22843599319458 seconds

[INFO] 聚类完成: GMM, 运行时间: 103.23 秒
[INFO] 运行聚类算法: HC，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_0/repaired_0.txt
Program completed in: 68.46355509757996 seconds

[INFO] 聚类完成: HC, 运行时间: 68.46 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 41
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 41
Refined optimal number of clusters: 39
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_0/repaired_0.txt
Program completed in: 656.0760140419006 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 656.08 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_0/repaired_0.txt
Program completed in: 1478.9944310188293 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1478.99 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 21.65%.csv, error_rate=21.65%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 16
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_16_algo_1/repaired_dataset_16_algo_1_21.65%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_16_algo_1/repaired_dataset_16_algo_1_21.65%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_16.csv
运行时间: 169.32 秒
[INFO] 运行聚类算法: AP，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5906443152989035, preference=-266
Number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_16/repaired_16.txt
Program completed in: 83.12152194976807 seconds

[INFO] 聚类完成: AP, 运行时间: 83.12 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_12/repaired_12.txt
Program completed in: 80.01995921134949 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 80.02 秒
[INFO] 运行聚类算法: GMM，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 17
Final optimal number of components: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_12/repaired_12.txt
Program completed in: 47.71864295005798 seconds

[INFO] 聚类完成: GMM, 运行时间: 47.72 秒
[INFO] 运行聚类算法: HC，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=15, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_12/repaired_12.txt
Program completed in: 30.297855377197266 seconds

[INFO] 聚类完成: HC, 运行时间: 30.30 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 30
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_12/repaired_12.txt
Program completed in: 313.842586517334 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 313.84 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_12/repaired_12.txt
Program completed in: 364.62262320518494 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 364.62 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 12
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 157.
51417 pairs of (a data error, a potential correction) are featurized.
93% (3718 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 800.
56264 pairs of (a data error, a potential correction) are featurized.
93% (3745 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 712.
64037 pairs of (a data error, a potential correction) are featurized.
93% (3749 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 717.
69951 pairs of (a data error, a potential correction) are featurized.
94% (3751 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
74914 pairs of (a data error, a potential correction) are featurized.
94% (3759 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 901.
79774 pairs of (a data error, a potential correction) are featurized.
94% (3760 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 437.
85373 pairs of (a data error, a potential correction) are featurized.
94% (3764 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 294.
90928 pairs of (a data error, a potential correction) are featurized.
94% (3764 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
96574 pairs of (a data error, a potential correction) are featurized.
94% (3764 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 802.
102608 pairs of (a data error, a potential correction) are featurized.
95% (3805 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 630.
107466 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 62.
113082 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 508.
118628 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 101.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_11/repaired_11.txt
Program completed in: 49.926817893981934 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 49.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 31
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 10
Refining in range: 10 to 31
Final optimal number of components: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_11/repaired_11.txt
Program completed in: 61.345458030700684 seconds

[INFO] 聚类完成: GMM, 运行时间: 61.35 秒
[INFO] 运行聚类算法: HC，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=14, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_11/repaired_11.txt
Program completed in: 23.428130388259888 seconds

[INFO] 聚类完成: HC, 运行时间: 23.43 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_11/repaired_11.txt
Program completed in: 561.5356018543243 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 561.54 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_11/repaired_11.txt
Program completed in: 389.57505106925964 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 389.58 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 11
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 685.
328049 pairs of (a data error, a potential correction) are featurized.
70% (7961 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 896.
369920 pairs of (a data error, a potential correction) are featurized.
73% (8314 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 56.
405692 pairs of (a data error, a potential correction) are featurized.
75% (8535 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 539.
433967 pairs of (a data error, a potential correction) are featurized.
77% (8695 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 528.
460862 pairs of (a data error, a potential correction) are featurized.
78% (8808 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 691.
478477 pairs of (a data error, a potential correction) are featurized.
78% (8895 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 555.
509904 pairs of (a data error, a potential correction) are featurized.
79% (8982 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 817.
559249 pairs of (a data error, a potential correction) are featurized.
80% (9044 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 260.
605680 pairs of (a data error, a potential correction) are featurized.
80% (9125 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 733.
632456 pairs of (a data error, a potential correction) are featurized.
81% (9150 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 612.
673789 pairs of (a data error, a potential correction) are featurized.
81% (9196 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 868.
700043 pairs of (a data error, a potential correction) are featurized.
81% (9226 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 526.
721643 pairs of (a data error, a potential correction) are featurized.
81% (9241 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 920.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_15/repaired_15.txt
Program completed in: 78.13858461380005 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 78.14 秒
[INFO] 运行聚类算法: GMM，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 24
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 24
Final optimal number of components: 23
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_15/repaired_15.txt
Program completed in: 39.68450045585632 seconds

[INFO] 聚类完成: GMM, 运行时间: 39.68 秒
[INFO] 运行聚类算法: HC，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=11, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_15/repaired_15.txt
Program completed in: 22.606804609298706 seconds

[INFO] 聚类完成: HC, 运行时间: 22.61 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 30
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_15/repaired_15.txt
Program completed in: 299.5899212360382 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 299.59 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_15/repaired_15.txt
Program completed in: 369.13863468170166 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 369.14 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 15
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 460.
25530 pairs of (a data error, a potential correction) are featurized.
97% (3431 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 342.
30461 pairs of (a data error, a potential correction) are featurized.
97% (3433 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
35799 pairs of (a data error, a potential correction) are featurized.
97% (3436 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 320.
40793 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 480.
45699 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 930.
50605 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 0.
55487 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 400.
63086 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 526.
68315 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
73292 pairs of (a data error, a potential correction) are featurized.
97% (3437 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 665.
78242 pairs of (a data error, a potential correction) are featurized.
97% (3448 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 635.
83496 pairs of (a data error, a potential correction) are featurized.
97% (3448 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 904.
88394 pairs of (a data error, a potential correction) are featurized.
97% (3450 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 657.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_13/repaired_13.txt
Program completed in: 71.10352849960327 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 71.10 秒
[INFO] 运行聚类算法: GMM，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 10
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_13/repaired_13.txt
Program completed in: 62.323869705200195 seconds

[INFO] 聚类完成: GMM, 运行时间: 62.32 秒
[INFO] 运行聚类算法: HC，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_13/repaired_13.txt
Program completed in: 24.230764627456665 seconds

[INFO] 聚类完成: HC, 运行时间: 24.23 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_13/repaired_13.txt
Program completed in: 528.1302261352539 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 528.13 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_13/repaired_13.txt
Program completed in: 329.49545431137085 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 329.50 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 13
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 83.
165275 pairs of (a data error, a potential correction) are featurized.
84% (5863 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 208.
185518 pairs of (a data error, a potential correction) are featurized.
85% (5982 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 682.
196635 pairs of (a data error, a potential correction) are featurized.
86% (6061 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 847.
206669 pairs of (a data error, a potential correction) are featurized.
87% (6092 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 297.
214592 pairs of (a data error, a potential correction) are featurized.
87% (6097 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 63.
228623 pairs of (a data error, a potential correction) are featurized.
87% (6116 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 352.
243524 pairs of (a data error, a potential correction) are featurized.
88% (6144 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 421.
250013 pairs of (a data error, a potential correction) are featurized.
88% (6144 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 766.
261642 pairs of (a data error, a potential correction) are featurized.
88% (6152 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 437.
266597 pairs of (a data error, a potential correction) are featurized.
88% (6156 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
283282 pairs of (a data error, a potential correction) are featurized.
88% (6163 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 259.
302758 pairs of (a data error, a potential correction) are featurized.
88% (6178 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 650.
320058 pairs of (a data error, a potential correction) are featurized.
88% (6205 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 112.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 503.
139356 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 82.
139356 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 506.
139356 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 508.
139356 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2161.
139424 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1650.
140438 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 348.
140438 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1125.
140438 pairs of (a data error, a potential correction) are featurized.
91% (1336 / 1475) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_1_algo_2/repaired_dataset_1_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_1_algo_2/repaired_dataset_1_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_1.csv
运行时间: 1304.46 秒
[INFO] 运行聚类算法: AP，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8223537374736886, preference=-369
Number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_1/repaired_1.txt
Program completed in: 770.2967441082001 seconds

[INFO] 聚类完成: AP, 运行时间: 770.30 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_1/repaired_1.txt
Program completed in: 153.0423150062561 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 153.04 秒
[INFO] 运行聚类算法: GMM，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 6
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 9
Refining in range: 6 to 9
Final optimal number of components: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_1/repaired_1.txt
Program completed in: 152.32691264152527 seconds

[INFO] 聚类完成: GMM, 运行时间: 152.33 秒
[INFO] 运行聚类算法: HC，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_1/repaired_1.txt
Program completed in: 105.97382283210754 seconds

[INFO] 聚类完成: HC, 运行时间: 105.97 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 48
Refined optimal number of clusters: 46
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_1/repaired_1.txt
Program completed in: 762.7274649143219 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 762.73 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_1/repaired_1.txt
Program completed in: 3322.7718098163605 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3322.77 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 24.83%.csv, error_rate=24.83%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 17
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_17_algo_1/repaired_dataset_17_algo_1_24.83%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_17_algo_1/repaired_dataset_17_algo_1_24.83%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_17.csv
运行时间: 89.20 秒
[INFO] 运行聚类算法: AP，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7626554850211039, preference=-355
Number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_17/repaired_17.txt
Program completed in: 57.90192174911499 seconds

[INFO] 聚类完成: AP, 运行时间: 57.90 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_16/repaired_16.txt
Program completed in: 97.00722813606262 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 97.01 秒
[INFO] 运行聚类算法: GMM，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 15
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_16/repaired_16.txt
Program completed in: 66.3278329372406 seconds

[INFO] 聚类完成: GMM, 运行时间: 66.33 秒
[INFO] 运行聚类算法: HC，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_16/repaired_16.txt
Program completed in: 26.45440363883972 seconds

[INFO] 聚类完成: HC, 运行时间: 26.45 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_16/repaired_16.txt
Program completed in: 271.02983498573303 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 271.03 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_16/repaired_16.txt
Program completed in: 268.41952562332153 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 268.42 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 16
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 676.
129601 pairs of (a data error, a potential correction) are featurized.
88% (5179 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 879.
138395 pairs of (a data error, a potential correction) are featurized.
89% (5256 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 859.
146873 pairs of (a data error, a potential correction) are featurized.
90% (5298 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 518.
158824 pairs of (a data error, a potential correction) are featurized.
90% (5301 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
165941 pairs of (a data error, a potential correction) are featurized.
90% (5304 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 637.
177458 pairs of (a data error, a potential correction) are featurized.
90% (5310 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 117.
189324 pairs of (a data error, a potential correction) are featurized.
90% (5340 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 442.
200466 pairs of (a data error, a potential correction) are featurized.
92% (5412 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 84.
210719 pairs of (a data error, a potential correction) are featurized.
92% (5422 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 447.
215231 pairs of (a data error, a potential correction) are featurized.
92% (5423 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 631.
218017 pairs of (a data error, a potential correction) are featurized.
92% (5423 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
224698 pairs of (a data error, a potential correction) are featurized.
92% (5437 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 899.
226620 pairs of (a data error, a potential correction) are featurized.
92% (5437 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 929.
757711 pairs of (a data error, a potential correction) are featurized.
82% (9253 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 436.
778177 pairs of (a data error, a potential correction) are featurized.
82% (9265 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 187.
810172 pairs of (a data error, a potential correction) are featurized.
82% (9319 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 78.
856938 pairs of (a data error, a potential correction) are featurized.
83% (9408 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 312.
877641 pairs of (a data error, a potential correction) are featurized.
83% (9449 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 91.
899246 pairs of (a data error, a potential correction) are featurized.
83% (9449 / 11346) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 508.
925114 pairs of (a data error, a potential correction) are featurized.
83% (9449 / 11346) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_11_algo_2/repaired_dataset_11_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_11_algo_2/repaired_dataset_11_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_11.csv
运行时间: 2315.60 秒
[INFO] 运行聚类算法: AP，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5123508537166291, preference=-111
Number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_11/repaired_11.txt
Program completed in: 15.170114755630493 seconds

[INFO] 聚类完成: AP, 运行时间: 15.17 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_11/repaired_11.txt
Program completed in: 57.22546982765198 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 57.23 秒
[INFO] 运行聚类算法: GMM，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 15
Final optimal number of components: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_11/repaired_11.txt
Program completed in: 20.591569900512695 seconds

[INFO] 聚类完成: GMM, 运行时间: 20.59 秒
[INFO] 运行聚类算法: HC，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_11/repaired_11.txt
Program completed in: 12.337383031845093 seconds

[INFO] 聚类完成: HC, 运行时间: 12.34 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 18
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_11/repaired_11.txt
Program completed in: 106.76094007492065 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 106.76 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_11/repaired_11.txt
Program completed in: 50.436739921569824 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 50.44 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 36.52%.csv, error_rate=36.52%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 18
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_18_algo_1/repaired_dataset_18_algo_1_36.52%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_18_algo_1/repaired_dataset_18_algo_1_36.52%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_18.csv
运行时间: 107.56 秒
[INFO] 运行聚类算法: AP，数据集编号: 18, 清洗算法: mode
123485 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 218.
129784 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 658.
136082 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
141187 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 868.
146762 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 132.
151618 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 683.
157077 pairs of (a data error, a potential correction) are featurized.
95% (3808 / 4010) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_12_algo_2/repaired_dataset_12_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_12_algo_2/repaired_dataset_12_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_12.csv
运行时间: 1852.13 秒
[INFO] 运行聚类算法: AP，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8076739297800419, preference=-110
Number of clusters: 23
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_12/repaired_12.txt
Program completed in: 48.349512338638306 seconds

[INFO] 聚类完成: AP, 运行时间: 48.35 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_12/repaired_12.txt
Program completed in: 65.95776319503784 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 65.96 秒
[INFO] 运行聚类算法: GMM，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 29
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 10
Refining in range: 10 to 29
Final optimal number of components: 20
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_12/repaired_12.txt
Program completed in: 45.460832357406616 seconds

[INFO] 聚类完成: GMM, 运行时间: 45.46 秒
[INFO] 运行聚类算法: HC，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_12/repaired_12.txt
Program completed in: 21.163106441497803 seconds

[INFO] 聚类完成: HC, 运行时间: 21.16 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 29
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 29
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_12/repaired_12.txt
Program completed in: 339.32713985443115 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 339.33 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_12/repaired_12.txt
Program completed in: 226.8507068157196 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 226.85 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 15.34%.csv, error_rate=15.34%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 19
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_19_algo_1/repaired_dataset_19_algo_1_15.34%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_19_algo_1/repaired_dataset_19_algo_1_15.34%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_19.csv
运行时间: 138.44 秒
[INFO] 运行聚类算法: AP，数据集编号: 19, 清洗算法: mode
88715 pairs of (a data error, a potential correction) are featurized.
97% (3450 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 275.
93622 pairs of (a data error, a potential correction) are featurized.
97% (3451 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 995.
98864 pairs of (a data error, a potential correction) are featurized.
97% (3452 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 244.
103789 pairs of (a data error, a potential correction) are featurized.
97% (3452 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 679.
107040 pairs of (a data error, a potential correction) are featurized.
98% (3469 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 545.
112252 pairs of (a data error, a potential correction) are featurized.
98% (3469 / 3551) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 51.
117194 pairs of (a data error, a potential correction) are featurized.
98% (3469 / 3551) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_15_algo_2/repaired_dataset_15_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_15_algo_2/repaired_dataset_15_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_15.csv
运行时间: 1756.48 秒
[INFO] 运行聚类算法: AP，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7928552838087801, preference=-101
Number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_15/repaired_15.txt
Program completed in: 59.63442373275757 seconds

[INFO] 聚类完成: AP, 运行时间: 59.63 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_15/repaired_15.txt
Program completed in: 87.50539302825928 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 87.51 秒
[INFO] 运行聚类算法: GMM，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 24
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 24
Final optimal number of components: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_15/repaired_15.txt
Program completed in: 49.47397541999817 seconds

[INFO] 聚类完成: GMM, 运行时间: 49.47 秒
[INFO] 运行聚类算法: HC，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_15/repaired_15.txt
Program completed in: 25.0196795463562 seconds

[INFO] 聚类完成: HC, 运行时间: 25.02 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 30
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_15/repaired_15.txt
Program completed in: 217.50271677970886 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 217.50 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_15/repaired_15.txt
Program completed in: 330.67153310775757 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 330.67 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 46.52%.csv, error_rate=46.52%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 20
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_20_algo_1/repaired_dataset_20_algo_1_46.52%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_20_algo_1/repaired_dataset_20_algo_1_46.52%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_20.csv
运行时间: 164.34 秒
[INFO] 运行聚类算法: AP，数据集编号: 20, 清洗算法: mode
331093 pairs of (a data error, a potential correction) are featurized.
88% (6209 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 300.
338659 pairs of (a data error, a potential correction) are featurized.
89% (6218 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 170.
351003 pairs of (a data error, a potential correction) are featurized.
89% (6226 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
360214 pairs of (a data error, a potential correction) are featurized.
89% (6227 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 233.
366774 pairs of (a data error, a potential correction) are featurized.
89% (6227 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 343.
371645 pairs of (a data error, a potential correction) are featurized.
89% (6227 / 7017) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 542.
387451 pairs of (a data error, a potential correction) are featurized.
89% (6227 / 7017) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_13_algo_2/repaired_dataset_13_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_13_algo_2/repaired_dataset_13_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_13.csv
运行时间: 2071.80 秒
[INFO] 运行聚类算法: AP，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7108311096063757, preference=-150
Number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_13/repaired_13.txt
Program completed in: 26.653079986572266 seconds

[INFO] 聚类完成: AP, 运行时间: 26.65 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_13/repaired_13.txt
Program completed in: 72.67420554161072 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 72.67 秒
[INFO] 运行聚类算法: GMM，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 14
Refining in range: 14 to 15
Final optimal number of components: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_13/repaired_13.txt
Program completed in: 25.48329734802246 seconds

[INFO] 聚类完成: GMM, 运行时间: 25.48 秒
[INFO] 运行聚类算法: HC，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_13/repaired_13.txt
Program completed in: 17.145745754241943 seconds

[INFO] 聚类完成: HC, 运行时间: 17.15 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 25
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 25
Refined optimal number of clusters: 25
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_13/repaired_13.txt
Program completed in: 251.8488748073578 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 251.85 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_13/repaired_13.txt
Program completed in: 190.81524848937988 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 190.82 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 33.68%.csv, error_rate=33.68%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 21
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_21_algo_1/repaired_dataset_21_algo_1_33.68%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_21_algo_1/repaired_dataset_21_algo_1_33.68%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_21.csv
运行时间: 152.27 秒
[INFO] 运行聚类算法: AP，数据集编号: 21, 清洗算法: mode
238653 pairs of (a data error, a potential correction) are featurized.
92% (5437 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 843.
249263 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 543.
260435 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 19.
267893 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 581.
274411 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 406.
280229 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 55.
290295 pairs of (a data error, a potential correction) are featurized.
92% (5447 / 5910) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_16_algo_2/repaired_dataset_16_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_16_algo_2/repaired_dataset_16_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_16.csv
运行时间: 2166.33 秒
[INFO] 运行聚类算法: AP，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8944902367688645, preference=-320
Number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_16/repaired_16.txt
Program completed in: 91.09916067123413 seconds

[INFO] 聚类完成: AP, 运行时间: 91.10 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_16/repaired_16.txt
Program completed in: 72.38259434700012 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 72.38 秒
[INFO] 运行聚类算法: GMM，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 11
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 11
Refining in range: 11 to 13
Final optimal number of components: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_16/repaired_16.txt
Program completed in: 54.38175392150879 seconds

[INFO] 聚类完成: GMM, 运行时间: 54.38 秒
[INFO] 运行聚类算法: HC，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_16/repaired_16.txt
Program completed in: 22.950506448745728 seconds

[INFO] 聚类完成: HC, 运行时间: 22.95 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 27
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 27
Refined optimal number of clusters: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_16/repaired_16.txt
Program completed in: 358.50594329833984 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 358.51 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_16/repaired_16.txt
Program completed in: 191.195059299469 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 191.20 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 46.73%.csv, error_rate=46.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 22
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_22_algo_1/repaired_dataset_22_algo_1_46.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_22_algo_1/repaired_dataset_22_algo_1_46.73%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_22.csv
运行时间: 175.52 秒
[INFO] 运行聚类算法: AP，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_9/repaired_9.txt
Program completed in: 59.64956974983215 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 59.65 秒
[INFO] 运行聚类算法: GMM，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 18
Refining in range: 18 to 48
Final optimal number of components: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_9/repaired_9.txt
Program completed in: 44.10161805152893 seconds

[INFO] 聚类完成: GMM, 运行时间: 44.10 秒
[INFO] 运行聚类算法: HC，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=ward, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_9/repaired_9.txt
Program completed in: 77.47824001312256 seconds

[INFO] 聚类完成: HC, 运行时间: 77.48 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_9/repaired_9.txt
Program completed in: 217.15308380126953 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 217.15 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_9/repaired_9.txt
Program completed in: 3743.7169513702393 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3743.72 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 9
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 890.
958809 pairs of (a data error, a potential correction) are featurized.
44% (4600 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 187.
977221 pairs of (a data error, a potential correction) are featurized.
46% (4771 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1058.
1004337 pairs of (a data error, a potential correction) are featurized.
46% (4799 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1498.
1024799 pairs of (a data error, a potential correction) are featurized.
46% (4822 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 92.
1035968 pairs of (a data error, a potential correction) are featurized.
46% (4856 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1930.
1047996 pairs of (a data error, a potential correction) are featurized.
46% (4861 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 896.
1072255 pairs of (a data error, a potential correction) are featurized.
49% (5081 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1027.
1102160 pairs of (a data error, a potential correction) are featurized.
50% (5248 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1906.
1115382 pairs of (a data error, a potential correction) are featurized.
51% (5337 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1948.
1115667 pairs of (a data error, a potential correction) are featurized.
51% (5354 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 780.
1134690 pairs of (a data error, a potential correction) are featurized.
51% (5388 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1966.
1159744 pairs of (a data error, a potential correction) are featurized.
52% (5396 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 393.
1174730 pairs of (a data error, a potential correction) are featurized.
52% (5396 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 41.
1202995 pairs of (a data error, a potential correction) are featurized.
52% (5477 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1107.
1205633 pairs of (a data error, a potential correction) are featurized.
52% (5477 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2303.
1221949 pairs of (a data error, a potential correction) are featurized.
52% (5482 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1907.
1239716 pairs of (a data error, a potential correction) are featurized.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_17/repaired_17.txt
Program completed in: 57.20824432373047 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 57.21 秒
[INFO] 运行聚类算法: GMM，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 16
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 14
Refining in range: 14 to 16
Final optimal number of components: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_17/repaired_17.txt
Program completed in: 37.484609603881836 seconds

[INFO] 聚类完成: GMM, 运行时间: 37.48 秒
[INFO] 运行聚类算法: HC，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_17/repaired_17.txt
Program completed in: 24.256922006607056 seconds

[INFO] 聚类完成: HC, 运行时间: 24.26 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 31
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_17/repaired_17.txt
Program completed in: 414.9681258201599 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 414.97 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_17/repaired_17.txt
Program completed in: 359.4799335002899 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 359.48 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 17
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 47.
164207 pairs of (a data error, a potential correction) are featurized.
81% (5218 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 145.
177290 pairs of (a data error, a potential correction) are featurized.
82% (5276 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 776.
188565 pairs of (a data error, a potential correction) are featurized.
82% (5289 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 826.
196824 pairs of (a data error, a potential correction) are featurized.
83% (5325 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
206872 pairs of (a data error, a potential correction) are featurized.
83% (5348 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
219551 pairs of (a data error, a potential correction) are featurized.
84% (5394 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
233768 pairs of (a data error, a potential correction) are featurized.
84% (5451 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 348.
245266 pairs of (a data error, a potential correction) are featurized.
84% (5453 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 818.
250793 pairs of (a data error, a potential correction) are featurized.
84% (5453 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 156.
259556 pairs of (a data error, a potential correction) are featurized.
84% (5453 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 445.
269072 pairs of (a data error, a potential correction) are featurized.
85% (5464 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 518.
277189 pairs of (a data error, a potential correction) are featurized.
85% (5473 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 64.
285551 pairs of (a data error, a potential correction) are featurized.
85% (5496 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 938.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7049971615259588, preference=-284
Number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_19/repaired_19.txt
Program completed in: 98.24425935745239 seconds

[INFO] 聚类完成: AP, 运行时间: 98.24 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_19/repaired_19.txt
Program completed in: 87.23318433761597 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 87.23 秒
[INFO] 运行聚类算法: GMM，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 27
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 27
Final optimal number of components: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_19/repaired_19.txt
Program completed in: 68.88491296768188 seconds

[INFO] 聚类完成: GMM, 运行时间: 68.88 秒
[INFO] 运行聚类算法: HC，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_19/repaired_19.txt
Program completed in: 23.598340272903442 seconds

[INFO] 聚类完成: HC, 运行时间: 23.60 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 31
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_19/repaired_19.txt
Program completed in: 408.720908164978 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 408.72 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_19/repaired_19.txt
Program completed in: 368.3012435436249 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 368.30 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 19
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 896.
77245 pairs of (a data error, a potential correction) are featurized.
88% (4158 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 769.
85387 pairs of (a data error, a potential correction) are featurized.
89% (4200 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 37.
91367 pairs of (a data error, a potential correction) are featurized.
89% (4226 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
96439 pairs of (a data error, a potential correction) are featurized.
90% (4242 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 254.
102385 pairs of (a data error, a potential correction) are featurized.
90% (4248 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 884.
105388 pairs of (a data error, a potential correction) are featurized.
90% (4248 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 449.
116855 pairs of (a data error, a potential correction) are featurized.
90% (4250 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 68.
123885 pairs of (a data error, a potential correction) are featurized.
91% (4290 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 310.
135161 pairs of (a data error, a potential correction) are featurized.
91% (4291 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 479.
140026 pairs of (a data error, a potential correction) are featurized.
91% (4303 / 4724) of data errors are corrected.
------------------------------------------------------------------------
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8949166516850561, preference=-223
Number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_18/repaired_18.txt
Program completed in: 64.5177309513092 seconds

[INFO] 聚类完成: AP, 运行时间: 64.52 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_18/repaired_18.txt
Program completed in: 83.93101263046265 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 83.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 10
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_18/repaired_18.txt
Program completed in: 68.41760230064392 seconds

[INFO] 聚类完成: GMM, 运行时间: 68.42 秒
[INFO] 运行聚类算法: HC，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_18/repaired_18.txt
Program completed in: 28.880651473999023 seconds

[INFO] 聚类完成: HC, 运行时间: 28.88 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_18/repaired_18.txt
Program completed in: 617.9884932041168 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 617.99 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_18/repaired_18.txt
Program completed in: 348.9592981338501 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 348.96 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 18
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 584.
242327 pairs of (a data error, a potential correction) are featurized.
69% (5928 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 782.
272609 pairs of (a data error, a potential correction) are featurized.
81% (6944 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 16.
289815 pairs of (a data error, a potential correction) are featurized.
82% (7004 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
301298 pairs of (a data error, a potential correction) are featurized.
82% (7020 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 366.
323023 pairs of (a data error, a potential correction) are featurized.
83% (7070 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 351.
341972 pairs of (a data error, a potential correction) are featurized.
84% (7157 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 445.
357223 pairs of (a data error, a potential correction) are featurized.
85% (7281 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
362544 pairs of (a data error, a potential correction) are featurized.
86% (7320 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 74.
374051 pairs of (a data error, a potential correction) are featurized.
86% (7341 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 772.
389888 pairs of (a data error, a potential correction) are featurized.
86% (7370 / 8554) of data errors are corrected.
------------------------------------------------------------------------
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_10/repaired_10.txt
Program completed in: 107.42421555519104 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 107.42 秒
[INFO] 运行聚类算法: GMM，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 44
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 4
Refining in range: 4 to 44
Final optimal number of components: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_10/repaired_10.txt
Program completed in: 46.72973918914795 seconds

[INFO] 聚类完成: GMM, 运行时间: 46.73 秒
[INFO] 运行聚类算法: HC，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_10/repaired_10.txt
Program completed in: 90.99835252761841 seconds

[INFO] 聚类完成: HC, 运行时间: 91.00 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 15
Refining in range: 15 to 48
Refined optimal number of clusters: 42
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_10/repaired_10.txt
Program completed in: 246.96746611595154 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 246.97 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_10/repaired_10.txt
Program completed in: 3656.7553894519806 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 3656.76 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 10
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 885.
329206 pairs of (a data error, a potential correction) are featurized.
59% (2084 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 983.
331941 pairs of (a data error, a potential correction) are featurized.
64% (2253 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1835.
331993 pairs of (a data error, a potential correction) are featurized.
64% (2253 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1034.
332352 pairs of (a data error, a potential correction) are featurized.
65% (2294 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2071.
333348 pairs of (a data error, a potential correction) are featurized.
65% (2297 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 787.
335459 pairs of (a data error, a potential correction) are featurized.
68% (2388 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1775.
336789 pairs of (a data error, a potential correction) are featurized.
68% (2388 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 743.
336807 pairs of (a data error, a potential correction) are featurized.
68% (2390 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 187.
339185 pairs of (a data error, a potential correction) are featurized.
68% (2390 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1343.
343077 pairs of (a data error, a potential correction) are featurized.
69% (2411 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1357.
343077 pairs of (a data error, a potential correction) are featurized.
69% (2421 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2164.
345661 pairs of (a data error, a potential correction) are featurized.
69% (2421 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1968.
347164 pairs of (a data error, a potential correction) are featurized.
69% (2432 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1363.
347164 pairs of (a data error, a potential correction) are featurized.
69% (2437 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 538.
349039 pairs of (a data error, a potential correction) are featurized.
70% (2462 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1081.
349039 pairs of (a data error, a potential correction) are featurized.
70% (2462 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 506.
349039 pairs of (a data error, a potential correction) are featurized.
53% (5569 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 57.
1256761 pairs of (a data error, a potential correction) are featurized.
53% (5569 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1504.
1269228 pairs of (a data error, a potential correction) are featurized.
53% (5569 / 10468) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1457.
1303922 pairs of (a data error, a potential correction) are featurized.
53% (5569 / 10468) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_9_algo_2/repaired_dataset_9_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_9_algo_2/repaired_dataset_9_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_9.csv
运行时间: 1642.73 秒
[INFO] 运行聚类算法: AP，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6508005516287814, preference=-101
Number of clusters: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_9/repaired_9.txt
Program completed in: 57.72024655342102 seconds

[INFO] 聚类完成: AP, 运行时间: 57.72 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_9/repaired_9.txt
Program completed in: 15.550760984420776 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 15.55 秒
[INFO] 运行聚类算法: GMM，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 28
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 12
Refining in range: 12 to 28
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_9/repaired_9.txt
Program completed in: 36.54332995414734 seconds

[INFO] 聚类完成: GMM, 运行时间: 36.54 秒
[INFO] 运行聚类算法: HC，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_9/repaired_9.txt
Program completed in: 12.458329439163208 seconds

[INFO] 聚类完成: HC, 运行时间: 12.46 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 28
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 28
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_9/repaired_9.txt
Program completed in: 99.8739492893219 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 99.87 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_9/repaired_9.txt
Program completed in: 143.6937279701233 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 143.69 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 beers，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: beers (CSV: 31.73%.csv, error_rate=31.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 24
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_24_algo_1/repaired_dataset_24_algo_1_31.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_24_algo_1/repaired_dataset_24_algo_1_31.73%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_24.csv
运行时间: 91.18 秒
[INFO] 运行聚类算法: AP，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5572618341230644, preference=-436
Number of clusters: 946
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_24/repaired_24.txt
Program completed in: 146.87034606933594 seconds

[INFO] 聚类完成: AP, 运行时间: 146.87 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_24/repaired_24.txt
Program completed in: 19.822308778762817 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 19.82 秒
[INFO] 运行聚类算法: GMM，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 30
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 11
Refining in range: 11 to 30
Final optimal number of components: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_24/repaired_24.txt
Program completed in: 44.83836650848389 seconds

[INFO] 聚类完成: GMM, 运行时间: 44.84 秒
[INFO] 运行聚类算法: HC，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5120990342418321, preference=-406
Number of clusters: 111
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_20/repaired_20.txt
Program completed in: 116.32382535934448 seconds

[INFO] 聚类完成: AP, 运行时间: 116.32 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_20/repaired_20.txt
Program completed in: 89.62346410751343 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 89.62 秒
[INFO] 运行聚类算法: GMM，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 26
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 26
Final optimal number of components: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_20/repaired_20.txt
Program completed in: 95.8630781173706 seconds

[INFO] 聚类完成: GMM, 运行时间: 95.86 秒
[INFO] 运行聚类算法: HC，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_20/repaired_20.txt
Program completed in: 29.17506432533264 seconds

[INFO] 聚类完成: HC, 运行时间: 29.18 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_20/repaired_20.txt
Program completed in: 524.0514554977417 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 524.05 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_20/repaired_20.txt
Program completed in: 275.6209921836853 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 275.62 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 20
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
343975 pairs of (a data error, a potential correction) are featurized.
77% (7915 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 23.
374772 pairs of (a data error, a potential correction) are featurized.
79% (8122 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 598.
396638 pairs of (a data error, a potential correction) are featurized.
80% (8203 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 958.
411249 pairs of (a data error, a potential correction) are featurized.
82% (8400 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 201.
422520 pairs of (a data error, a potential correction) are featurized.
82% (8427 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 449.
454805 pairs of (a data error, a potential correction) are featurized.
83% (8555 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
472532 pairs of (a data error, a potential correction) are featurized.
84% (8589 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 405.
491246 pairs of (a data error, a potential correction) are featurized.
84% (8602 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 582.
516617 pairs of (a data error, a potential correction) are featurized.
84% (8659 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 339.
532512 pairs of (a data error, a potential correction) are featurized.
84% (8666 / 10269) of data errors are corrected.
------------------------------------------------------------------------
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8780489236556797, preference=-128
Number of clusters: 24
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_21/repaired_21.txt
Program completed in: 114.7446014881134 seconds

[INFO] 聚类完成: AP, 运行时间: 114.74 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_21/repaired_21.txt
Program completed in: 69.04944896697998 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 69.05 秒
[INFO] 运行聚类算法: GMM，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 28
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 28
Final optimal number of components: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_21/repaired_21.txt
Program completed in: 50.37632489204407 seconds

[INFO] 聚类完成: GMM, 运行时间: 50.38 秒
[INFO] 运行聚类算法: HC，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_21/repaired_21.txt
Program completed in: 23.356917142868042 seconds

[INFO] 聚类完成: HC, 运行时间: 23.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_21/repaired_21.txt
Program completed in: 427.5411915779114 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 427.54 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_21/repaired_21.txt
Program completed in: 294.8603720664978 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 294.86 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 21
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 48.
237139 pairs of (a data error, a potential correction) are featurized.
79% (6432 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 923.
257444 pairs of (a data error, a potential correction) are featurized.
81% (6575 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 318.
283144 pairs of (a data error, a potential correction) are featurized.
82% (6626 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 340.
298188 pairs of (a data error, a potential correction) are featurized.
83% (6749 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 568.
308448 pairs of (a data error, a potential correction) are featurized.
83% (6751 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 805.
333953 pairs of (a data error, a potential correction) are featurized.
84% (6796 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
349324 pairs of (a data error, a potential correction) are featurized.
84% (6830 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 441.
364168 pairs of (a data error, a potential correction) are featurized.
85% (6878 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 45.
365085 pairs of (a data error, a potential correction) are featurized.
85% (6885 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 833.
387137 pairs of (a data error, a potential correction) are featurized.
85% (6891 / 8110) of data errors are corrected.
------------------------------------------------------------------------
297238 pairs of (a data error, a potential correction) are featurized.
85% (5508 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 909.
306236 pairs of (a data error, a potential correction) are featurized.
85% (5516 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 827.
314212 pairs of (a data error, a potential correction) are featurized.
86% (5521 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 257.
324616 pairs of (a data error, a potential correction) are featurized.
86% (5528 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 217.
337135 pairs of (a data error, a potential correction) are featurized.
86% (5534 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 533.
341456 pairs of (a data error, a potential correction) are featurized.
86% (5534 / 6454) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 319.
350440 pairs of (a data error, a potential correction) are featurized.
86% (5534 / 6454) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_17_algo_2/repaired_dataset_17_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_17_algo_2/repaired_dataset_17_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_17.csv
运行时间: 2552.42 秒
[INFO] 运行聚类算法: AP，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5365142372771253, preference=-273
Number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_17/repaired_17.txt
Program completed in: 29.928431272506714 seconds

[INFO] 聚类完成: AP, 运行时间: 29.93 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_17/repaired_17.txt
Program completed in: 51.97615170478821 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 51.98 秒
[INFO] 运行聚类算法: GMM，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 3
Refining in range: 3 to 20
Final optimal number of components: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_17/repaired_17.txt
Program completed in: 42.70440101623535 seconds

[INFO] 聚类完成: GMM, 运行时间: 42.70 秒
[INFO] 运行聚类算法: HC，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_17/repaired_17.txt
Program completed in: 14.028226613998413 seconds

[INFO] 聚类完成: HC, 运行时间: 14.03 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 26
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 26
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_17/repaired_17.txt
Program completed in: 145.15053510665894 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 145.15 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_17/repaired_17.txt
Program completed in: 115.92173075675964 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 115.92 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 29.78%.csv, error_rate=29.78%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 25
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_25_algo_1/repaired_dataset_25_algo_1_29.78%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_25_algo_1/repaired_dataset_25_algo_1_29.78%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_25.csv
运行时间: 88.22 秒
[INFO] 运行聚类算法: AP，数据集编号: 25, 清洗算法: mode
The error corrector models are updated with new labeled tuple 297.
407126 pairs of (a data error, a potential correction) are featurized.
87% (7406 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 705.
436737 pairs of (a data error, a potential correction) are featurized.
87% (7432 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 832.
451931 pairs of (a data error, a potential correction) are featurized.
87% (7441 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 383.
477310 pairs of (a data error, a potential correction) are featurized.
87% (7452 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 24.
482011 pairs of (a data error, a potential correction) are featurized.
87% (7468 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 64.
504583 pairs of (a data error, a potential correction) are featurized.
88% (7492 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 966.
515016 pairs of (a data error, a potential correction) are featurized.
88% (7499 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 628.
529750 pairs of (a data error, a potential correction) are featurized.
88% (7545 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 793.
545107 pairs of (a data error, a potential correction) are featurized.
88% (7566 / 8554) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 440.
557196 pairs of (a data error, a potential correction) are featurized.
88% (7566 / 8554) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_18_algo_2/repaired_dataset_18_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_18_algo_2/repaired_dataset_18_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_18.csv
运行时间: 2380.83 秒
[INFO] 运行聚类算法: AP，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.659241368016313, preference=-465
Number of clusters: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_18/repaired_18.txt
Program completed in: 27.44107460975647 seconds

[INFO] 聚类完成: AP, 运行时间: 27.44 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_18/repaired_18.txt
Program completed in: 67.21973061561584 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 67.22 秒
[INFO] 运行聚类算法: GMM，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 17
Final optimal number of components: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_18/repaired_18.txt
Program completed in: 46.45600700378418 seconds

[INFO] 聚类完成: GMM, 运行时间: 46.46 秒
[INFO] 运行聚类算法: HC，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_18/repaired_18.txt
Program completed in: 15.69716477394104 seconds

[INFO] 聚类完成: HC, 运行时间: 15.70 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 23
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 23
Refined optimal number of clusters: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_18/repaired_18.txt
Program completed in: 287.3827645778656 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 287.38 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_18/repaired_18.txt
Program completed in: 142.58171963691711 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 142.58 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 45.08%.csv, error_rate=45.08%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 26
The error corrector models are updated with new labeled tuple 136.
145032 pairs of (a data error, a potential correction) are featurized.
91% (4305 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 478.
147313 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 360.
153346 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 676.
156239 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 776.
163253 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 607.
169939 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 636.
178047 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
182977 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 743.
188959 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
194286 pairs of (a data error, a potential correction) are featurized.
92% (4333 / 4724) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_19_algo_2/repaired_dataset_19_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_19_algo_2/repaired_dataset_19_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_19.csv
运行时间: 2148.15 秒
[INFO] 运行聚类算法: AP，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8962112239270539, preference=-193
Number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_19/repaired_19.txt
Program completed in: 54.55476498603821 seconds

[INFO] 聚类完成: AP, 运行时间: 54.55 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_19/repaired_19.txt
Program completed in: 66.40870213508606 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 66.41 秒
[INFO] 运行聚类算法: GMM，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 25
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 11
Refining in range: 11 to 25
Final optimal number of components: 25
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_19/repaired_19.txt
Program completed in: 42.01427602767944 seconds

[INFO] 聚类完成: GMM, 运行时间: 42.01 秒
[INFO] 运行聚类算法: HC，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_19/repaired_19.txt
Program completed in: 21.463903427124023 seconds

[INFO] 聚类完成: HC, 运行时间: 21.46 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 27
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 27
Refined optimal number of clusters: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_19/repaired_19.txt
Program completed in: 386.0037143230438 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 386.00 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_19/repaired_19.txt
Program completed in: 276.72564721107483 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 276.73 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 40.23%.csv, error_rate=40.23%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 27
The error corrector models are updated with new labeled tuple 716.
554293 pairs of (a data error, a potential correction) are featurized.
85% (8678 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 788.
569106 pairs of (a data error, a potential correction) are featurized.
85% (8698 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 303.
584167 pairs of (a data error, a potential correction) are featurized.
85% (8714 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 567.
592368 pairs of (a data error, a potential correction) are featurized.
85% (8726 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
602274 pairs of (a data error, a potential correction) are featurized.
85% (8730 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 820.
614018 pairs of (a data error, a potential correction) are featurized.
85% (8739 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 136.
628814 pairs of (a data error, a potential correction) are featurized.
85% (8743 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 108.
639677 pairs of (a data error, a potential correction) are featurized.
85% (8759 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 443.
641538 pairs of (a data error, a potential correction) are featurized.
85% (8774 / 10269) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 299.
649768 pairs of (a data error, a potential correction) are featurized.
85% (8774 / 10269) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_20_algo_2/repaired_dataset_20_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_20_algo_2/repaired_dataset_20_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_20.csv
运行时间: 2592.25 秒
[INFO] 运行聚类算法: AP，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5037277873121443, preference=-386
Number of clusters: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_20/repaired_20.txt
Program completed in: 23.347743272781372 seconds

[INFO] 聚类完成: AP, 运行时间: 23.35 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_20/repaired_20.txt
Program completed in: 50.86650276184082 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 50.87 秒
[INFO] 运行聚类算法: GMM，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 21
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 13 to 21
Final optimal number of components: 21
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_20/repaired_20.txt
Program completed in: 23.506787061691284 seconds

[INFO] 聚类完成: GMM, 运行时间: 23.51 秒
[INFO] 运行聚类算法: HC，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_20/repaired_20.txt
Program completed in: 13.140865087509155 seconds

[INFO] 聚类完成: HC, 运行时间: 13.14 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 21
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 21
Refined optimal number of clusters: 20
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_20/repaired_20.txt
Program completed in: 114.63956785202026 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 114.64 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_20/repaired_20.txt
Program completed in: 74.87402415275574 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 74.87 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 6.17%.csv, error_rate=6.17%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 28
The error corrector models are updated with new labeled tuple 413.
401638 pairs of (a data error, a potential correction) are featurized.
85% (6896 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 39.
418459 pairs of (a data error, a potential correction) are featurized.
86% (6958 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 594.
426476 pairs of (a data error, a potential correction) are featurized.
86% (6970 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 152.
449827 pairs of (a data error, a potential correction) are featurized.
86% (6982 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 715.
466549 pairs of (a data error, a potential correction) are featurized.
86% (6996 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 628.
484693 pairs of (a data error, a potential correction) are featurized.
87% (7032 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 408.
501526 pairs of (a data error, a potential correction) are featurized.
87% (7049 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 440.
508437 pairs of (a data error, a potential correction) are featurized.
87% (7093 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 966.
525408 pairs of (a data error, a potential correction) are featurized.
88% (7107 / 8110) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 22.
531965 pairs of (a data error, a potential correction) are featurized.
88% (7107 / 8110) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_21_algo_2/repaired_dataset_21_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_21_algo_2/repaired_dataset_21_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_21.csv
运行时间: 2562.18 秒
[INFO] 运行聚类算法: AP，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7903635777058843, preference=-151
Number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_21/repaired_21.txt
Program completed in: 34.032102823257446 seconds

[INFO] 聚类完成: AP, 运行时间: 34.03 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_21/repaired_21.txt
Program completed in: 60.49425029754639 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 60.49 秒
[INFO] 运行聚类算法: GMM，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 15
Refining in range: 15 to 20
Final optimal number of components: 20
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_21/repaired_21.txt
Program completed in: 24.340606927871704 seconds

[INFO] 聚类完成: GMM, 运行时间: 24.34 秒
[INFO] 运行聚类算法: HC，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=10, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_21/repaired_21.txt
Program completed in: 12.000900506973267 seconds

[INFO] 聚类完成: HC, 运行时间: 12.00 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 24
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 24
Refined optimal number of clusters: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_21/repaired_21.txt
Program completed in: 147.21225428581238 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 147.21 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_21/repaired_21.txt
Program completed in: 113.64459419250488 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 113.64 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 12.48%.csv, error_rate=12.48%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 29
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5283842731294839, preference=-338
Number of clusters: 1010
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_22/repaired_22.txt
Program completed in: 333.76390314102173 seconds

[INFO] 聚类完成: AP, 运行时间: 333.76 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_22/repaired_22.txt
Program completed in: 32.61183738708496 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 32.61 秒
[INFO] 运行聚类算法: GMM，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 21
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 21
Final optimal number of components: 21
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_22/repaired_22.txt
Program completed in: 41.29053735733032 seconds

[INFO] 聚类完成: GMM, 运行时间: 41.29 秒
[INFO] 运行聚类算法: HC，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=29, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_22/repaired_22.txt
Program completed in: 30.017829656600952 seconds

[INFO] 聚类完成: HC, 运行时间: 30.02 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_22/repaired_22.txt
Program completed in: 284.8451797962189 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 284.85 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_22/repaired_22.txt
Program completed in: 453.34013319015503 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 453.34 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 22
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 314.
1101148 pairs of (a data error, a potential correction) are featurized.
27% (4290 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1758.
1114608 pairs of (a data error, a potential correction) are featurized.
27% (4390 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 26.
1137473 pairs of (a data error, a potential correction) are featurized.
28% (4401 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1194.
1148631 pairs of (a data error, a potential correction) are featurized.
28% (4421 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 404.
1169183 pairs of (a data error, a potential correction) are featurized.
28% (4423 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2165.
1189937 pairs of (a data error, a potential correction) are featurized.
28% (4510 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1353.
1209712 pairs of (a data error, a potential correction) are featurized.
28% (4512 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 954.
1237275 pairs of (a data error, a potential correction) are featurized.
28% (4520 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1634.
1259542 pairs of (a data error, a potential correction) are featurized.
29% (4612 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1834.
1289196 pairs of (a data error, a potential correction) are featurized.
30% (4820 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2190.
1302657 pairs of (a data error, a potential correction) are featurized.
30% (4834 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1894.
1323092 pairs of (a data error, a potential correction) are featurized.
30% (4844 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1746.
1339363 pairs of (a data error, a potential correction) are featurized.
30% (4844 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2251.
1357027 pairs of (a data error, a potential correction) are featurized.
30% (4844 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1766.
1379312 pairs of (a data error, a potential correction) are featurized.
30% (4844 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 273.
1397132 pairs of (a data error, a potential correction) are featurized.
30% (4844 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1802.
1420749 pairs of (a data error, a potential correction) are featurized.
31% (4883 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 118.
1442210 pairs of (a data error, a potential correction) are featurized.
31% (4883 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1422.
1465939 pairs of (a data error, a potential correction) are featurized.
31% (4951 / 15997) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1345.
1495835 pairs of (a data error, a potential correction) are featurized.
31% (4989 / 15997) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_22_algo_2/repaired_dataset_22_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_22_algo_2/repaired_dataset_22_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_22.csv
运行时间: 3401.26 秒
[INFO] 运行聚类算法: AP，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7326050079473482, preference=-102
Number of clusters: 4
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_22/repaired_22.txt
Program completed in: 1.4504883289337158 seconds

[INFO] 聚类完成: AP, 运行时间: 1.45 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_22/repaired_22.txt
Program completed in: 4.244708061218262 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.24 秒
[INFO] 运行聚类算法: GMM，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 3
Refining in range: 3 to 10
Final optimal number of components: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_22/repaired_22.txt
Program completed in: 3.8745975494384766 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.87 秒
[INFO] 运行聚类算法: HC，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_22/repaired_22.txt
Program completed in: 4.7261879444122314 seconds

[INFO] 聚类完成: HC, 运行时间: 4.73 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 10
Optimal number of clusters from Kneedle: 4
Refining in range: 4 to 10
Refined optimal number of clusters: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_22/repaired_22.txt
Program completed in: 16.02013611793518 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 16.02 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_22/repaired_22.txt
Program completed in: 21.896694660186768 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 21.90 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 26.60%.csv, error_rate=26.6%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 30
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_30_algo_1/repaired_dataset_30_algo_1_26.60%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_30_algo_1/repaired_dataset_30_algo_1_26.60%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_30.csv
运行时间: 116.56 秒
[INFO] 运行聚类算法: AP，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8298084825503195, preference=-125
Number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_30/repaired_30.txt
Program completed in: 110.81327319145203 seconds

[INFO] 聚类完成: AP, 运行时间: 110.81 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_30/repaired_30.txt
Program completed in: 29.932815551757812 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 29.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=10, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_24/repaired_24.txt
Program completed in: 16.559898138046265 seconds

[INFO] 聚类完成: HC, 运行时间: 16.56 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 30
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_24/repaired_24.txt
Program completed in: 221.72561860084534 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 221.73 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_24/repaired_24.txt
Program completed in: 251.63386154174805 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 251.63 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 24
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 956.
1978711 pairs of (a data error, a potential correction) are featurized.
52% (6301 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
1985413 pairs of (a data error, a potential correction) are featurized.
53% (6325 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1676.
1994887 pairs of (a data error, a potential correction) are featurized.
53% (6431 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1965.
2002734 pairs of (a data error, a potential correction) are featurized.
54% (6444 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 554.
2015241 pairs of (a data error, a potential correction) are featurized.
54% (6460 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1117.
2019656 pairs of (a data error, a potential correction) are featurized.
54% (6463 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 204.
2034981 pairs of (a data error, a potential correction) are featurized.
54% (6520 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1279.
2043234 pairs of (a data error, a potential correction) are featurized.
55% (6607 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1864.
2051084 pairs of (a data error, a potential correction) are featurized.
55% (6649 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2050.
2063056 pairs of (a data error, a potential correction) are featurized.
55% (6669 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2390.
2086305 pairs of (a data error, a potential correction) are featurized.
55% (6670 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1208.
2100162 pairs of (a data error, a potential correction) are featurized.
55% (6683 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1345.
2112172 pairs of (a data error, a potential correction) are featurized.
56% (6692 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1259.
2115951 pairs of (a data error, a potential correction) are featurized.
56% (6703 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1377.
2131603 pairs of (a data error, a potential correction) are featurized.
56% (6703 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 54.
2137690 pairs of (a data error, a potential correction) are featurized.
56% (6703 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 258.
2156958 pairs of (a data error, a potential correction) are featurized.
56% (6728 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2015.
2168578 pairs of (a data error, a potential correction) are featurized.
57% (6841 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1300.
2176924 pairs of (a data error, a potential correction) are featurized.
57% (6841 / 12044) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1620.
2192691 pairs of (a data error, a potential correction) are featurized.
57% (6841 / 12044) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_24_algo_2/repaired_dataset_24_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_24_algo_2/repaired_dataset_24_algo_2.csv
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_27_algo_1/repaired_dataset_27_algo_1_40.23%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_27_algo_1/repaired_dataset_27_algo_1_40.23%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_27.csv
运行时间: 138.28 秒
[INFO] 运行聚类算法: AP，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5284980260812302, preference=-118
Number of clusters: 334
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_27/repaired_27.txt
Program completed in: 280.7088749408722 seconds

[INFO] 聚类完成: AP, 运行时间: 280.71 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_27/repaired_27.txt
Program completed in: 23.855996131896973 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 23.86 秒
[INFO] 运行聚类算法: GMM，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 29
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 14
Refining in range: 14 to 29
Final optimal number of components: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_27/repaired_27.txt
Program completed in: 25.751756191253662 seconds

[INFO] 聚类完成: GMM, 运行时间: 25.75 秒
[INFO] 运行聚类算法: HC，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_27/repaired_27.txt
Program completed in: 29.31950616836548 seconds

[INFO] 聚类完成: HC, 运行时间: 29.32 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 33
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 33
Refined optimal number of clusters: 33
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_27/repaired_27.txt
Program completed in: 320.0073709487915 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 320.01 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_27/repaired_27.txt
Program completed in: 469.0936949253082 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 469.09 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 27
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 848.
1064798 pairs of (a data error, a potential correction) are featurized.
32% (4910 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1305.
1085380 pairs of (a data error, a potential correction) are featurized.
32% (4927 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2112.
1104113 pairs of (a data error, a potential correction) are featurized.
34% (5136 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 758.
1114909 pairs of (a data error, a potential correction) are featurized.
35% (5255 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 61.
1132103 pairs of (a data error, a potential correction) are featurized.
35% (5255 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 468.
1143976 pairs of (a data error, a potential correction) are featurized.
35% (5369 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2203.
1153371 pairs of (a data error, a potential correction) are featurized.
35% (5370 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 727.
1168095 pairs of (a data error, a potential correction) are featurized.
35% (5370 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2334.
1181429 pairs of (a data error, a potential correction) are featurized.
35% (5384 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1112.
1201852 pairs of (a data error, a potential correction) are featurized.
35% (5391 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1158.
1224311 pairs of (a data error, a potential correction) are featurized.
36% (5428 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 452.
1239770 pairs of (a data error, a potential correction) are featurized.
36% (5428 / 15217) of data errors are corrected.
70% (2465 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 183.
349216 pairs of (a data error, a potential correction) are featurized.
75% (2629 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1166.
350603 pairs of (a data error, a potential correction) are featurized.
75% (2629 / 3518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2122.
350617 pairs of (a data error, a potential correction) are featurized.
77% (2722 / 3518) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_10_algo_2/repaired_dataset_10_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_10_algo_2/repaired_dataset_10_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_10.csv
运行时间: 1610.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7992163758554176, preference=-364
Number of clusters: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_10/repaired_10.txt
Program completed in: 672.2816038131714 seconds

[INFO] 聚类完成: AP, 运行时间: 672.28 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_10/repaired_10.txt
Program completed in: 113.74320340156555 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 113.74 秒
[INFO] 运行聚类算法: GMM，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 26
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 11
Refining in range: 11 to 26
Final optimal number of components: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_10/repaired_10.txt
Program completed in: 86.3858413696289 seconds

[INFO] 聚类完成: GMM, 运行时间: 86.39 秒
[INFO] 运行聚类算法: HC，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=11, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_10/repaired_10.txt
Program completed in: 71.07719898223877 seconds

[INFO] 聚类完成: HC, 运行时间: 71.08 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 46
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 46
Refined optimal number of clusters: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_10/repaired_10.txt
Program completed in: 525.1202943325043 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 525.12 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_10/repaired_10.txt
Program completed in: 2679.2056698799133 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 2679.21 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 20.34%.csv, error_rate=20.34%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 32
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_32_algo_1/repaired_dataset_32_algo_1_20.34%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_32_algo_1/repaired_dataset_32_algo_1_20.34%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_32.csv
运行时间: 92.60 秒
[INFO] 运行聚类算法: AP，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.825313229934197, preference=-102
Number of clusters: 25
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_32/repaired_32.txt
Program completed in: 136.96570467948914 seconds

[INFO] 聚类完成: AP, 运行时间: 136.97 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_32/repaired_32.txt
Program completed in: 32.93033218383789 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 32.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 35
Final optimal number of components: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_32/repaired_32.txt
Program completed in: 41.92207217216492 seconds

[INFO] 聚类完成: GMM, 运行时间: 41.92 秒
[INFO] 运行聚类算法: HC，数据集编号: 32, 清洗算法: mode
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_26_algo_1/repaired_dataset_26_algo_1_45.08%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_26_algo_1/repaired_dataset_26_algo_1_45.08%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_26.csv
运行时间: 160.05 秒
[INFO] 运行聚类算法: AP，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8056059061565986, preference=-433
Number of clusters: 329
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_26/repaired_26.txt
Program completed in: 381.2217366695404 seconds

[INFO] 聚类完成: AP, 运行时间: 381.22 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_26/repaired_26.txt
Program completed in: 43.97355508804321 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 43.97 秒
[INFO] 运行聚类算法: GMM，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 14
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 4
Refining in range: 4 to 14
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_26/repaired_26.txt
Program completed in: 53.92588710784912 seconds

[INFO] 聚类完成: GMM, 运行时间: 53.93 秒
[INFO] 运行聚类算法: HC，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_26/repaired_26.txt
Program completed in: 36.23420000076294 seconds

[INFO] 聚类完成: HC, 运行时间: 36.23 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_26/repaired_26.txt
Program completed in: 350.32056307792664 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 350.32 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_26/repaired_26.txt
Program completed in: 557.2738575935364 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 557.27 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 26
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1891.
2605902 pairs of (a data error, a potential correction) are featurized.
34% (4896 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 909.
2628384 pairs of (a data error, a potential correction) are featurized.
35% (5031 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1510.
2643644 pairs of (a data error, a potential correction) are featurized.
36% (5248 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 4.
2672513 pairs of (a data error, a potential correction) are featurized.
38% (5542 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1007.
2698833 pairs of (a data error, a potential correction) are featurized.
39% (5688 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1545.
2708933 pairs of (a data error, a potential correction) are featurized.
40% (5754 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2192.
2723721 pairs of (a data error, a potential correction) are featurized.
41% (5983 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 487.
2753984 pairs of (a data error, a potential correction) are featurized.
42% (6025 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 34.
2770101 pairs of (a data error, a potential correction) are featurized.
42% (6124 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1187.
2797021 pairs of (a data error, a potential correction) are featurized.
43% (6258 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 212.
2832862 pairs of (a data error, a potential correction) are featurized.
44% (6349 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1930.
2845951 pairs of (a data error, a potential correction) are featurized.
44% (6356 / 14518) of data errors are corrected.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7053063213129134, preference=-101
Number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_25/repaired_25.txt
Program completed in: 212.49471521377563 seconds

[INFO] 聚类完成: AP, 运行时间: 212.49 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_25/repaired_25.txt
Program completed in: 34.96968603134155 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 34.97 秒
[INFO] 运行聚类算法: GMM，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 39
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 13 to 39
Final optimal number of components: 36
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_25/repaired_25.txt
Program completed in: 64.37279343605042 seconds

[INFO] 聚类完成: GMM, 运行时间: 64.37 秒
[INFO] 运行聚类算法: HC，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_25/repaired_25.txt
Program completed in: 40.67448115348816 seconds

[INFO] 聚类完成: HC, 运行时间: 40.67 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 39
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 39
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_25/repaired_25.txt
Program completed in: 600.1632390022278 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 600.16 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_25/repaired_25.txt
Program completed in: 1263.7897293567657 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1263.79 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 25
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1219.
1986449 pairs of (a data error, a potential correction) are featurized.
55% (6593 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1761.
1993026 pairs of (a data error, a potential correction) are featurized.
56% (6668 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 34.
2001598 pairs of (a data error, a potential correction) are featurized.
58% (6862 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2142.
2012250 pairs of (a data error, a potential correction) are featurized.
59% (6967 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 165.
2024192 pairs of (a data error, a potential correction) are featurized.
62% (7317 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 833.
2029584 pairs of (a data error, a potential correction) are featurized.
62% (7346 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 596.
2035962 pairs of (a data error, a potential correction) are featurized.
62% (7358 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1522.
2045149 pairs of (a data error, a potential correction) are featurized.
62% (7411 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1058.
2050956 pairs of (a data error, a potential correction) are featurized.
62% (7411 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 8.
2055437 pairs of (a data error, a potential correction) are featurized.
62% (7412 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 884.
2063078 pairs of (a data error, a potential correction) are featurized.
62% (7413 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1163.
2068751 pairs of (a data error, a potential correction) are featurized.
63% (7451 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 521.
2075936 pairs of (a data error, a potential correction) are featurized.
63% (7452 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 77.
2087505 pairs of (a data error, a potential correction) are featurized.
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_28_algo_1/repaired_dataset_28_algo_1_6.17%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_28_algo_1/repaired_dataset_28_algo_1_6.17%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_28.csv
运行时间: 90.25 秒
[INFO] 运行聚类算法: AP，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5117238882967851, preference=-258
Number of clusters: 85
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_28/repaired_28.txt
Program completed in: 233.97651934623718 seconds

[INFO] 聚类完成: AP, 运行时间: 233.98 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_28/repaired_28.txt
Program completed in: 43.686774015426636 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 43.69 秒
[INFO] 运行聚类算法: GMM，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 21
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 16
Refining in range: 16 to 21
Final optimal number of components: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_28/repaired_28.txt
Program completed in: 54.915234088897705 seconds

[INFO] 聚类完成: GMM, 运行时间: 54.92 秒
[INFO] 运行聚类算法: HC，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_28/repaired_28.txt
Program completed in: 37.59629201889038 seconds

[INFO] 聚类完成: HC, 运行时间: 37.60 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 36
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 36
Refined optimal number of clusters: 32
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_28/repaired_28.txt
Program completed in: 426.2160255908966 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 426.22 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_28/repaired_28.txt
Program completed in: 644.0264496803284 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 644.03 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 28
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1002.
476516 pairs of (a data error, a potential correction) are featurized.
92% (4820 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 683.
476516 pairs of (a data error, a potential correction) are featurized.
92% (4821 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2043.
483286 pairs of (a data error, a potential correction) are featurized.
93% (4827 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 470.
484135 pairs of (a data error, a potential correction) are featurized.
93% (4854 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1617.
488089 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 992.
488500 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1419.
492175 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1255.
492338 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 630.
494895 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1996.
498947 pairs of (a data error, a potential correction) are featurized.
93% (4855 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2348.
502642 pairs of (a data error, a potential correction) are featurized.
93% (4857 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1618.
503377 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_29_algo_1/repaired_dataset_29_algo_1_12.48%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_29_algo_1/repaired_dataset_29_algo_1_12.48%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_29.csv
运行时间: 115.33 秒
[INFO] 运行聚类算法: AP，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7203090983963519, preference=-104
Number of clusters: 21
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_29/repaired_29.txt
Program completed in: 178.52692198753357 seconds

[INFO] 聚类完成: AP, 运行时间: 178.53 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_29/repaired_29.txt
Program completed in: 46.688141107559204 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 46.69 秒
[INFO] 运行聚类算法: GMM，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 14
Refining in range: 14 to 35
Final optimal number of components: 34
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_29/repaired_29.txt
Program completed in: 57.09047985076904 seconds

[INFO] 聚类完成: GMM, 运行时间: 57.09 秒
[INFO] 运行聚类算法: HC，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_29/repaired_29.txt
Program completed in: 33.78715801239014 seconds

[INFO] 聚类完成: HC, 运行时间: 33.79 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_29/repaired_29.txt
Program completed in: 356.6654336452484 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 356.67 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_29/repaired_29.txt
Program completed in: 437.7145299911499 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 437.71 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 29
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 165.
1636073 pairs of (a data error, a potential correction) are featurized.
77% (4766 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2210.
1638226 pairs of (a data error, a potential correction) are featurized.
80% (4943 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1119.
1643607 pairs of (a data error, a potential correction) are featurized.
83% (5126 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1957.
1645424 pairs of (a data error, a potential correction) are featurized.
83% (5162 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2285.
1650347 pairs of (a data error, a potential correction) are featurized.
84% (5176 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 570.
1658579 pairs of (a data error, a potential correction) are featurized.
84% (5177 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2168.
1660954 pairs of (a data error, a potential correction) are featurized.
84% (5205 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1839.
1663832 pairs of (a data error, a potential correction) are featurized.
84% (5205 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2218.
1668313 pairs of (a data error, a potential correction) are featurized.
84% (5228 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2278.
1673914 pairs of (a data error, a potential correction) are featurized.
84% (5229 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1718.
1674055 pairs of (a data error, a potential correction) are featurized.
84% (5229 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1782.
1674058 pairs of (a data error, a potential correction) are featurized.
84% (5229 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1382.
1253220 pairs of (a data error, a potential correction) are featurized.
36% (5479 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1730.
1267022 pairs of (a data error, a potential correction) are featurized.
36% (5483 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 487.
1281797 pairs of (a data error, a potential correction) are featurized.
36% (5494 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1779.
1298501 pairs of (a data error, a potential correction) are featurized.
36% (5500 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2401.
1312932 pairs of (a data error, a potential correction) are featurized.
36% (5500 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1500.
1330814 pairs of (a data error, a potential correction) are featurized.
37% (5600 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1138.
1341318 pairs of (a data error, a potential correction) are featurized.
37% (5600 / 15217) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 701.
1350724 pairs of (a data error, a potential correction) are featurized.
37% (5600 / 15217) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_27_algo_2/repaired_dataset_27_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_27_algo_2/repaired_dataset_27_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_27.csv
运行时间: 2898.67 秒
[INFO] 运行聚类算法: AP，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7209371173797702, preference=-103
Number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_27/repaired_27.txt
Program completed in: 8.187407970428467 seconds

[INFO] 聚类完成: AP, 运行时间: 8.19 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_27/repaired_27.txt
Program completed in: 7.471930265426636 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 7.47 秒
[INFO] 运行聚类算法: GMM，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 16
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 16
Final optimal number of components: 6
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_27/repaired_27.txt
Program completed in: 12.824558973312378 seconds

[INFO] 聚类完成: GMM, 运行时间: 12.82 秒
[INFO] 运行聚类算法: HC，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_27/repaired_27.txt
Program completed in: 7.287060976028442 seconds

[INFO] 聚类完成: HC, 运行时间: 7.29 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 18
Refined optimal number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_27/repaired_27.txt
Program completed in: 62.18402814865112 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 62.18 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_27/repaired_27.txt
Program completed in: 54.418614864349365 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 54.42 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 29.25%.csv, error_rate=29.25%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 33
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_33_algo_1/repaired_dataset_33_algo_1_29.25%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_33_algo_1/repaired_dataset_33_algo_1_29.25%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_33.csv
运行时间: 36.29 秒
[INFO] 运行聚类算法: AP，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5900473033271405, preference=-106
Number of clusters: 40
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_33/repaired_33.txt
Program completed in: 14.050006628036499 seconds

[INFO] 聚类完成: AP, 运行时间: 14.05 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 33, 清洗算法: mode
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1798.
2869547 pairs of (a data error, a potential correction) are featurized.
44% (6365 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 243.
2883226 pairs of (a data error, a potential correction) are featurized.
44% (6429 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2133.
2900532 pairs of (a data error, a potential correction) are featurized.
44% (6442 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 388.
2913368 pairs of (a data error, a potential correction) are featurized.
44% (6442 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 307.
2937860 pairs of (a data error, a potential correction) are featurized.
44% (6451 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2147.
2953223 pairs of (a data error, a potential correction) are featurized.
46% (6634 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1945.
2981578 pairs of (a data error, a potential correction) are featurized.
46% (6634 / 14518) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 17.
2990058 pairs of (a data error, a potential correction) are featurized.
46% (6634 / 14518) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_26_algo_2/repaired_dataset_26_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_26_algo_2/repaired_dataset_26_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_26.csv
运行时间: 3078.03 秒
[INFO] 运行聚类算法: AP，数据集编号: 26, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 20:45:40,527][0m A new study created in memory with name: no-name-93119903-fac3-43f3-a926-cf97e3c3171f[0m
[32m[I 2025-01-23 20:45:40,546][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.6103327547883205, 'preference': -208}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,563][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.5200872236825181, 'preference': -386}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,573][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.83240263527985, 'preference': -107}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,589][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.5472002899265352, 'preference': -172}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,597][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.8186474583814163, 'preference': -457}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,610][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.6370086076527499, 'preference': -133}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,617][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.5549988864321416, 'preference': -363}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,629][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.7314456133651287, 'preference': -265}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,642][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.6165264441949517, 'preference': -412}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,661][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.7795153673935178, 'preference': -472}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,683][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6650594105410419, 'preference': -244}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,702][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.5030128195994884, 'preference': -332}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,764][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.8990724727314535, 'preference': -210}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,783][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.5840700627196729, 'preference': -310}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,808][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.5005962230762129, 'preference': -397}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,831][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.6845746318592919, 'preference': -271}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,870][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.5882804965688474, 'preference': -202}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,911][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.6259588075821813, 'preference': -432}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,938][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.6997008546886866, 'preference': -264}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,961][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.5900866607894344, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:40,991][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.7364493036337222, 'preference': -498}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,015][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.6528965560120796, 'preference': -239}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,039][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7172036816985052, 'preference': -155}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,051][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.7419077320861702, 'preference': -189}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,063][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.6615374253903197, 'preference': -230}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,076][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6622616144014476, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,088][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.7407109932746857, 'preference': -115}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,103][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.7728053916586484, 'preference': -212}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,114][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.6747356900790785, 'preference': -164}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,129][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.776244165379626, 'preference': -102}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,145][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.7769822544331786, 'preference': -135}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,160][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.8156911773540495, 'preference': -172}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,177][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7682923377566319, 'preference': -102}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,193][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.8475239824292365, 'preference': -130}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,209][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.8095173562258097, 'preference': -132}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,233][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.5391104204697621, 'preference': -296}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,274][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7108479018934231, 'preference': -494}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,302][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7172538685822327, 'preference': -234}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,333][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.6148784771034161, 'preference': -174}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,360][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.6494569512488372, 'preference': -180}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,374][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6908794639959377, 'preference': -223}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,389][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6616920392223221, 'preference': -159}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,404][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.7446756171040071, 'preference': -147}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,419][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.6082288804671334, 'preference': -123}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,433][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5637249641471749, 'preference': -211}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,462][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.6354459376720422, 'preference': -251}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,480][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.6760837608004998, 'preference': -119}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,495][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.7965461994924583, 'preference': -154}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,512][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.8429293592933722, 'preference': -105}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,528][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.7588591661239308, 'preference': -114}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,539][0m A new study created in memory with name: no-name-0e89e99d-61b0-465f-82f1-8175a88ec94c[0m
[32m[I 2025-01-23 20:45:41,556][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.6823186823326939, 'preference': -276}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,561][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.738010818198341, 'preference': -354}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,573][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.7389709822971051, 'preference': -377}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,586][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7922713198325324, 'preference': -148}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,594][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.7732959015499417, 'preference': -187}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,601][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.5598221619314391, 'preference': -172}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,609][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.7228888262645455, 'preference': -136}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,617][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8518406736619644, 'preference': -316}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,624][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.5063081128411633, 'preference': -314}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,633][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.8368766898697181, 'preference': -102}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,647][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6382088846032069, 'preference': -484}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,660][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.6364072747756758, 'preference': -250}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,673][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.6631361988149365, 'preference': -396}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,685][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.6900044920471757, 'preference': -250}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,699][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.5806252040882188, 'preference': -389}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,716][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.7765692928723638, 'preference': -253}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,742][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.8878138338692186, 'preference': -447}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,759][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.5876493953086611, 'preference': -426}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,772][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.7917559932602707, 'preference': -246}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,796][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.8893115037615056, 'preference': -493}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,818][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.5882610879631517, 'preference': -445}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,831][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.5071509777416544, 'preference': -212}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,845][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.8953508162661123, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,859][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.6120307369273791, 'preference': -499}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,871][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.504328642593833, 'preference': -217}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,884][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.5472571894012676, 'preference': -288}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,897][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.6680847364776585, 'preference': -339}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,909][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.6206365301419859, 'preference': -223}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,924][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.5423819510909823, 'preference': -291}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,935][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6813876561462955, 'preference': -348}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,949][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.7205989034555513, 'preference': -339}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,960][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.6555540316890547, 'preference': -287}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,972][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.6920297833667194, 'preference': -363}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,985][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.7351849168598874, 'preference': -338}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:41,997][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.7125847699419094, 'preference': -333}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,012][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.52864944262662, 'preference': -465}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,023][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.5864031749602179, 'preference': -203}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,038][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7508449479711707, 'preference': -271}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,062][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.6061800883373638, 'preference': -178}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,094][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.8376316994834346, 'preference': -227}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,118][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.7556213144994297, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,131][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.5609136567916196, 'preference': -304}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,164][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5317673941919634, 'preference': -407}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,197][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.5601691853763651, 'preference': -321}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,211][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.6256133293133941, 'preference': -218}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,240][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.6604005677595904, 'preference': -277}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,261][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.674135652427269, 'preference': -295}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,277][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.5426100839177798, 'preference': -369}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,291][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.685327370899711, 'preference': -348}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,304][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.6468641464507474, 'preference': -317}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,311][0m A new study created in memory with name: no-name-194248fb-94fe-40b0-a0fe-95f3f79dc210[0m
[32m[I 2025-01-23 20:45:42,318][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.6110507014182475, 'preference': -202}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,326][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.8477610152310149, 'preference': -307}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,339][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.7539994393591969, 'preference': -391}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,346][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7636217303503274, 'preference': -148}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,353][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.5849662800977209, 'preference': -352}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,363][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.539903475686135, 'preference': -266}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,370][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.5613991809110731, 'preference': -307}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,386][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8004446123873477, 'preference': -287}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,403][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.8471313991908005, 'preference': -101}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,424][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.6783686954316868, 'preference': -311}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,452][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6412450555820078, 'preference': -473}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,481][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.8981210291243952, 'preference': -205}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,493][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.6335324569114509, 'preference': -209}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,511][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.5025597706894378, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,524][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7132129805142473, 'preference': -404}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,537][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.6136453253590838, 'preference': -157}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,550][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.6899200230147494, 'preference': -249}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,563][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.7427435048496936, 'preference': -436}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,577][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.629367607576526, 'preference': -145}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,590][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.683965195702486, 'preference': -252}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,623][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.7458819986845853, 'preference': -482}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,636][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.6048109756506785, 'preference': -152}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,655][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.6560942488500023, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,679][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.70853298942819, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,703][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.6032096940963247, 'preference': -182}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,715][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6523777604796247, 'preference': -114}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,728][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.6612503496968719, 'preference': -347}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,740][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.5530695310656997, 'preference': -186}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,754][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.5820634960351841, 'preference': -178}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,767][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6649010977785662, 'preference': -357}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,780][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.5195724326064799, 'preference': -230}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,793][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.5749515947857673, 'preference': -187}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,807][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.5486827055425545, 'preference': -345}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,844][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.5077658855625824, 'preference': -234}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,870][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.5295236437509561, 'preference': -283}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,899][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7753086395811672, 'preference': -255}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,927][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7434326462494365, 'preference': -129}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:42,960][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.6043813623024294, 'preference': -149}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,002][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.7064617544338623, 'preference': -123}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,045][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7133105804230504, 'preference': -168}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,082][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6136186128199511, 'preference': -104}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,095][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6513907062952139, 'preference': -123}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,109][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.6702128009080102, 'preference': -499}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,122][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.6279714777814502, 'preference': -437}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,136][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5577336281143163, 'preference': -340}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,149][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5893321438472277, 'preference': -196}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,162][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.5803725521742644, 'preference': -329}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,193][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.5641222063004443, 'preference': -374}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,226][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.5323347929316061, 'preference': -375}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 20:45:43,240][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.6653466101804353, 'preference': -322}. Best is trial 0 with value: -inf.[0m

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_26/repaired_26.txt
Program completed in: 3.0245871543884277 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.02 秒
[INFO] 运行聚类算法: GMM，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 6
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: None
Refining in range: 6 to 8
Final optimal number of components: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_26/repaired_26.txt
Program completed in: 5.830650568008423 seconds

[INFO] 聚类完成: GMM, 运行时间: 5.83 秒
[INFO] 运行聚类算法: HC，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_26/repaired_26.txt
Program completed in: 3.1931381225585938 seconds

[INFO] 聚类完成: HC, 运行时间: 3.19 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 7
Optimal number of clusters from Kneedle: None
No further refinement needed. Final optimal number of clusters: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_26/repaired_26.txt
Program completed in: 13.581722736358643 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 13.58 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_26/repaired_26.txt
Program completed in: 11.100101947784424 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 11.10 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 47.88%.csv, error_rate=47.88%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 34
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_34_algo_1/repaired_dataset_34_algo_1_47.88%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_34_algo_1/repaired_dataset_34_algo_1_47.88%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_34.csv
运行时间: 39.11 秒
[INFO] 运行聚类算法: AP，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5633593589129551, preference=-305
Number of clusters: 320
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_34/repaired_34.txt
Program completed in: 13.843359470367432 seconds

[INFO] 聚类完成: AP, 运行时间: 13.84 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_34/repaired_34.txt
Program completed in: 8.526344776153564 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.53 秒
[INFO] 运行聚类算法: GMM，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 18
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 9
Refining in range: 9 to 18
Final optimal number of components: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_34/repaired_34.txt
Program completed in: 6.889366388320923 seconds

[INFO] 聚类完成: GMM, 运行时间: 6.89 秒
[INFO] 运行聚类算法: HC，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_34/repaired_34.txt
Program completed in: 8.130822658538818 seconds

[INFO] 聚类完成: HC, 运行时间: 8.13 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 18
Refined optimal number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_34/repaired_34.txt
Program completed in: 60.46448564529419 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 60.46 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 34, 清洗算法: mode
63% (7462 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2301.
2094924 pairs of (a data error, a potential correction) are featurized.
63% (7463 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1375.
2104816 pairs of (a data error, a potential correction) are featurized.
63% (7464 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 221.
2115633 pairs of (a data error, a potential correction) are featurized.
63% (7465 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 594.
2122875 pairs of (a data error, a potential correction) are featurized.
63% (7535 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2082.
2133714 pairs of (a data error, a potential correction) are featurized.
63% (7535 / 11884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1565.
2133960 pairs of (a data error, a potential correction) are featurized.
63% (7536 / 11884) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_25_algo_2/repaired_dataset_25_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_25_algo_2/repaired_dataset_25_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_25.csv
运行时间: 3240.37 秒
[INFO] 运行聚类算法: AP，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8412885716440673, preference=-101
Number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_25/repaired_25.txt
Program completed in: 40.68473482131958 seconds

[INFO] 聚类完成: AP, 运行时间: 40.68 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_25/repaired_25.txt
Program completed in: 20.59627079963684 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.60 秒
[INFO] 运行聚类算法: GMM，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 28
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 10
Refining in range: 10 to 28
Final optimal number of components: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_25/repaired_25.txt
Program completed in: 36.41352701187134 seconds

[INFO] 聚类完成: GMM, 运行时间: 36.41 秒
[INFO] 运行聚类算法: HC，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_25/repaired_25.txt
Program completed in: 13.361863613128662 seconds

[INFO] 聚类完成: HC, 运行时间: 13.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 28
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 28
Refined optimal number of clusters: 28
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_25/repaired_25.txt
Program completed in: 160.2035448551178 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 160.20 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_25/repaired_25.txt
Program completed in: 228.00454092025757 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 228.00 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 13.79%.csv, error_rate=13.79%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 35
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_35_algo_1/repaired_dataset_35_algo_1_13.79%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_35_algo_1/repaired_dataset_35_algo_1_13.79%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_35.csv
运行时间: 46.05 秒
[INFO] 运行聚类算法: AP，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8035530281889065, preference=-108
Number of clusters: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_35/repaired_35.txt
Program completed in: 26.51269268989563 seconds

[INFO] 聚类完成: AP, 运行时间: 26.51 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_35/repaired_35.txt
Program completed in: 11.373548030853271 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 11.37 秒
[INFO] 运行聚类算法: GMM，数据集编号: 35, 清洗算法: mode
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_24.csv
运行时间: 3591.99 秒
[INFO] 运行聚类算法: AP，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6883972488752433, preference=-188
Number of clusters: 6
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_24/repaired_24.txt
Program completed in: 10.812197923660278 seconds

[INFO] 聚类完成: AP, 运行时间: 10.81 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_24/repaired_24.txt
Program completed in: 8.02591061592102 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.03 秒
[INFO] 运行聚类算法: GMM，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 17
Final optimal number of components: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_24/repaired_24.txt
Program completed in: 14.794676065444946 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.79 秒
[INFO] 运行聚类算法: HC，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_24/repaired_24.txt
Program completed in: 7.3939149379730225 seconds

[INFO] 聚类完成: HC, 运行时间: 7.39 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 19
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 19
Refined optimal number of clusters: 19
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_24/repaired_24.txt
Program completed in: 61.18714952468872 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 61.19 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_24/repaired_24.txt
Program completed in: 49.8407678604126 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 49.84 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 52.00%.csv, error_rate=52.0%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 31
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_31_algo_1/repaired_dataset_31_algo_1_52.00%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_31_algo_1/repaired_dataset_31_algo_1_52.00%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_31.csv
运行时间: 101.64 秒
[INFO] 运行聚类算法: AP，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5800796587288523, preference=-317
Number of clusters: 1731
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_31/repaired_31.txt
Program completed in: 785.081377029419 seconds

[INFO] 聚类完成: AP, 运行时间: 785.08 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_31/repaired_31.txt
Program completed in: 30.859128952026367 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 30.86 秒
[INFO] 运行聚类算法: GMM，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 5 to 13
Final optimal number of components: 5
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_31/repaired_31.txt
Program completed in: 61.39063262939453 seconds

[INFO] 聚类完成: GMM, 运行时间: 61.39 秒
[INFO] 运行聚类算法: HC，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=average, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_31/repaired_31.txt
Program completed in: 33.36728525161743 seconds

[INFO] 聚类完成: HC, 运行时间: 33.37 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 41
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 41
Refined optimal number of clusters: 38
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_31/repaired_31.txt
Program completed in: 428.337198972702 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 428.34 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_33/repaired_33.txt
Program completed in: 9.059316158294678 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 9.06 秒
[INFO] 运行聚类算法: GMM，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 7
Refining in range: 7 to 15
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_33/repaired_33.txt
Program completed in: 10.26804518699646 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.27 秒
[INFO] 运行聚类算法: HC，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_33/repaired_33.txt
Program completed in: 7.653282642364502 seconds

[INFO] 聚类完成: HC, 运行时间: 7.65 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 18
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_33/repaired_33.txt
Program completed in: 56.83639907836914 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 56.84 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_33/repaired_33.txt
Program completed in: 47.817556381225586 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 47.82 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 33
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 11.
755920 pairs of (a data error, a potential correction) are featurized.
30% (1127 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 848.
760198 pairs of (a data error, a potential correction) are featurized.
51% (1887 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 862.
763760 pairs of (a data error, a potential correction) are featurized.
57% (2116 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 712.
766091 pairs of (a data error, a potential correction) are featurized.
57% (2120 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 837.
769565 pairs of (a data error, a potential correction) are featurized.
57% (2121 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 637.
773600 pairs of (a data error, a potential correction) are featurized.
58% (2168 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 311.
775732 pairs of (a data error, a potential correction) are featurized.
58% (2169 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 78.
782106 pairs of (a data error, a potential correction) are featurized.
59% (2179 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 452.
788932 pairs of (a data error, a potential correction) are featurized.
60% (2233 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 336.
792537 pairs of (a data error, a potential correction) are featurized.
60% (2239 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 687.
797732 pairs of (a data error, a potential correction) are featurized.
60% (2239 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 31.
801888 pairs of (a data error, a potential correction) are featurized.
61% (2280 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 948.
803751 pairs of (a data error, a potential correction) are featurized.
61% (2282 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 191.
807624 pairs of (a data error, a potential correction) are featurized.
61% (2282 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
812366 pairs of (a data error, a potential correction) are featurized.
61% (2289 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1596.
1678522 pairs of (a data error, a potential correction) are featurized.
85% (5234 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1110.
1683054 pairs of (a data error, a potential correction) are featurized.
85% (5234 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 584.
1686626 pairs of (a data error, a potential correction) are featurized.
85% (5239 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 61.
1686626 pairs of (a data error, a potential correction) are featurized.
85% (5239 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 377.
1686626 pairs of (a data error, a potential correction) are featurized.
85% (5239 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1115.
1691566 pairs of (a data error, a potential correction) are featurized.
85% (5239 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1117.
1692179 pairs of (a data error, a potential correction) are featurized.
85% (5248 / 6191) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 623.
1692774 pairs of (a data error, a potential correction) are featurized.
85% (5260 / 6191) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_29_algo_2/repaired_dataset_29_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_29_algo_2/repaired_dataset_29_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_29.csv
运行时间: 3067.84 秒
[INFO] 运行聚类算法: AP，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8467106635911872, preference=-128
Number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_29/repaired_29.txt
Program completed in: 81.19523978233337 seconds

[INFO] 聚类完成: AP, 运行时间: 81.20 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_29/repaired_29.txt
Program completed in: 28.214305877685547 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 28.21 秒
[INFO] 运行聚类算法: GMM，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 13
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 15
Refining in range: 13 to 15
Final optimal number of components: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_29/repaired_29.txt
Program completed in: 57.53418469429016 seconds

[INFO] 聚类完成: GMM, 运行时间: 57.53 秒
[INFO] 运行聚类算法: HC，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_29/repaired_29.txt
Program completed in: 18.906975269317627 seconds

[INFO] 聚类完成: HC, 运行时间: 18.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_29/repaired_29.txt
Program completed in: 320.04849457740784 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 320.05 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_29/repaired_29.txt
Program completed in: 244.72511529922485 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 244.73 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 40.24%.csv, error_rate=40.24%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 36
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_36_algo_1/repaired_dataset_36_algo_1_40.24%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_36_algo_1/repaired_dataset_36_algo_1_40.24%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_36.csv
运行时间: 47.80 秒
[INFO] 运行聚类算法: AP，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5826100060204072, preference=-499
Number of clusters: 189
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_36/repaired_36.txt
Program completed in: 10.171308994293213 seconds

[INFO] 聚类完成: AP, 运行时间: 10.17 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 36, 清洗算法: mode
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1520.
503395 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 843.
507048 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1779.
507048 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1968.
511044 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 46.
511068 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2062.
514745 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 15.
514747 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1817.
518410 pairs of (a data error, a potential correction) are featurized.
93% (4858 / 5215) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_28_algo_2/repaired_dataset_28_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_28_algo_2/repaired_dataset_28_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_28.csv
运行时间: 2764.08 秒
[INFO] 运行聚类算法: AP，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6631935411365423, preference=-391
Number of clusters: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_28/repaired_28.txt
Program completed in: 130.13346672058105 seconds

[INFO] 聚类完成: AP, 运行时间: 130.13 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_28/repaired_28.txt
Program completed in: 35.7777373790741 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 35.78 秒
[INFO] 运行聚类算法: GMM，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 5 to 7
Final optimal number of components: 5
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_28/repaired_28.txt
Program completed in: 62.98240828514099 seconds

[INFO] 聚类完成: GMM, 运行时间: 62.98 秒
[INFO] 运行聚类算法: HC，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_28/repaired_28.txt
Program completed in: 26.356438159942627 seconds

[INFO] 聚类完成: HC, 运行时间: 26.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_28/repaired_28.txt
Program completed in: 477.59740138053894 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 477.60 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_28/repaired_28.txt
Program completed in: 464.04303884506226 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 464.04 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 rayyan，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 24.35%.csv, error_rate=24.35%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 38
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_38_algo_1/repaired_dataset_38_algo_1_24.35%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_38_algo_1/repaired_dataset_38_algo_1_24.35%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_38.csv
运行时间: 35.67 秒
[INFO] 运行聚类算法: AP，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5363776401380214, preference=-194
Number of clusters: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_38/repaired_38.txt
Program completed in: 18.002588987350464 seconds

[INFO] 聚类完成: AP, 运行时间: 18.00 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_34/repaired_34.txt
Program completed in: 54.724674463272095 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 54.72 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 34
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 0.
975178 pairs of (a data error, a potential correction) are featurized.
11% (607 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 348.
987158 pairs of (a data error, a potential correction) are featurized.
16% (836 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 615.
998282 pairs of (a data error, a potential correction) are featurized.
18% (972 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 164.
1004395 pairs of (a data error, a potential correction) are featurized.
18% (972 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 834.
1020491 pairs of (a data error, a potential correction) are featurized.
18% (984 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 948.
1025159 pairs of (a data error, a potential correction) are featurized.
28% (1483 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 204.
1036715 pairs of (a data error, a potential correction) are featurized.
28% (1483 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 598.
1043248 pairs of (a data error, a potential correction) are featurized.
29% (1565 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 515.
1051632 pairs of (a data error, a potential correction) are featurized.
30% (1628 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 226.
1059515 pairs of (a data error, a potential correction) are featurized.
30% (1628 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 518.
1066985 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 809.
1076508 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
1081950 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 156.
1097101 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 104.
1107666 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 361.
1118784 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 613.
1125369 pairs of (a data error, a potential correction) are featurized.
30% (1636 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 243.
1134507 pairs of (a data error, a potential correction) are featurized.
31% (1661 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 988.
1142382 pairs of (a data error, a potential correction) are featurized.
31% (1661 / 5386) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 150.
1150397 pairs of (a data error, a potential correction) are featurized.
31% (1661 / 5386) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_34_algo_2/repaired_dataset_34_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_34_algo_2/repaired_dataset_34_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_34.csv
运行时间: 1077.25 秒
[INFO] 运行聚类算法: AP，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 21:07:55,006][0m A new study created in memory with name: no-name-8e155d55-c4c9-4df5-836b-7e38705d5059[0m
[32m[I 2025-01-23 21:07:55,013][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7945278605887524, 'preference': -497}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,020][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.878432652428307, 'preference': -425}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,025][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6493573652864875, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,030][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7878295015132453, 'preference': -306}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,035][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.581143766934401, 'preference': -330}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,040][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.7721164416058013, 'preference': -246}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,045][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6593703416494318, 'preference': -444}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,049][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.6611139123752852, 'preference': -361}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,054][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.7189864181958503, 'preference': -219}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,070][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.8931031015817525, 'preference': -208}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,080][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.5366422040238775, 'preference': -125}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,099][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.8785651710199894, 'preference': -418}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,110][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.8340986619595289, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,121][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8150629181233257, 'preference': -402}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,141][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7278018889506478, 'preference': -451}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,158][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8525714903805669, 'preference': -374}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,169][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7642695968740283, 'preference': -472}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,186][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.7126537613319228, 'preference': -455}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,214][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8223077161189073, 'preference': -384}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,226][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.7629750157362347, 'preference': -490}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,237][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.6136063559936055, 'preference': -111}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,249][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.807261891044939, 'preference': -377}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,262][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7487479053543904, 'preference': -493}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,276][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.6111664912324853, 'preference': -114}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,304][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.5279466973507285, 'preference': -251}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,340][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.739118351895393, 'preference': -423}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,353][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.6857662508994476, 'preference': -155}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,364][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.5135044268237634, 'preference': -265}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,375][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.555479058172588, 'preference': -333}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,387][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6816755845485485, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,398][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.6121032307285097, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,410][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.5038537132014336, 'preference': -278}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,421][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.557777209968758, 'preference': -334}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,435][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.6226135143257826, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,475][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.6840836391701247, 'preference': -171}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,501][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7992749567830149, 'preference': -299}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,515][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.8527585257621897, 'preference': -469}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,541][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7857969788549313, 'preference': -435}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,568][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.8000608916465015, 'preference': -406}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,597][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7455866372239597, 'preference': -472}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,642][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6378297572793792, 'preference': -229}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,654][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.5849668342066963, 'preference': -500}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,664][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5845537158925583, 'preference': -107}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,676][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.6798666312959192, 'preference': -148}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,687][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5075540371488346, 'preference': -263}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,699][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.523388795297243, 'preference': -243}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,711][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.5453692950687018, 'preference': -334}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,723][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.5568560308934651, 'preference': -307}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,734][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.6953286933234407, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,746][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.6722720453270208, 'preference': -207}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,751][0m A new study created in memory with name: no-name-a5f37d79-5f74-4c6d-a93d-fa6509583b1f[0m
[32m[I 2025-01-23 21:07:55,757][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.8038735671262123, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,763][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.8356489842159147, 'preference': -292}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,776][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.577951895471327, 'preference': -295}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,780][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.6426002545212388, 'preference': -380}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,790][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.6166471547567556, 'preference': -494}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,801][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.8654002841333753, 'preference': -299}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,813][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6447106728022647, 'preference': -439}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,826][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8496583260839616, 'preference': -476}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,839][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.6666366313604094, 'preference': -357}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,844][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.6101515374351867, 'preference': -258}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,872][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.7621482844917711, 'preference': -134}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,898][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7544816418192171, 'preference': -207}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,921][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.798182624255538, 'preference': -207}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,950][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8921174572870727, 'preference': -149}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,976][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.5106689489242915, 'preference': -222}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:55,991][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8119268285678012, 'preference': -361}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,003][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7328186287662735, 'preference': -104}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,015][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.5121802891841882, 'preference': -213}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,028][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8130197685414523, 'preference': -372}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,040][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.7091087096165188, 'preference': -112}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,052][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.5003055639694727, 'preference': -166}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,064][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.5464116049865981, 'preference': -251}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,076][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7120486531733454, 'preference': -425}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,088][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.6860786457623578, 'preference': -166}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,100][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.5513802366699252, 'preference': -257}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,113][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.7787975212782479, 'preference': -333}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,125][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.7069173081419464, 'preference': -162}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,137][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.5624916323046465, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,150][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.7850596645795699, 'preference': -331}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,162][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.7685353860865745, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,175][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.7350257313421023, 'preference': -178}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,188][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.8263858359984765, 'preference': -327}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,201][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7791064632896887, 'preference': -274}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,214][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.7426688168066277, 'preference': -236}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,227][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.8331051756981899, 'preference': -321}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,238][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.5900309020753918, 'preference': -139}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,266][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.536995938437661, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,280][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.5299414276235883, 'preference': -415}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,312][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.6704109013539359, 'preference': -409}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,335][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.6631020006771167, 'preference': -241}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,348][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6924488686759107, 'preference': -469}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,379][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.8605542642805444, 'preference': -280}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,391][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.6224761748469813, 'preference': -156}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,406][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.8990141419480573, 'preference': -308}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,418][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5710719997996253, 'preference': -196}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,430][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5715450107293657, 'preference': -127}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,443][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.7896388409804941, 'preference': -343}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,455][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.7957769992060126, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,468][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.7625005377941394, 'preference': -288}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,480][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.7211339639957086, 'preference': -189}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,486][0m A new study created in memory with name: no-name-d40170e4-5478-49a9-be0d-f1af22eb929e[0m
[32m[I 2025-01-23 21:07:56,491][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7977271426568823, 'preference': -443}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,497][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.7891534038896106, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,502][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6182475650326287, 'preference': -193}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,506][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7232262700429881, 'preference': -354}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,511][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.5071326485212442, 'preference': -132}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,516][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.5584975892857422, 'preference': -175}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,521][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.5089553336176696, 'preference': -365}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,534][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8173159311662948, 'preference': -467}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,542][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.7006782972572305, 'preference': -403}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,551][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.6841285770817052, 'preference': -285}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,577][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.8765945900676221, 'preference': -491}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,604][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7868855617183963, 'preference': -259}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,636][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.8077640870723182, 'preference': -105}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,668][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8932342115369729, 'preference': -239}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,692][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7556223832486579, 'preference': -432}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,707][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8428498897116767, 'preference': -325}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,719][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7594886796474938, 'preference': -410}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,730][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.650115152919124, 'preference': -441}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,744][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8516370326023597, 'preference': -327}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,756][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.7471433632697233, 'preference': -405}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,768][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.6413995887594723, 'preference': -446}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,781][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.8539756015771751, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,793][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7510567288879231, 'preference': -377}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,805][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.6133727470145802, 'preference': -463}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,817][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.6596042319354344, 'preference': -493}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,830][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.8424999009673246, 'preference': -378}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,842][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.5864214288790729, 'preference': -467}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,853][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.6744944100742691, 'preference': -497}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,875][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.8280896060642036, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,892][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.5841294508777038, 'preference': -430}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,924][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.5450810615238634, 'preference': -468}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,948][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.7995471601062601, 'preference': -461}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,971][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7048761573118542, 'preference': -420}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:56,984][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.5441325625748971, 'preference': -390}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,016][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.7875293654614116, 'preference': -457}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,046][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.867815642384591, 'preference': -444}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,074][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7454475728630402, 'preference': -355}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,087][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7273866914593351, 'preference': -327}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,099][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.7775213582266116, 'preference': -481}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,112][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7208159093844912, 'preference': -371}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,123][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6254993311051152, 'preference': -417}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,136][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6658477133643308, 'preference': -378}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,149][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5990443586927263, 'preference': -477}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,163][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.5945457086438777, 'preference': -460}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,176][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.6706087367637477, 'preference': -497}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,189][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5711356237530236, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,203][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.8234915875464107, 'preference': -390}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,218][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.8223492652656167, 'preference': -299}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,231][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.5223214611587299, 'preference': -424}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:07:57,244][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.57627122074967, 'preference': -227}. Best is trial 0 with value: -inf.[0m
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 377.
816523 pairs of (a data error, a potential correction) are featurized.
61% (2289 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 494.
818409 pairs of (a data error, a potential correction) are featurized.
61% (2289 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 202.
825624 pairs of (a data error, a potential correction) are featurized.
64% (2371 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 226.
827002 pairs of (a data error, a potential correction) are featurized.
66% (2461 / 3723) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 298.
830311 pairs of (a data error, a potential correction) are featurized.
66% (2461 / 3723) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_33_algo_2/repaired_dataset_33_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_33_algo_2/repaired_dataset_33_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_33.csv
运行时间: 1270.69 秒
[INFO] 运行聚类算法: AP，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6766494745061898, preference=-101
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_33/repaired_33.txt
Program completed in: 0.8907809257507324 seconds

[INFO] 聚类完成: AP, 运行时间: 0.89 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_33/repaired_33.txt
Program completed in: 4.118030071258545 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.12 秒
[INFO] 运行聚类算法: GMM，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: None
Refining in range: 8 to 10
Final optimal number of components: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_33/repaired_33.txt
Program completed in: 4.786843299865723 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.79 秒
[INFO] 运行聚类算法: HC，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_33/repaired_33.txt
Program completed in: 3.9006903171539307 seconds

[INFO] 聚类完成: HC, 运行时间: 3.90 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 8
Optimal number of clusters from Kneedle: None
No further refinement needed. Final optimal number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_33/repaired_33.txt
Program completed in: 13.0746910572052 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 13.07 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_33/repaired_33.txt
Program completed in: 15.475816488265991 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 15.48 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 10.75%.csv, error_rate=10.75%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 39
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_39_algo_1/repaired_dataset_39_algo_1_10.75%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_39_algo_1/repaired_dataset_39_algo_1_10.75%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_39.csv
运行时间: 37.37 秒
[INFO] 运行聚类算法: AP，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7268402784476945, preference=-429
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_39/repaired_39.txt
Program completed in: 24.925330877304077 seconds

[INFO] 聚类完成: AP, 运行时间: 24.93 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 11
Refining in range: 11 to 35
Final optimal number of components: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_30/repaired_30.txt
Program completed in: 33.8196542263031 seconds

[INFO] 聚类完成: GMM, 运行时间: 33.82 秒
[INFO] 运行聚类算法: HC，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_30/repaired_30.txt
Program completed in: 22.99158000946045 seconds

[INFO] 聚类完成: HC, 运行时间: 22.99 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 35
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_30/repaired_30.txt
Program completed in: 232.48006772994995 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 232.48 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_30/repaired_30.txt
Program completed in: 471.9557695388794 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 471.96 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 30
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 286.
1225809 pairs of (a data error, a potential correction) are featurized.
58% (6112 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1140.
1234255 pairs of (a data error, a potential correction) are featurized.
59% (6180 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 836.
1237676 pairs of (a data error, a potential correction) are featurized.
59% (6180 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1079.
1247423 pairs of (a data error, a potential correction) are featurized.
60% (6255 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 480.
1249944 pairs of (a data error, a potential correction) are featurized.
60% (6264 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 605.
1256696 pairs of (a data error, a potential correction) are featurized.
60% (6289 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 720.
1266148 pairs of (a data error, a potential correction) are featurized.
62% (6495 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 352.
1269860 pairs of (a data error, a potential correction) are featurized.
62% (6547 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2356.
1272992 pairs of (a data error, a potential correction) are featurized.
63% (6581 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 127.
1276808 pairs of (a data error, a potential correction) are featurized.
63% (6642 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2380.
1283764 pairs of (a data error, a potential correction) are featurized.
64% (6677 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1240.
1288472 pairs of (a data error, a potential correction) are featurized.
64% (6682 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 991.
1295970 pairs of (a data error, a potential correction) are featurized.
64% (6726 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 558.
1299050 pairs of (a data error, a potential correction) are featurized.
65% (6792 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1643.
1304317 pairs of (a data error, a potential correction) are featurized.
66% (6969 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 354.
1309798 pairs of (a data error, a potential correction) are featurized.
66% (6969 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1183.
1318861 pairs of (a data error, a potential correction) are featurized.
67% (6975 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1249.
1326789 pairs of (a data error, a potential correction) are featurized.
67% (6975 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1789.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 6
Refining in range: 6 to 10
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_35/repaired_35.txt
Program completed in: 15.515432357788086 seconds

[INFO] 聚类完成: GMM, 运行时间: 15.52 秒
[INFO] 运行聚类算法: HC，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=17, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_35/repaired_35.txt
Program completed in: 9.301645040512085 seconds

[INFO] 聚类完成: HC, 运行时间: 9.30 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 17
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_35/repaired_35.txt
Program completed in: 56.338051080703735 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 56.34 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_35/repaired_35.txt
Program completed in: 45.760661363601685 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 45.76 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 35
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 425.
323316 pairs of (a data error, a potential correction) are featurized.
48% (1187 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 421.
325627 pairs of (a data error, a potential correction) are featurized.
51% (1256 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 570.
329304 pairs of (a data error, a potential correction) are featurized.
80% (1979 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 409.
332321 pairs of (a data error, a potential correction) are featurized.
80% (1979 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 535.
334218 pairs of (a data error, a potential correction) are featurized.
80% (1979 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 905.
334382 pairs of (a data error, a potential correction) are featurized.
80% (1983 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 942.
336903 pairs of (a data error, a potential correction) are featurized.
81% (2002 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
339790 pairs of (a data error, a potential correction) are featurized.
81% (2002 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 339.
340917 pairs of (a data error, a potential correction) are featurized.
81% (2002 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 255.
345162 pairs of (a data error, a potential correction) are featurized.
81% (2010 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 75.
347578 pairs of (a data error, a potential correction) are featurized.
82% (2019 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 720.
348994 pairs of (a data error, a potential correction) are featurized.
82% (2020 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 908.
350348 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 226.
352534 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 602.
354928 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 310.
356650 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 805.
357224 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 34, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_34/repaired_34.txt
Program completed in: 3.018643856048584 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.02 秒
[INFO] 运行聚类算法: GMM，数据集编号: 34, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: tied
Kneedle failed to detect an elbow point. Using Optuna's result as a reference.
Refining in range: 5 to 7
Final optimal number of components: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_34/repaired_34.txt
Program completed in: 2.3490869998931885 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.35 秒
[INFO] 运行聚类算法: HC，数据集编号: 34, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=complete, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_34/repaired_34.txt
Program completed in: 2.3915443420410156 seconds

[INFO] 聚类完成: HC, 运行时间: 2.39 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 21:08:15,013][0m A new study created in memory with name: no-name-877ebec9-40df-46c7-9439-2b83d8f2eeef[0m
[33m[W 2025-01-23 21:08:15,020][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=4).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=4).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 69, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=4).

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 34, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_34/repaired_34.txt
Program completed in: 9.802872896194458 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 9.80 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 22.77%.csv, error_rate=22.77%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 40
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_40_algo_1/repaired_dataset_40_algo_1_22.77%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_40_algo_1/repaired_dataset_40_algo_1_22.77%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_40.csv
运行时间: 44.79 秒
[INFO] 运行聚类算法: AP，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7776853557722471, preference=-114
Number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_40/repaired_40.txt
Program completed in: 13.402556657791138 seconds

[INFO] 聚类完成: AP, 运行时间: 13.40 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_40/repaired_40.txt
Program completed in: 8.42208981513977 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.42 秒
[INFO] 运行聚类算法: GMM，数据集编号: 40, 清洗算法: mode
The error corrector models are updated with new labeled tuple 20.
360527 pairs of (a data error, a potential correction) are featurized.
82% (2031 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 699.
360533 pairs of (a data error, a potential correction) are featurized.
82% (2034 / 2474) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 698.
360533 pairs of (a data error, a potential correction) are featurized.
82% (2034 / 2474) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_35_algo_2/repaired_dataset_35_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_35_algo_2/repaired_dataset_35_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_35.csv
运行时间: 1043.07 秒
[INFO] 运行聚类算法: AP，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7505563787264162, preference=-134
Number of clusters: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_35/repaired_35.txt
Program completed in: 9.351890087127686 seconds

[INFO] 聚类完成: AP, 运行时间: 9.35 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_35/repaired_35.txt
Program completed in: 7.279259204864502 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 7.28 秒
[INFO] 运行聚类算法: GMM，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 10
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_35/repaired_35.txt
Program completed in: 8.904342651367188 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.90 秒
[INFO] 运行聚类算法: HC，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_35/repaired_35.txt
Program completed in: 7.077885627746582 seconds

[INFO] 聚类完成: HC, 运行时间: 7.08 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 16
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 16
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_35/repaired_35.txt
Program completed in: 46.93257164955139 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 46.93 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_35/repaired_35.txt
Program completed in: 38.17496991157532 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 38.17 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 19.71%.csv, error_rate=19.71%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 41
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_41_algo_1/repaired_dataset_41_algo_1_19.71%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_41_algo_1/repaired_dataset_41_algo_1_19.71%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_41.csv
运行时间: 45.83 秒
[INFO] 运行聚类算法: AP，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6581233906572098, preference=-113
Number of clusters: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_41/repaired_41.txt
Program completed in: 12.282652854919434 seconds

[INFO] 聚类完成: AP, 运行时间: 12.28 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_41/repaired_41.txt
Program completed in: 8.152806282043457 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.15 秒
[INFO] 运行聚类算法: GMM，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_36/repaired_36.txt
Program completed in: 6.429076671600342 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 6.43 秒
[INFO] 运行聚类算法: GMM，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 14
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 14
Final optimal number of components: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_36/repaired_36.txt
Program completed in: 6.0964601039886475 seconds

[INFO] 聚类完成: GMM, 运行时间: 6.10 秒
[INFO] 运行聚类算法: HC，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=13, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_36/repaired_36.txt
Program completed in: 6.888199329376221 seconds

[INFO] 聚类完成: HC, 运行时间: 6.89 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 14
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 14
Refined optimal number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_36/repaired_36.txt
Program completed in: 19.62165641784668 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 19.62 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_36/repaired_36.txt
Program completed in: 24.15232491493225 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 24.15 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 36
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 263.
835949 pairs of (a data error, a potential correction) are featurized.
14% (659 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 549.
847070 pairs of (a data error, a potential correction) are featurized.
16% (716 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 753.
852355 pairs of (a data error, a potential correction) are featurized.
25% (1151 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 892.
858643 pairs of (a data error, a potential correction) are featurized.
26% (1188 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 507.
865789 pairs of (a data error, a potential correction) are featurized.
36% (1635 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 593.
870021 pairs of (a data error, a potential correction) are featurized.
36% (1656 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
877694 pairs of (a data error, a potential correction) are featurized.
37% (1704 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 978.
883096 pairs of (a data error, a potential correction) are featurized.
39% (1766 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 347.
889386 pairs of (a data error, a potential correction) are featurized.
40% (1831 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 136.
893322 pairs of (a data error, a potential correction) are featurized.
40% (1832 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 422.
900330 pairs of (a data error, a potential correction) are featurized.
41% (1875 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 285.
901839 pairs of (a data error, a potential correction) are featurized.
41% (1879 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 730.
906416 pairs of (a data error, a potential correction) are featurized.
41% (1895 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 298.
910168 pairs of (a data error, a potential correction) are featurized.
42% (1905 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 688.
916205 pairs of (a data error, a potential correction) are featurized.
42% (1905 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 979.
921518 pairs of (a data error, a potential correction) are featurized.
42% (1905 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 211.
926004 pairs of (a data error, a potential correction) are featurized.
42% (1907 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 752.
926570 pairs of (a data error, a potential correction) are featurized.
42% (1907 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 499.
933699 pairs of (a data error, a potential correction) are featurized.
42% (1907 / 4580) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 604.
934845 pairs of (a data error, a potential correction) are featurized.
42% (1907 / 4580) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_36_algo_2/repaired_dataset_36_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_36_algo_2/repaired_dataset_36_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_36.csv
运行时间: 1155.09 秒
[INFO] 运行聚类算法: AP，数据集编号: 36, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 21:22:56,850][0m A new study created in memory with name: no-name-464ae24d-c867-49b8-879d-08ea6e91e019[0m
[32m[I 2025-01-23 21:22:56,858][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.6821225961690687, 'preference': -195}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,865][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.6491789199282924, 'preference': -169}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,873][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.511611413639007, 'preference': -481}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,879][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7751450767748465, 'preference': -127}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,886][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.500006965445096, 'preference': -397}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,896][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.8886681212050379, 'preference': -193}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,902][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6766823828890256, 'preference': -202}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,909][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.7358884862505657, 'preference': -246}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,918][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.8413466341837419, 'preference': -445}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,926][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.5793573774647466, 'preference': -355}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,941][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6191686514142873, 'preference': -289}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,956][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.6434863890442823, 'preference': -106}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,971][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.7145007567740255, 'preference': -174}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:56,987][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.5924987133399316, 'preference': -280}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,003][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7854301190473615, 'preference': -158}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,018][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.6756532664437446, 'preference': -241}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,033][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.5668298617576852, 'preference': -233}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,048][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.7857820974526215, 'preference': -143}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,063][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.694153286268285, 'preference': -336}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,078][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.5518530583993563, 'preference': -226}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,093][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.7681674742031828, 'preference': -135}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,109][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.8206687660168464, 'preference': -326}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,136][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.5368681017893405, 'preference': -360}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,167][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.7447050222893533, 'preference': -200}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,197][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.8294810077233116, 'preference': -328}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,212][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.8834936484709798, 'preference': -389}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,225][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.7345642111670818, 'preference': -264}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,239][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.8344203273570343, 'preference': -309}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,268][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.8963279620031094, 'preference': -403}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,309][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6380132209085649, 'preference': -280}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,324][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.8591431598876703, 'preference': -267}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,351][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.8147141920686394, 'preference': -430}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,380][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.6337833246947472, 'preference': -488}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,397][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.8628767391341552, 'preference': -278}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,413][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.6120251561719382, 'preference': -450}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,428][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7658263207582361, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,443][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.5421149794132823, 'preference': -371}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,459][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.5255688634769362, 'preference': -133}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,474][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.7429462303775728, 'preference': -212}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,489][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.6656497113363813, 'preference': -312}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,505][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.8048793568830022, 'preference': -180}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,522][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.8674924098557243, 'preference': -376}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,537][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.7252999717153625, 'preference': -194}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,552][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.7030703488721152, 'preference': -256}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,568][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.8401696493299428, 'preference': -310}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,584][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.8260980397767146, 'preference': -400}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,602][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.8977961504956641, 'preference': -404}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,620][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.8921740066539244, 'preference': -460}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,633][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.6586269214099961, 'preference': -292}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,647][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.6885483760428142, 'preference': -258}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,653][0m A new study created in memory with name: no-name-4db04bb0-a9dc-4c78-906f-9b861720e867[0m
[32m[I 2025-01-23 21:22:57,667][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.8967821527597877, 'preference': -261}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,682][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.844004073918803, 'preference': -273}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,687][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.5714672418679719, 'preference': -243}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,695][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.8567253723582899, 'preference': -322}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,701][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.7937746645035963, 'preference': -295}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,708][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.5810344321818736, 'preference': -133}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,714][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.7327601909747683, 'preference': -448}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,720][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.7780787724421614, 'preference': -416}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,726][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.7935802779119807, 'preference': -443}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,732][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.5973956542433423, 'preference': -418}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,744][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6751276994579423, 'preference': -166}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,759][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.8997070037361528, 'preference': -231}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,774][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.8869290205227146, 'preference': -332}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,788][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8512921318489541, 'preference': -217}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,800][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.6701497285888933, 'preference': -359}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,814][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8438445600423139, 'preference': -275}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,827][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7343727594381654, 'preference': -367}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,840][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.6492422103644397, 'preference': -500}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,853][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8222410631219923, 'preference': -184}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,867][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.5048242957586934, 'preference': -376}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,879][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.6298729298720448, 'preference': -490}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,892][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.748972633787462, 'preference': -184}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,919][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.513144232916481, 'preference': -187}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,942][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.5043278566483879, 'preference': -498}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,970][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.62635193746414, 'preference': -116}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:57,993][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.7375318505668383, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,019][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.5109726931718004, 'preference': -147}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,048][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.547507714872917, 'preference': -106}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,060][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.7016627581837408, 'preference': -104}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,089][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.7044668248479112, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,116][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.5500283223470717, 'preference': -139}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,143][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.537949923644786, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,156][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.6981247990971268, 'preference': -109}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,168][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.7055908894433722, 'preference': -149}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,181][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.5371181966475014, 'preference': -255}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,194][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.6206582350581946, 'preference': -306}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,207][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7796832008787382, 'preference': -210}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,221][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.5920295065019088, 'preference': -268}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,233][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.5680439411658907, 'preference': -238}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,246][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7568694499492739, 'preference': -174}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,260][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.5236289152972391, 'preference': -282}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,273][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6076389200729203, 'preference': -196}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,284][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5027362349298441, 'preference': -132}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,298][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.5728583430854286, 'preference': -124}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,311][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5551266989273727, 'preference': -157}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,325][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.8237617515434486, 'preference': -123}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,337][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.681817093876578, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,350][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.6522657829241423, 'preference': -162}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,362][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.7090625955139782, 'preference': -143}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,378][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.885746933912799, 'preference': -153}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,386][0m A new study created in memory with name: no-name-97e9c529-0fbe-4797-aec4-8547d2780f00[0m
[32m[I 2025-01-23 21:22:58,393][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.6693786888615498, 'preference': -467}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,398][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.5114612142383581, 'preference': -185}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,404][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6389845586442033, 'preference': -228}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,410][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.7573225706215536, 'preference': -158}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,418][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.8972865971126172, 'preference': -386}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,424][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.6350122118871868, 'preference': -373}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,430][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6109060604835975, 'preference': -423}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,436][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8431318682552726, 'preference': -367}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,442][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.6611047963998378, 'preference': -177}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,448][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.6493603076588785, 'preference': -241}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,461][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.7571466519628702, 'preference': -486}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,474][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.512046295873624, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,486][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.5006683657769365, 'preference': -294}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,499][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.565529354122385, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,511][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7337931820996182, 'preference': -269}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,524][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.5509103271906152, 'preference': -330}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,536][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7074406506619365, 'preference': -195}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,549][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.7382386749092278, 'preference': -286}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,561][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.5645820649876957, 'preference': -436}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,573][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.6981077549658826, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,586][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.7975977579045502, 'preference': -325}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,598][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.5835600445549395, 'preference': -449}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,611][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.6866493581578821, 'preference': -445}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,624][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.8076822878256119, 'preference': -330}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,637][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.5916644071425452, 'preference': -479}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,649][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6841248809643544, 'preference': -446}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,663][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.8115092681073754, 'preference': -400}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,676][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.6073843316006422, 'preference': -344}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,689][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.6758820098967866, 'preference': -474}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,703][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.864986730810046, 'preference': -406}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,716][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.6156886090174882, 'preference': -354}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,729][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.6668188323477872, 'preference': -397}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,742][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7211131786771432, 'preference': -477}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,753][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.6302366619799635, 'preference': -417}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,766][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.8752442642550355, 'preference': -398}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,778][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7836685870320104, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,790][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7700967500175675, 'preference': -453}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,803][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.5288966391998071, 'preference': -457}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,816][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.8311010891089895, 'preference': -429}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,830][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.5866238353871698, 'preference': -375}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,844][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6484153173937712, 'preference': -499}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,859][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6785712553598705, 'preference': -457}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,872][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.8110600639877236, 'preference': -472}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,886][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.8154050532182839, 'preference': -417}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,898][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.6193612671042666, 'preference': -360}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,911][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5917516522096555, 'preference': -380}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,924][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.6630213931839731, 'preference': -341}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,936][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.7180096620685008, 'preference': -464}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,951][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.8803524851720168, 'preference': -403}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:22:58,965][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.8515173338787939, 'preference': -414}. Best is trial 0 with value: -inf.[0m
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_39/repaired_39.txt
Program completed in: 10.005017518997192 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 10.01 秒
[INFO] 运行聚类算法: GMM，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 13
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 4
Refining in range: 4 to 13
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_39/repaired_39.txt
Program completed in: 9.460055589675903 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.46 秒
[INFO] 运行聚类算法: HC，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_39/repaired_39.txt
Program completed in: 9.801817893981934 seconds

[INFO] 聚类完成: HC, 运行时间: 9.80 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 18
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_39/repaired_39.txt
Program completed in: 51.000505685806274 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 51.00 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_39/repaired_39.txt
Program completed in: 54.378647565841675 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 54.38 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 39
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 249.
40254 pairs of (a data error, a potential correction) are featurized.
52% (1085 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 995.
41459 pairs of (a data error, a potential correction) are featurized.
58% (1218 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 23.
44954 pairs of (a data error, a potential correction) are featurized.
93% (1937 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 178.
46141 pairs of (a data error, a potential correction) are featurized.
93% (1938 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 860.
48136 pairs of (a data error, a potential correction) are featurized.
93% (1938 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 394.
50269 pairs of (a data error, a potential correction) are featurized.
93% (1940 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 487.
51141 pairs of (a data error, a potential correction) are featurized.
93% (1942 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 826.
53180 pairs of (a data error, a potential correction) are featurized.
93% (1942 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 658.
55358 pairs of (a data error, a potential correction) are featurized.
93% (1945 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 645.
55358 pairs of (a data error, a potential correction) are featurized.
93% (1947 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 17.
56444 pairs of (a data error, a potential correction) are featurized.
94% (1948 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 208.
57515 pairs of (a data error, a potential correction) are featurized.
94% (1949 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 856.
57515 pairs of (a data error, a potential correction) are featurized.
94% (1949 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 36.
58615 pairs of (a data error, a potential correction) are featurized.
94% (1949 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 861.
60615 pairs of (a data error, a potential correction) are featurized.
97% (2014 / 2083) of data errors are corrected.
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_38/repaired_38.txt
Program completed in: 10.176497220993042 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 10.18 秒
[INFO] 运行聚类算法: GMM，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 8
Final optimal number of components: 6
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_38/repaired_38.txt
Program completed in: 9.950435400009155 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.95 秒
[INFO] 运行聚类算法: HC，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_38/repaired_38.txt
Program completed in: 6.443478345870972 seconds

[INFO] 聚类完成: HC, 运行时间: 6.44 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 17
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_38/repaired_38.txt
Program completed in: 54.168490409851074 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 54.17 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_38/repaired_38.txt
Program completed in: 57.64612078666687 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 57.65 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 38
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 93.
714195 pairs of (a data error, a potential correction) are featurized.
54% (1910 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
719035 pairs of (a data error, a potential correction) are featurized.
59% (2109 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 715.
722620 pairs of (a data error, a potential correction) are featurized.
59% (2119 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 607.
728695 pairs of (a data error, a potential correction) are featurized.
60% (2130 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 32.
730452 pairs of (a data error, a potential correction) are featurized.
62% (2195 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 15.
731479 pairs of (a data error, a potential correction) are featurized.
62% (2199 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 822.
733091 pairs of (a data error, a potential correction) are featurized.
63% (2245 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 549.
737788 pairs of (a data error, a potential correction) are featurized.
64% (2282 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 371.
738814 pairs of (a data error, a potential correction) are featurized.
64% (2287 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 604.
741372 pairs of (a data error, a potential correction) are featurized.
64% (2287 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 663.
746811 pairs of (a data error, a potential correction) are featurized.
64% (2297 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 372.
750836 pairs of (a data error, a potential correction) are featurized.
65% (2313 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 959.
757060 pairs of (a data error, a potential correction) are featurized.
65% (2319 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 846.
759333 pairs of (a data error, a potential correction) are featurized.
65% (2319 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 955.
763503 pairs of (a data error, a potential correction) are featurized.
65% (2321 / 3567) of data errors are corrected.

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_36/repaired_36.txt
Program completed in: 3.1912014484405518 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.19 秒
[INFO] 运行聚类算法: GMM，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 6
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: None
Refining in range: 6 to 8
Final optimal number of components: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_36/repaired_36.txt
Program completed in: 2.6945624351501465 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.69 秒
[INFO] 运行聚类算法: HC，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_36/repaired_36.txt
Program completed in: 2.609696388244629 seconds

[INFO] 聚类完成: HC, 运行时间: 2.61 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 6
Optimal number of clusters from Kneedle: None
No further refinement needed. Final optimal number of clusters: 6
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_36/repaired_36.txt
Program completed in: 10.381427764892578 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 10.38 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_36/repaired_36.txt
Program completed in: 7.331286907196045 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 7.33 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 52.73%.csv, error_rate=52.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 42
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_42_algo_1/repaired_dataset_42_algo_1_52.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_42_algo_1/repaired_dataset_42_algo_1_52.73%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_42.csv
运行时间: 36.31 秒
[INFO] 运行聚类算法: AP，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6973707244387481, preference=-104
Number of clusters: 122
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_42/repaired_42.txt
Program completed in: 25.189045667648315 seconds

[INFO] 聚类完成: AP, 运行时间: 25.19 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_42/repaired_42.txt
Program completed in: 10.08165717124939 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 10.08 秒
[INFO] 运行聚类算法: GMM，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 9
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 4
Refining in range: 4 to 9
Final optimal number of components: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_42/repaired_42.txt
Program completed in: 9.496770143508911 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.50 秒
[INFO] 运行聚类算法: HC，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_42/repaired_42.txt
Program completed in: 8.193268299102783 seconds

[INFO] 聚类完成: HC, 运行时间: 8.19 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 18
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_42/repaired_42.txt
Program completed in: 42.71894192695618 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 42.72 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 16
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 16
Final optimal number of components: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_40/repaired_40.txt
Program completed in: 10.340869188308716 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.34 秒
[INFO] 运行聚类算法: HC，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_40/repaired_40.txt
Program completed in: 7.538729906082153 seconds

[INFO] 聚类完成: HC, 运行时间: 7.54 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 16
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 16
Refined optimal number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_40/repaired_40.txt
Program completed in: 42.79352855682373 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 42.79 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_40/repaired_40.txt
Program completed in: 34.413580656051636 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 34.41 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 40
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 564.
701644 pairs of (a data error, a potential correction) are featurized.
32% (1096 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 478.
706629 pairs of (a data error, a potential correction) are featurized.
50% (1717 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 295.
709616 pairs of (a data error, a potential correction) are featurized.
51% (1732 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 863.
711828 pairs of (a data error, a potential correction) are featurized.
52% (1776 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 150.
714895 pairs of (a data error, a potential correction) are featurized.
54% (1854 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 769.
719230 pairs of (a data error, a potential correction) are featurized.
56% (1906 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 375.
725164 pairs of (a data error, a potential correction) are featurized.
59% (2016 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 723.
728527 pairs of (a data error, a potential correction) are featurized.
60% (2030 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 758.
731276 pairs of (a data error, a potential correction) are featurized.
60% (2032 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
734289 pairs of (a data error, a potential correction) are featurized.
61% (2086 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 3.
737866 pairs of (a data error, a potential correction) are featurized.
63% (2131 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 157.
741003 pairs of (a data error, a potential correction) are featurized.
64% (2187 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 29.
741305 pairs of (a data error, a potential correction) are featurized.
64% (2187 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 529.
744594 pairs of (a data error, a potential correction) are featurized.
64% (2193 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 540.
746774 pairs of (a data error, a potential correction) are featurized.
66% (2253 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 456.
751600 pairs of (a data error, a potential correction) are featurized.
66% (2253 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 30.
752782 pairs of (a data error, a potential correction) are featurized.
66% (2253 / 3402) of data errors are corrected.
------------------------------------------------------------------------
1329883 pairs of (a data error, a potential correction) are featurized.
67% (6975 / 10482) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2050.
1335365 pairs of (a data error, a potential correction) are featurized.
67% (6975 / 10482) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_30_algo_2/repaired_dataset_30_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_30_algo_2/repaired_dataset_30_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_30.csv
运行时间: 3412.53 秒
[INFO] 运行聚类算法: AP，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8235462501895151, preference=-175
Number of clusters: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_30/repaired_30.txt
Program completed in: 78.00694823265076 seconds

[INFO] 聚类完成: AP, 运行时间: 78.01 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_30/repaired_30.txt
Program completed in: 26.299745559692383 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 26.30 秒
[INFO] 运行聚类算法: GMM，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 9
Refining in range: 9 to 22
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_30/repaired_30.txt
Program completed in: 59.76633262634277 seconds

[INFO] 聚类完成: GMM, 运行时间: 59.77 秒
[INFO] 运行聚类算法: HC，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_30/repaired_30.txt
Program completed in: 19.14470624923706 seconds

[INFO] 聚类完成: HC, 运行时间: 19.14 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 32
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 32
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_30/repaired_30.txt
Program completed in: 348.68286418914795 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 348.68 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_30/repaired_30.txt
Program completed in: 310.7335925102234 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 310.73 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 16.88%.csv, error_rate=16.88%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 43
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_43_algo_1/repaired_dataset_43_algo_1_16.88%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_43_algo_1/repaired_dataset_43_algo_1_16.88%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_43.csv
运行时间: 34.83 秒
[INFO] 运行聚类算法: AP，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7968692780092063, preference=-154
Number of clusters: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_43/repaired_43.txt
Program completed in: 26.37778377532959 seconds

[INFO] 聚类完成: AP, 运行时间: 26.38 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_43/repaired_43.txt
Program completed in: 9.289208173751831 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 9.29 秒
[INFO] 运行聚类算法: GMM，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 8
Refining in range: 8 to 17
Final optimal number of components: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_43/repaired_43.txt
Program completed in: 15.201215505599976 seconds

[INFO] 聚类完成: GMM, 运行时间: 15.20 秒
[INFO] 运行聚类算法: HC，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 7
Refining in range: 7 to 8
Final optimal number of components: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_41/repaired_41.txt
Program completed in: 4.431494235992432 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.43 秒
[INFO] 运行聚类算法: HC，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=10, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_41/repaired_41.txt
Program completed in: 7.776718616485596 seconds

[INFO] 聚类完成: HC, 运行时间: 7.78 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 15
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 15
Refined optimal number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_41/repaired_41.txt
Program completed in: 25.21501874923706 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 25.22 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_41/repaired_41.txt
Program completed in: 33.64725112915039 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 33.65 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 41
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 57.
344356 pairs of (a data error, a potential correction) are featurized.
39% (1047 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 26.
347869 pairs of (a data error, a potential correction) are featurized.
68% (1841 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 243.
350754 pairs of (a data error, a potential correction) are featurized.
69% (1875 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 73.
353427 pairs of (a data error, a potential correction) are featurized.
69% (1875 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 962.
356233 pairs of (a data error, a potential correction) are featurized.
69% (1875 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 693.
360015 pairs of (a data error, a potential correction) are featurized.
70% (1897 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 210.
362533 pairs of (a data error, a potential correction) are featurized.
70% (1903 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 388.
362819 pairs of (a data error, a potential correction) are featurized.
71% (1915 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 175.
365955 pairs of (a data error, a potential correction) are featurized.
75% (2032 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 305.
367957 pairs of (a data error, a potential correction) are featurized.
75% (2041 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 254.
370078 pairs of (a data error, a potential correction) are featurized.
76% (2054 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 66.
371193 pairs of (a data error, a potential correction) are featurized.
76% (2057 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 910.
373712 pairs of (a data error, a potential correction) are featurized.
76% (2060 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 703.
373712 pairs of (a data error, a potential correction) are featurized.
76% (2064 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 302.
375530 pairs of (a data error, a potential correction) are featurized.
77% (2072 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 72.
376610 pairs of (a data error, a potential correction) are featurized.
77% (2072 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 872.
378943 pairs of (a data error, a potential correction) are featurized.
78% (2096 / 2704) of data errors are corrected.
------------------------------------------------------------------------
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_32/repaired_32.txt
Program completed in: 28.808483123779297 seconds

[INFO] 聚类完成: HC, 运行时间: 28.81 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 38
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 38
Refined optimal number of clusters: 38
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_32/repaired_32.txt
Program completed in: 303.27167105674744 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 303.27 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_32/repaired_32.txt
Program completed in: 780.4360618591309 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 780.44 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 32
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1549.
2388413 pairs of (a data error, a potential correction) are featurized.
63% (6168 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 737.
2389848 pairs of (a data error, a potential correction) are featurized.
64% (6227 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1638.
2392791 pairs of (a data error, a potential correction) are featurized.
65% (6302 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 561.
2399959 pairs of (a data error, a potential correction) are featurized.
65% (6304 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1866.
2406762 pairs of (a data error, a potential correction) are featurized.
67% (6511 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1070.
2411693 pairs of (a data error, a potential correction) are featurized.
67% (6513 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2373.
2419799 pairs of (a data error, a potential correction) are featurized.
67% (6515 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1202.
2420692 pairs of (a data error, a potential correction) are featurized.
67% (6516 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 778.
2426967 pairs of (a data error, a potential correction) are featurized.
67% (6520 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2095.
2435623 pairs of (a data error, a potential correction) are featurized.
67% (6554 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1453.
2442538 pairs of (a data error, a potential correction) are featurized.
68% (6570 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 544.
2446735 pairs of (a data error, a potential correction) are featurized.
68% (6573 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2370.
2450757 pairs of (a data error, a potential correction) are featurized.
68% (6573 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1218.
2453842 pairs of (a data error, a potential correction) are featurized.
68% (6585 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 61.
2453842 pairs of (a data error, a potential correction) are featurized.
68% (6585 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 836.
2459533 pairs of (a data error, a potential correction) are featurized.
68% (6588 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2128.
2465431 pairs of (a data error, a potential correction) are featurized.
68% (6588 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1289.
2466113 pairs of (a data error, a potential correction) are featurized.
68% (6594 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1426.
2470136 pairs of (a data error, a potential correction) are featurized.
68% (6594 / 9718) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 647.
2471355 pairs of (a data error, a potential correction) are featurized.
68% (6594 / 9718) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_32_algo_2/repaired_dataset_32_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_32_algo_2/repaired_dataset_32_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_42/repaired_42.txt
Program completed in: 54.164987087249756 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 54.16 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 42
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 6.
647522 pairs of (a data error, a potential correction) are featurized.
8% (508 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 840.
650849 pairs of (a data error, a potential correction) are featurized.
15% (961 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 967.
671931 pairs of (a data error, a potential correction) are featurized.
17% (1103 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 246.
690042 pairs of (a data error, a potential correction) are featurized.
18% (1159 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 138.
697508 pairs of (a data error, a potential correction) are featurized.
18% (1165 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 54.
703425 pairs of (a data error, a potential correction) are featurized.
19% (1184 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 540.
718461 pairs of (a data error, a potential correction) are featurized.
19% (1184 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 266.
736832 pairs of (a data error, a potential correction) are featurized.
20% (1272 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 252.
755928 pairs of (a data error, a potential correction) are featurized.
21% (1326 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 782.
760183 pairs of (a data error, a potential correction) are featurized.
24% (1556 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 668.
772748 pairs of (a data error, a potential correction) are featurized.
25% (1588 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 734.
790681 pairs of (a data error, a potential correction) are featurized.
25% (1595 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 718.
808129 pairs of (a data error, a potential correction) are featurized.
25% (1622 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 79.
818790 pairs of (a data error, a potential correction) are featurized.
26% (1635 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 97.
837815 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 478.
849840 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 612.
859792 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 564.
861304 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 866.
872005 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 879.
880907 pairs of (a data error, a potential correction) are featurized.
27% (1753 / 6385) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_42_algo_2/repaired_dataset_42_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_42_algo_2/repaired_dataset_42_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_42.csv
运行时间: 576.24 秒
[INFO] 运行聚类算法: AP，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 21:36:29,558][0m A new study created in memory with name: no-name-7eab0a2d-0cd2-4618-9b99-c108ccdc28fa[0m
[32m[I 2025-01-23 21:36:29,563][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7042659781445361, 'preference': -400}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,569][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.8857231807441704, 'preference': -306}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,572][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.5650725524341569, 'preference': -306}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,576][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.5844831302211405, 'preference': -110}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,580][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.7647911416018247, 'preference': -168}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,585][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.740057134666997, 'preference': -197}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,589][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.7885209651606573, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,592][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.5259962398392586, 'preference': -317}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,595][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.5910441832500807, 'preference': -154}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,599][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.8219663652717437, 'preference': -438}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,609][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.6667780979179416, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,620][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.8978654972383983, 'preference': -386}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,629][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.665603651045188, 'preference': -374}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,639][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8967418209548497, 'preference': -370}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,649][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.8266420476021669, 'preference': -247}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,659][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.7000987981434725, 'preference': -456}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,667][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.6312987391288409, 'preference': -339}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,677][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.8366573699648734, 'preference': -258}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,687][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.7204826442731485, 'preference': -463}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,696][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.6347037977026884, 'preference': -405}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,706][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.8376589671249659, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,715][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.729987822283181, 'preference': -488}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,723][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.6423678918282693, 'preference': -434}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,732][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.5055127751627216, 'preference': -410}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,742][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.7802165735430049, 'preference': -490}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,751][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6763430703267079, 'preference': -429}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,760][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.6157092147512876, 'preference': -417}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,769][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.7869942764636985, 'preference': -345}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,779][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.6908366542385885, 'preference': -469}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,788][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6162668293183009, 'preference': -413}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,797][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.5613740143195888, 'preference': -347}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,808][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.6840172568245508, 'preference': -347}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,820][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7090557227255458, 'preference': -459}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,830][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.5468778780935545, 'preference': -392}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,839][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.5945517002361937, 'preference': -350}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,849][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.8575100043399771, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,861][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7302821247468138, 'preference': -111}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,871][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7485448191848336, 'preference': -285}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,880][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.5080338340815684, 'preference': -444}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,890][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7661192670885685, 'preference': -481}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,901][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.8023466649162663, 'preference': -317}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,909][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.675323418600052, 'preference': -433}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,918][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.6124649274403318, 'preference': -416}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,928][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.6531809558584682, 'preference': -417}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,938][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.7805131984353343, 'preference': -373}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,947][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.7577364462791334, 'preference': -391}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,956][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.6892737768051338, 'preference': -311}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:29,966][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.6615315607355379, 'preference': -467}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,005][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.6162218558566516, 'preference': -363}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,017][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.5857643320633107, 'preference': -399}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,022][0m A new study created in memory with name: no-name-28b38fd0-cc65-4e69-9a58-6b510066cdd7[0m
[32m[I 2025-01-23 21:36:30,027][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.5045661507294862, 'preference': -273}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,033][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.8138683205488912, 'preference': -286}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,040][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.8887673977119963, 'preference': -411}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,044][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.6430365080040302, 'preference': -497}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,048][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.6154041151544536, 'preference': -212}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,054][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.5787348773546703, 'preference': -343}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,059][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.76770068407254, 'preference': -207}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,065][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.7948920694842883, 'preference': -347}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,069][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.6198164320368059, 'preference': -308}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,076][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.8536052568466186, 'preference': -236}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,086][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.5251372331603998, 'preference': -150}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,097][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7227903596959311, 'preference': -270}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,108][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.6966644989676649, 'preference': -113}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,120][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8228814765392146, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,130][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.512300436035414, 'preference': -271}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,141][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.7348515952410883, 'preference': -161}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,153][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.6729002567951626, 'preference': -317}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,163][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.5257045572395853, 'preference': -245}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,174][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.7525323304058902, 'preference': -162}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,186][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.6582174249912399, 'preference': -428}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,197][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.563836352714765, 'preference': -231}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,207][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.5542828174829069, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,218][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.768169275089909, 'preference': -475}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,228][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.5746676455084186, 'preference': -423}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,239][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.5582284606949219, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,252][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.5071983824444369, 'preference': -470}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,263][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.5974207698071297, 'preference': -459}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,274][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.5443628718282045, 'preference': -369}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,284][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.5029834233779988, 'preference': -195}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,296][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.5839543056537226, 'preference': -477}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,308][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.6116785932090011, 'preference': -364}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,319][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.5344504833540585, 'preference': -374}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,329][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.5051832519153063, 'preference': -298}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,339][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.594794183375996, 'preference': -118}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,349][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.6262122510077233, 'preference': -385}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,359][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.6617140783420836, 'preference': -240}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,370][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.5569044188473699, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,381][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.780930870234239, 'preference': -217}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,392][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.8205251550131576, 'preference': -414}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,404][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.8810942204353696, 'preference': -495}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,415][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.5711896109831606, 'preference': -442}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,425][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.541524165358797, 'preference': -460}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,436][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5970833869710692, 'preference': -448}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,448][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.5221721197427178, 'preference': -408}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,460][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5458191290257849, 'preference': -354}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,471][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5350179657380194, 'preference': -325}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,483][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.50214368396476, 'preference': -337}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,495][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.5015065851311636, 'preference': -483}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,507][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.6324532544139163, 'preference': -288}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,518][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.5950739024526865, 'preference': -498}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,522][0m A new study created in memory with name: no-name-29c25161-b2b9-40ab-98e2-0f1a2bece72e[0m
[32m[I 2025-01-23 21:36:30,528][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7461118126262523, 'preference': -284}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,533][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.792698860883865, 'preference': -381}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,538][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6328486508797152, 'preference': -221}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,542][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.5503041604953757, 'preference': -148}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,549][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.8944481205228809, 'preference': -309}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,555][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.8452436673004906, 'preference': -491}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,560][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.7059095843641358, 'preference': -471}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,565][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.6815733304171091, 'preference': -435}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,569][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.6293733486343237, 'preference': -467}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,574][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.560426994906473, 'preference': -121}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,586][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.7598056442184256, 'preference': -278}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,598][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7947839877855744, 'preference': -360}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,610][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.7849292904783968, 'preference': -362}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,621][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.7284110958923224, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,634][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.8310471210564491, 'preference': -266}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,648][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8724030228912358, 'preference': -197}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,659][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.6465824085399575, 'preference': -312}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,672][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.8277895411569484, 'preference': -248}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,687][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8974091293341425, 'preference': -190}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,697][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.6510756766287585, 'preference': -325}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,708][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.7482727525821069, 'preference': -244}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,720][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.8386006552542856, 'preference': -180}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,731][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.5960829673587185, 'preference': -334}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,742][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.5080136202526739, 'preference': -247}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,754][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.7475803094725089, 'preference': -173}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,765][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.5833134992557453, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,776][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.5101175455915355, 'preference': -332}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,787][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.6881603367622678, 'preference': -157}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,799][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.7255192186404731, 'preference': -105}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,811][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.5001508322535119, 'preference': -407}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,823][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.6793464803355439, 'preference': -362}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,834][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.7168051325482696, 'preference': -157}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,847][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.7800765842390939, 'preference': -137}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,858][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.6779525726873163, 'preference': -408}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,870][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.6132176043958667, 'preference': -433}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,882][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.654649010755114, 'preference': -223}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,894][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7551953936201831, 'preference': -283}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,906][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.8078862390691294, 'preference': -209}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,919][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.5341879164353718, 'preference': -233}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,930][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.5891599295902114, 'preference': -302}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,942][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.5356836340811084, 'preference': -263}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,954][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.5897934162109131, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,965][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5106632981515865, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,977][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.5234249141783003, 'preference': -136}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:30,988][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.5481497331360855, 'preference': -167}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:31,000][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.7393677720630535, 'preference': -121}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:31,012][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.7029667993913454, 'preference': -117}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:31,024][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.5651078615937744, 'preference': -106}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:31,036][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.7640592918694252, 'preference': -499}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 21:36:31,048][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.502954361211741, 'preference': -457}. Best is trial 0 with value: -inf.[0m
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_31/repaired_31.txt
Program completed in: 1367.4879925251007 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1367.49 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 31
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1377.
544913 pairs of (a data error, a potential correction) are featurized.
21% (3425 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1962.
570743 pairs of (a data error, a potential correction) are featurized.
21% (3475 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2082.
601293 pairs of (a data error, a potential correction) are featurized.
21% (3490 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2353.
624355 pairs of (a data error, a potential correction) are featurized.
21% (3507 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1946.
661489 pairs of (a data error, a potential correction) are featurized.
21% (3522 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 185.
690833 pairs of (a data error, a potential correction) are featurized.
22% (3625 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1026.
720505 pairs of (a data error, a potential correction) are featurized.
22% (3636 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 406.
743657 pairs of (a data error, a potential correction) are featurized.
22% (3691 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
759498 pairs of (a data error, a potential correction) are featurized.
23% (3819 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 20.
777459 pairs of (a data error, a potential correction) are featurized.
23% (3822 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1246.
807924 pairs of (a data error, a potential correction) are featurized.
23% (3846 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
817552 pairs of (a data error, a potential correction) are featurized.
24% (4015 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2029.
845387 pairs of (a data error, a potential correction) are featurized.
25% (4094 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2121.
873804 pairs of (a data error, a potential correction) are featurized.
25% (4125 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1408.
890370 pairs of (a data error, a potential correction) are featurized.
25% (4131 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1984.
918910 pairs of (a data error, a potential correction) are featurized.
25% (4132 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 332.
955836 pairs of (a data error, a potential correction) are featurized.
25% (4134 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1682.
983777 pairs of (a data error, a potential correction) are featurized.
25% (4171 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 535.
1009696 pairs of (a data error, a potential correction) are featurized.
25% (4198 / 16617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2391.
1039063 pairs of (a data error, a potential correction) are featurized.
25% (4198 / 16617) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_31_algo_2/repaired_dataset_31_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_31_algo_2/repaired_dataset_31_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_31.csv
运行时间: 2226.06 秒
[INFO] 运行聚类算法: AP，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.8027884838887862, preference=-109
Number of clusters: 3
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_31/repaired_31.txt
Program completed in: 0.5091638565063477 seconds

[INFO] 聚类完成: AP, 运行时间: 0.51 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_31/repaired_31.txt
Program completed in: 1.2871272563934326 seconds

[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_43/repaired_43.txt
Program completed in: 7.867474794387817 seconds

[INFO] 聚类完成: HC, 运行时间: 7.87 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 17
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_43/repaired_43.txt
Program completed in: 56.708738565444946 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 56.71 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_43/repaired_43.txt
Program completed in: 33.593804121017456 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 33.59 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 43
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 824.
312943 pairs of (a data error, a potential correction) are featurized.
73% (1900 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 820.
315374 pairs of (a data error, a potential correction) are featurized.
73% (1900 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
319521 pairs of (a data error, a potential correction) are featurized.
78% (2051 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 615.
322638 pairs of (a data error, a potential correction) are featurized.
79% (2080 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 558.
324555 pairs of (a data error, a potential correction) are featurized.
79% (2080 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 254.
326666 pairs of (a data error, a potential correction) are featurized.
79% (2080 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 167.
329525 pairs of (a data error, a potential correction) are featurized.
79% (2080 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 845.
332127 pairs of (a data error, a potential correction) are featurized.
79% (2080 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 472.
334149 pairs of (a data error, a potential correction) are featurized.
80% (2085 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 421.
336161 pairs of (a data error, a potential correction) are featurized.
81% (2131 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 380.
338843 pairs of (a data error, a potential correction) are featurized.
82% (2136 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 583.
339642 pairs of (a data error, a potential correction) are featurized.
82% (2136 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 866.
341815 pairs of (a data error, a potential correction) are featurized.
82% (2136 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 191.
342961 pairs of (a data error, a potential correction) are featurized.
82% (2136 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 790.
347088 pairs of (a data error, a potential correction) are featurized.
82% (2139 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 212.
350632 pairs of (a data error, a potential correction) are featurized.
82% (2139 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 685.
351769 pairs of (a data error, a potential correction) are featurized.
82% (2140 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 158.
353831 pairs of (a data error, a potential correction) are featurized.
82% (2140 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 409.
356889 pairs of (a data error, a potential correction) are featurized.
82% (2145 / 2617) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 905.
357275 pairs of (a data error, a potential correction) are featurized.
83% (2163 / 2617) of data errors are corrected.
------------------------------------------------------------------------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 95.
768306 pairs of (a data error, a potential correction) are featurized.
66% (2339 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 18.
772170 pairs of (a data error, a potential correction) are featurized.
66% (2344 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 774.
773525 pairs of (a data error, a potential correction) are featurized.
66% (2344 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1.
774823 pairs of (a data error, a potential correction) are featurized.
66% (2345 / 3567) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 186.
776358 pairs of (a data error, a potential correction) are featurized.
66% (2345 / 3567) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_38_algo_2/repaired_dataset_38_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_38_algo_2/repaired_dataset_38_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_38.csv
运行时间: 1143.05 秒
[INFO] 运行聚类算法: AP，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7974838378418014, preference=-102
Number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_38/repaired_38.txt
Program completed in: 2.6108901500701904 seconds

[INFO] 聚类完成: AP, 运行时间: 2.61 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_38/repaired_38.txt
Program completed in: 6.090884685516357 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 6.09 秒
[INFO] 运行聚类算法: GMM，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 12
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 12
Final optimal number of components: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_38/repaired_38.txt
Program completed in: 4.86120343208313 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.86 秒
[INFO] 运行聚类算法: HC，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_38/repaired_38.txt
Program completed in: 5.755305051803589 seconds

[INFO] 聚类完成: HC, 运行时间: 5.76 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 12
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 12
Refined optimal number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_38/repaired_38.txt
Program completed in: 27.11771583557129 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 27.12 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_38/repaired_38.txt
Program completed in: 17.872295141220093 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 17.87 秒
==================================================
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 797.
62815 pairs of (a data error, a potential correction) are featurized.
97% (2014 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 305.
64088 pairs of (a data error, a potential correction) are featurized.
97% (2014 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 991.
66297 pairs of (a data error, a potential correction) are featurized.
97% (2021 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 573.
67397 pairs of (a data error, a potential correction) are featurized.
97% (2021 / 2083) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 454.
69571 pairs of (a data error, a potential correction) are featurized.
97% (2021 / 2083) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_39_algo_2/repaired_dataset_39_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_39_algo_2/repaired_dataset_39_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_39.csv
运行时间: 993.70 秒
[INFO] 运行聚类算法: AP，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.6906003329854038, preference=-463
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_39/repaired_39.txt
Program completed in: 14.46809983253479 seconds

[INFO] 聚类完成: AP, 运行时间: 14.47 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_39/repaired_39.txt
Program completed in: 10.044553518295288 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 10.04 秒
[INFO] 运行聚类算法: GMM，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 11
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 11
Final optimal number of components: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_39/repaired_39.txt
Program completed in: 11.513108730316162 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.51 秒
[INFO] 运行聚类算法: HC，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_39/repaired_39.txt
Program completed in: 8.55992865562439 seconds

[INFO] 聚类完成: HC, 运行时间: 8.56 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 18
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_39/repaired_39.txt
Program completed in: 61.56892919540405 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 61.57 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_39/repaired_39.txt
Program completed in: 47.35241103172302 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 47.35 秒
==================================================
The error corrector models are updated with new labeled tuple 826.
758070 pairs of (a data error, a potential correction) are featurized.
67% (2279 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 408.
760193 pairs of (a data error, a potential correction) are featurized.
67% (2279 / 3402) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 597.
762679 pairs of (a data error, a potential correction) are featurized.
67% (2279 / 3402) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_40_algo_2/repaired_dataset_40_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_40_algo_2/repaired_dataset_40_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_40.csv
运行时间: 1113.91 秒
[INFO] 运行聚类算法: AP，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5066323670851063, preference=-329
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_40/repaired_40.txt
Program completed in: 2.7493836879730225 seconds

[INFO] 聚类完成: AP, 运行时间: 2.75 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_40/repaired_40.txt
Program completed in: 4.691930532455444 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.69 秒
[INFO] 运行聚类算法: GMM，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 11
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 11
Final optimal number of components: 11
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_40/repaired_40.txt
Program completed in: 4.015106439590454 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.02 秒
[INFO] 运行聚类算法: HC，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_40/repaired_40.txt
Program completed in: 4.598006010055542 seconds

[INFO] 聚类完成: HC, 运行时间: 4.60 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 12
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 12
Refined optimal number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_40/repaired_40.txt
Program completed in: 16.941821813583374 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 16.94 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_40/repaired_40.txt
Program completed in: 14.271021604537964 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 14.27 秒
==================================================
The error corrector models are updated with new labeled tuple 732.
381696 pairs of (a data error, a potential correction) are featurized.
78% (2096 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 747.
381706 pairs of (a data error, a potential correction) are featurized.
78% (2096 / 2704) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 323.
382800 pairs of (a data error, a potential correction) are featurized.
78% (2096 / 2704) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_41_algo_2/repaired_dataset_41_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_41_algo_2/repaired_dataset_41_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_41.csv
运行时间: 931.57 秒
[INFO] 运行聚类算法: AP，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5221165543466079, preference=-297
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_41/repaired_41.txt
Program completed in: 4.092942237854004 seconds

[INFO] 聚类完成: AP, 运行时间: 4.09 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_41/repaired_41.txt
Program completed in: 4.564063787460327 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.56 秒
[INFO] 运行聚类算法: GMM，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 13
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 13
Final optimal number of components: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_41/repaired_41.txt
Program completed in: 3.7700750827789307 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.77 秒
[INFO] 运行聚类算法: HC，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_41/repaired_41.txt
Program completed in: 3.7673499584198 seconds

[INFO] 聚类完成: HC, 运行时间: 3.77 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 13
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 13
Refined optimal number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_41/repaired_41.txt
Program completed in: 13.742567300796509 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 13.74 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_41/repaired_41.txt
Program completed in: 12.611433267593384 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 12.61 秒
==================================================

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 42, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_42/repaired_42.txt
Program completed in: 1.850078821182251 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.85 秒
[INFO] 运行聚类算法: GMM，数据集编号: 42, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: None
Refining in range: 5 to 7
Final optimal number of components: 7
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_42/repaired_42.txt
Program completed in: 1.679879903793335 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.68 秒
[INFO] 运行聚类算法: HC，数据集编号: 42, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_42/repaired_42.txt
Program completed in: 1.2317588329315186 seconds

[INFO] 聚类完成: HC, 运行时间: 1.23 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: [32m[I 2025-01-23 21:36:41,092][0m A new study created in memory with name: no-name-dde37912-5dea-459f-982a-2c54c4967ef7[0m
[33m[W 2025-01-23 21:36:41,093][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=3).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 69, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 42, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_42/repaired_42.txt
Program completed in: 2.9183876514434814 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 2.92 秒
==================================================
结果文件路径: ../../../results/cleaned_data/baran/repaired_32.csv
运行时间: 3264.40 秒
[INFO] 运行聚类算法: AP，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.5032516811224126, preference=-101
Number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_32/repaired_32.txt
Program completed in: 30.289626836776733 seconds

[INFO] 聚类完成: AP, 运行时间: 30.29 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_32/repaired_32.txt
Program completed in: 11.724133253097534 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 11.72 秒
[INFO] 运行聚类算法: GMM，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 24
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 24
Final optimal number of components: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_32/repaired_32.txt
Program completed in: 19.62256693840027 seconds

[INFO] 聚类完成: GMM, 运行时间: 19.62 秒
[INFO] 运行聚类算法: HC，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_32/repaired_32.txt
Program completed in: 9.294845819473267 seconds

[INFO] 聚类完成: HC, 运行时间: 9.29 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 29
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 29
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_32/repaired_32.txt
Program completed in: 31.10729146003723 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 31.11 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_32/repaired_32.txt
Program completed in: 104.13159441947937 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 104.13 秒
==================================================
[INFO] 聚类完成: DBSCAN, 运行时间: 1.29 秒
[INFO] 运行聚类算法: GMM，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: None
Refining in range: 8 to 10
Final optimal number of components: 9
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_31/repaired_31.txt
Program completed in: 1.4417779445648193 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.44 秒
[INFO] 运行聚类算法: HC，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=average, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_31/repaired_31.txt
Program completed in: 1.3560450077056885 seconds

[INFO] 聚类完成: HC, 运行时间: 1.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 8
Optimal number of clusters from Kneedle: None
No further refinement needed. Final optimal number of clusters: 8
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_31/repaired_31.txt
Program completed in: 5.951740264892578 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 5.95 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_31/repaired_31.txt
Program completed in: 4.908971548080444 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 4.91 秒
==================================================
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_43_algo_2/repaired_dataset_43_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_43_algo_2/repaired_dataset_43_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_43.csv
运行时间: 540.70 秒
[INFO] 运行聚类算法: AP，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Attempt 1 with damping range: (0.5, 0.9), preference range: (-500, -100)
Attempt 1: Best parameters: damping=0.7144702294389572, preference=-263
Number of clusters: 2
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_43/repaired_43.txt
Program completed in: 3.629443883895874 seconds

[INFO] 聚类完成: AP, 运行时间: 3.63 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.775413751602173 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.78 秒
[INFO] 运行聚类算法: GMM，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 10
Final optimal number of components: 10
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.17264461517334 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.17 秒
[INFO] 运行聚类算法: HC，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=14, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.634108781814575 seconds

[INFO] 聚类完成: HC, 运行时间: 2.63 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 14
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 14
Refined optimal number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_43/repaired_43.txt
Program completed in: 0.9995098114013672 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.00 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_43/repaired_43.txt
Program completed in: 11.162825107574463 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 11.16 秒
==================================================
清洗结果已保存到 /root/AutoMLClustering/results/cleaned_results.json
聚类结果已保存到 /root/AutoMLClustering/results/clustered_results.json
[INFO] 开始分析聚类结果
[INFO] Top-K 值: 5
[WARNING] dataset_id 2 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 14 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 23 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 37 在 clustered_results.json 中未找到记录，跳过。
[INFO] 分析结果已保存到 /root/AutoMLClustering/results/analyzed_results.json
[INFO] 分析结果已保存到 /root/AutoMLClustering/results/analyzed_results.json
[INFO] 开始生成训练数据
训练数据已生成并保存到文件：../../../results/training_labels.json
[INFO] 训练数据已成功生成并保存
