nohup: ignoring input
[INFO] 准备处理数据集: flights (CSV: 24.56%.csv, error_rate=24.56%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 0
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_0_algo_1/repaired_dataset_0_algo_1_24.56%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_0_algo_1/repaired_dataset_0_algo_1_24.56%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_0.csv
运行时间: 17.19 秒
[INFO] 运行聚类算法: AP，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_0/repaired_0.txt
Program completed in: 647.8141283988953 seconds

[INFO] 聚类完成: AP, 运行时间: 647.81 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_0/repaired_0.txt
Program completed in: 28.950663089752197 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 28.95 秒
[INFO] 运行聚类算法: GMM，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of components: 48
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_0/repaired_0.txt
Program completed in: 16.93591594696045 seconds

[INFO] 聚类完成: GMM, 运行时间: 16.94 秒
[INFO] 运行聚类算法: HC，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_0/repaired_0.txt
Program completed in: 32.76248121261597 seconds

[INFO] 聚类完成: HC, 运行时间: 32.76 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_0/repaired_0.txt
Program completed in: 41.66657066345215 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 41.67 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 0, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_0/repaired_0.txt
Program completed in: 1485.7935841083527 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1485.79 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 0
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1982.
441866 pairs of (a data error, a potential correction) are featurized.
62% (2449 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1992.
443858 pairs of (a data error, a potential correction) are featurized.
62% (2454 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1494.
445558 pairs of (a data error, a potential correction) are featurized.
65% (2586 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1257.
448048 pairs of (a data error, a potential correction) are featurized.
66% (2590 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 552.
448154 pairs of (a data error, a potential correction) are featurized.
68% (2690 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 796.
452286 pairs of (a data error, a potential correction) are featurized.
68% (2690 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1285.
456332 pairs of (a data error, a potential correction) are featurized.
70% (2759 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1440.
457347 pairs of (a data error, a potential correction) are featurized.
70% (2766 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1042.
458845 pairs of (a data error, a potential correction) are featurized.
70% (2787 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1697.
458867 pairs of (a data error, a potential correction) are featurized.
71% (2794 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1038.
460365 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1589.
460365 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 426.
462357 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1531.
462357 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2153.
464349 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 572.
467890 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2125.
469388 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 943.
471618 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1344.
473665 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1282.
475159 pairs of (a data error, a potential correction) are featurized.
71% (2798 / 3954) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_0_algo_2/repaired_dataset_0_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_0_algo_2/repaired_dataset_0_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_0.csv
运行时间: 603.03 秒
[INFO] 运行聚类算法: AP，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_0/repaired_0.txt
Program completed in: 151.57764720916748 seconds

[INFO] 聚类完成: AP, 运行时间: 151.58 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_0/repaired_0.txt
Program completed in: 22.58839511871338 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 22.59 秒
[INFO] 运行聚类算法: GMM，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 42
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 42
Refined optimal number of components: 37
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_0/repaired_0.txt
Program completed in: 10.648473024368286 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.65 秒
[INFO] 运行聚类算法: HC，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_0/repaired_0.txt
Program completed in: 15.940208435058594 seconds

[INFO] 聚类完成: HC, 运行时间: 15.94 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 42
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 42
Refined optimal number of clusters: 41
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_0/repaired_0.txt
Program completed in: 68.17776656150818 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 68.18 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 0, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_0/repaired_0.txt
Program completed in: 557.5282824039459 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 557.53 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 8.69%.csv, error_rate=8.69%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 1
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_1_algo_1/repaired_dataset_1_algo_1_8.69%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_1_algo_1/repaired_dataset_1_algo_1_8.69%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_1.csv
运行时间: 17.20 秒
[INFO] 运行聚类算法: AP，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_1/repaired_1.txt
Program completed in: 597.8040924072266 seconds

[INFO] 聚类完成: AP, 运行时间: 597.80 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_1/repaired_1.txt
Program completed in: 38.380659341812134 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 38.38 秒
[INFO] 运行聚类算法: GMM，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 38
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 7
Refining in range: 7 to 38
Refined optimal number of components: 17
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_1/repaired_1.txt
Program completed in: 16.486345052719116 seconds

[INFO] 聚类完成: GMM, 运行时间: 16.49 秒
[INFO] 运行聚类算法: HC，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=45, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_1/repaired_1.txt
Program completed in: 26.228499174118042 seconds

[INFO] 聚类完成: HC, 运行时间: 26.23 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_1/repaired_1.txt
Program completed in: 55.66210055351257 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 55.66 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 1, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_1/repaired_1.txt
Program completed in: 1501.3075847625732 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1501.31 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 1
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1267.
146256 pairs of (a data error, a potential correction) are featurized.
76% (996 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 984.
146588 pairs of (a data error, a potential correction) are featurized.
79% (1024 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 492.
147084 pairs of (a data error, a potential correction) are featurized.
79% (1030 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1160.
147084 pairs of (a data error, a potential correction) are featurized.
79% (1030 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1860.
147858 pairs of (a data error, a potential correction) are featurized.
81% (1053 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 460.
148528 pairs of (a data error, a potential correction) are featurized.
82% (1063 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2333.
148528 pairs of (a data error, a potential correction) are featurized.
82% (1066 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 918.
148528 pairs of (a data error, a potential correction) are featurized.
82% (1066 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1009.
148528 pairs of (a data error, a potential correction) are featurized.
82% (1066 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1685.
148536 pairs of (a data error, a potential correction) are featurized.
82% (1066 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1305.
149870 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 298.
149870 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 98.
150534 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 81.
151032 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1573.
151533 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 36.
151533 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1152.
151533 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1818.
152197 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1200.
152197 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1391.
152197 pairs of (a data error, a potential correction) are featurized.
84% (1088 / 1302) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_1_algo_2/repaired_dataset_1_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_1_algo_2/repaired_dataset_1_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_1.csv
运行时间: 555.99 秒
[INFO] 运行聚类算法: AP，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_1/repaired_1.txt
Program completed in: 461.262419462204 seconds

[INFO] 聚类完成: AP, 运行时间: 461.26 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_1/repaired_1.txt
Program completed in: 34.88722777366638 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 34.89 秒
[INFO] 运行聚类算法: GMM，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 40
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 16
Refining in range: 16 to 40
Refined optimal number of components: 40
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_1/repaired_1.txt
Program completed in: 14.348822116851807 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.35 秒
[INFO] 运行聚类算法: HC，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=22, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_1/repaired_1.txt
Program completed in: 27.380207538604736 seconds

[INFO] 聚类完成: HC, 运行时间: 27.38 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 47
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 47
Refined optimal number of clusters: 46
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_1/repaired_1.txt
Program completed in: 73.09504318237305 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 73.10 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 1, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_1/repaired_1.txt
Program completed in: 1333.1919412612915 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1333.19 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 flights，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: flights (CSV: 40.76%.csv, error_rate=40.76%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 3
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_3_algo_1/repaired_dataset_3_algo_1_40.76%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_3_algo_1/repaired_dataset_3_algo_1_40.76%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_3.csv
运行时间: 19.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_3/repaired_3.txt
Program completed in: 726.8381707668304 seconds

[INFO] 聚类完成: AP, 运行时间: 726.84 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_3/repaired_3.txt
Program completed in: 26.15518045425415 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 26.16 秒
[INFO] 运行聚类算法: GMM，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 13
Refining in range: 13 to 48
Refined optimal number of components: 47
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_3/repaired_3.txt
Program completed in: 15.97675609588623 seconds

[INFO] 聚类完成: GMM, 运行时间: 15.98 秒
[INFO] 运行聚类算法: HC，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_3/repaired_3.txt
Program completed in: 31.533955812454224 seconds

[INFO] 聚类完成: HC, 运行时间: 31.53 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 20
Refining in range: 20 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_3/repaired_3.txt
Program completed in: 40.753474950790405 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 40.75 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 3, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_3/repaired_3.txt
Program completed in: 1535.7967307567596 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1535.80 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 3
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 67.
668551 pairs of (a data error, a potential correction) are featurized.
59% (3940 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 187.
679376 pairs of (a data error, a potential correction) are featurized.
59% (3940 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2083.
679376 pairs of (a data error, a potential correction) are featurized.
59% (3943 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2319.
688330 pairs of (a data error, a potential correction) are featurized.
59% (3946 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 935.
697485 pairs of (a data error, a potential correction) are featurized.
59% (3946 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1097.
699174 pairs of (a data error, a potential correction) are featurized.
59% (3946 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 213.
704628 pairs of (a data error, a potential correction) are featurized.
59% (3946 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 599.
705089 pairs of (a data error, a potential correction) are featurized.
59% (3946 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1822.
707875 pairs of (a data error, a potential correction) are featurized.
59% (3961 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 516.
716026 pairs of (a data error, a potential correction) are featurized.
59% (3988 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 928.
721959 pairs of (a data error, a potential correction) are featurized.
59% (3995 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2179.
729760 pairs of (a data error, a potential correction) are featurized.
59% (3997 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1612.
729944 pairs of (a data error, a potential correction) are featurized.
59% (3997 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2295.
737516 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1250.
749031 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 764.
750659 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1076.
753101 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1122.
756903 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 652.
768625 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1331.
775199 pairs of (a data error, a potential correction) are featurized.
61% (4086 / 6733) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_3_algo_2/repaired_dataset_3_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_3_algo_2/repaired_dataset_3_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_3.csv
运行时间: 676.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_3/repaired_3.txt
Program completed in: 108.87768292427063 seconds

[INFO] 聚类完成: AP, 运行时间: 108.88 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_3/repaired_3.txt
Program completed in: 13.828158855438232 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 13.83 秒
[INFO] 运行聚类算法: GMM，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 29
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 13
Refining in range: 13 to 29
Refined optimal number of components: 16
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_3/repaired_3.txt
Program completed in: 11.302414894104004 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.30 秒
[INFO] 运行聚类算法: HC，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=29, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_3/repaired_3.txt
Program completed in: 13.859653949737549 seconds

[INFO] 聚类完成: HC, 运行时间: 13.86 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 38
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 38
Refined optimal number of clusters: 36
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_3/repaired_3.txt
Program completed in: 4.448395252227783 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 4.45 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 3, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_3/repaired_3.txt
Program completed in: 311.66216373443604 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 311.66 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 67.74%.csv, error_rate=67.74%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 4
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_4_algo_1/repaired_dataset_4_algo_1_67.74%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_4_algo_1/repaired_dataset_4_algo_1_67.74%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_4.csv
运行时间: 18.59 秒
[INFO] 运行聚类算法: AP，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_4/repaired_4.txt
Program completed in: 602.6139538288116 seconds

[INFO] 聚类完成: AP, 运行时间: 602.61 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_4/repaired_4.txt
Program completed in: 26.886387586593628 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 26.89 秒
[INFO] 运行聚类算法: GMM，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 46
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 46
Refined optimal number of components: 33
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_4/repaired_4.txt
Program completed in: 13.146828174591064 seconds

[INFO] 聚类完成: GMM, 运行时间: 13.15 秒
[INFO] 运行聚类算法: HC，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=46, linkage=average, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_4/repaired_4.txt
Program completed in: 25.51153039932251 seconds

[INFO] 聚类完成: HC, 运行时间: 25.51 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 46
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 46
Refined optimal number of clusters: 46
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_4/repaired_4.txt
Program completed in: 53.885653018951416 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 53.89 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 4, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_4/repaired_4.txt
Program completed in: 1045.5968306064606 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1045.60 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 4
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 422.
1413736 pairs of (a data error, a potential correction) are featurized.
25% (2751 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2202.
1425448 pairs of (a data error, a potential correction) are featurized.
26% (2852 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1250.
1446204 pairs of (a data error, a potential correction) are featurized.
30% (3234 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1870.
1473655 pairs of (a data error, a potential correction) are featurized.
31% (3401 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 526.
1486975 pairs of (a data error, a potential correction) are featurized.
32% (3451 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 985.
1510860 pairs of (a data error, a potential correction) are featurized.
33% (3610 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 407.
1529148 pairs of (a data error, a potential correction) are featurized.
35% (3792 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 938.
1547700 pairs of (a data error, a potential correction) are featurized.
35% (3857 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1317.
1572654 pairs of (a data error, a potential correction) are featurized.
36% (3909 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 917.
1588529 pairs of (a data error, a potential correction) are featurized.
36% (3916 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2118.
1591854 pairs of (a data error, a potential correction) are featurized.
36% (3929 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 494.
1605654 pairs of (a data error, a potential correction) are featurized.
38% (4162 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 967.
1629539 pairs of (a data error, a potential correction) are featurized.
39% (4191 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1865.
1638193 pairs of (a data error, a potential correction) are featurized.
39% (4196 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 437.
1651497 pairs of (a data error, a potential correction) are featurized.
39% (4200 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 39.
1668633 pairs of (a data error, a potential correction) are featurized.
39% (4222 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1969.
1685543 pairs of (a data error, a potential correction) are featurized.
39% (4271 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1483.
1690532 pairs of (a data error, a potential correction) are featurized.
39% (4281 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1476.
1702895 pairs of (a data error, a potential correction) are featurized.
39% (4286 / 10884) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1881.
1719813 pairs of (a data error, a potential correction) are featurized.
39% (4286 / 10884) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_4_algo_2/repaired_dataset_4_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_4_algo_2/repaired_dataset_4_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_4.csv
运行时间: 593.38 秒
[INFO] 运行聚类算法: AP，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_4/repaired_4.txt
Program completed in: 10.506997108459473 seconds

[INFO] 聚类完成: AP, 运行时间: 10.51 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_4/repaired_4.txt
Program completed in: 3.5674960613250732 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.57 秒
[INFO] 运行聚类算法: GMM，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 3
Refining in range: 3 to 20
Refined optimal number of components: 18
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_4/repaired_4.txt
Program completed in: 2.8929989337921143 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.89 秒
[INFO] 运行聚类算法: HC，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_4/repaired_4.txt
Program completed in: 2.3575387001037598 seconds

[INFO] 聚类完成: HC, 运行时间: 2.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 20
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 20
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_4/repaired_4.txt
Program completed in: 1.6651835441589355 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.67 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 4, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_4/repaired_4.txt
Program completed in: 28.38258981704712 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 28.38 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 38.92%.csv, error_rate=38.92%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 5
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_5_algo_1/repaired_dataset_5_algo_1_38.92%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_5_algo_1/repaired_dataset_5_algo_1_38.92%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_5.csv
运行时间: 18.22 秒
[INFO] 运行聚类算法: AP，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_5/repaired_5.txt
Program completed in: 736.4390923976898 seconds

[INFO] 聚类完成: AP, 运行时间: 736.44 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_5/repaired_5.txt
Program completed in: 26.35705542564392 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 26.36 秒
[INFO] 运行聚类算法: GMM，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 12
Refining in range: 12 to 48
Refined optimal number of components: 47
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_5/repaired_5.txt
Program completed in: 17.046249389648438 seconds

[INFO] 聚类完成: GMM, 运行时间: 17.05 秒
[INFO] 运行聚类算法: HC，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_5/repaired_5.txt
Program completed in: 31.62827157974243 seconds

[INFO] 聚类完成: HC, 运行时间: 31.63 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 17
Refining in range: 17 to 48
Refined optimal number of clusters: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_5/repaired_5.txt
Program completed in: 51.392765283584595 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 51.39 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 5, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_5/repaired_5.txt
Program completed in: 1494.3093540668488 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1494.31 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 5
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1723.
760824 pairs of (a data error, a potential correction) are featurized.
69% (4080 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2155.
767581 pairs of (a data error, a potential correction) are featurized.
70% (4156 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 123.
770905 pairs of (a data error, a potential correction) are featurized.
70% (4156 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 204.
770979 pairs of (a data error, a potential correction) are featurized.
70% (4156 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2007.
780268 pairs of (a data error, a potential correction) are featurized.
71% (4215 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1063.
785254 pairs of (a data error, a potential correction) are featurized.
71% (4241 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2130.
797119 pairs of (a data error, a potential correction) are featurized.
72% (4271 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2046.
804126 pairs of (a data error, a potential correction) are featurized.
74% (4414 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 845.
809194 pairs of (a data error, a potential correction) are featurized.
74% (4414 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 656.
809195 pairs of (a data error, a potential correction) are featurized.
75% (4446 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1118.
815843 pairs of (a data error, a potential correction) are featurized.
75% (4446 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1439.
827384 pairs of (a data error, a potential correction) are featurized.
75% (4461 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 68.
830007 pairs of (a data error, a potential correction) are featurized.
75% (4464 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 27.
836634 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 781.
839223 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 902.
845040 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 985.
850943 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1969.
857591 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1373.
859145 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1085.
867603 pairs of (a data error, a potential correction) are featurized.
75% (4465 / 5938) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_5_algo_2/repaired_dataset_5_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_5_algo_2/repaired_dataset_5_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_5.csv
运行时间: 715.71 秒
[INFO] 运行聚类算法: AP，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_5/repaired_5.txt
Program completed in: 187.62355732917786 seconds

[INFO] 聚类完成: AP, 运行时间: 187.62 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_5/repaired_5.txt
Program completed in: 22.710527181625366 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 22.71 秒
[INFO] 运行聚类算法: GMM，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 9
Refining in range: 9 to 10
Refined optimal number of components: 9
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_5/repaired_5.txt
Program completed in: 15.896612882614136 seconds

[INFO] 聚类完成: GMM, 运行时间: 15.90 秒
[INFO] 运行聚类算法: HC，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_5/repaired_5.txt
Program completed in: 16.54626441001892 seconds

[INFO] 聚类完成: HC, 运行时间: 16.55 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 42
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 42
Refined optimal number of clusters: 41
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_5/repaired_5.txt
Program completed in: 76.15974307060242 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 76.16 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 5, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_5/repaired_5.txt
Program completed in: 507.9795114994049 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 507.98 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 30.63%.csv, error_rate=30.63%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 6
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_6_algo_1/repaired_dataset_6_algo_1_30.63%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_6_algo_1/repaired_dataset_6_algo_1_30.63%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_6.csv
运行时间: 18.04 秒
[INFO] 运行聚类算法: AP，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_6/repaired_6.txt
Program completed in: 743.1117429733276 seconds

[INFO] 聚类完成: AP, 运行时间: 743.11 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_6/repaired_6.txt
Program completed in: 27.89581060409546 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 27.90 秒
[INFO] 运行聚类算法: GMM，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 15
Refining in range: 15 to 48
Refined optimal number of components: 48
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_6/repaired_6.txt
Program completed in: 16.13900852203369 seconds

[INFO] 聚类完成: GMM, 运行时间: 16.14 秒
[INFO] 运行聚类算法: HC，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=ward, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_6/repaired_6.txt
Program completed in: 32.49449634552002 seconds

[INFO] 聚类完成: HC, 运行时间: 32.49 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_6/repaired_6.txt
Program completed in: 44.70027160644531 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 44.70 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 6, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_6/repaired_6.txt
Program completed in: 1505.7498779296875 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1505.75 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 6
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 9.
590927 pairs of (a data error, a potential correction) are featurized.
53% (2761 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2111.
592685 pairs of (a data error, a potential correction) are featurized.
53% (2761 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2181.
593758 pairs of (a data error, a potential correction) are featurized.
53% (2763 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 418.
597943 pairs of (a data error, a potential correction) are featurized.
62% (3221 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 174.
602419 pairs of (a data error, a potential correction) are featurized.
70% (3633 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 52.
602541 pairs of (a data error, a potential correction) are featurized.
74% (3867 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2170.
604647 pairs of (a data error, a potential correction) are featurized.
75% (3921 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2318.
607024 pairs of (a data error, a potential correction) are featurized.
75% (3921 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1482.
607079 pairs of (a data error, a potential correction) are featurized.
75% (3921 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 981.
609684 pairs of (a data error, a potential correction) are featurized.
76% (3949 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1799.
609684 pairs of (a data error, a potential correction) are featurized.
76% (3951 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1904.
609712 pairs of (a data error, a potential correction) are featurized.
76% (3959 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 93.
611111 pairs of (a data error, a potential correction) are featurized.
76% (3959 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1519.
612553 pairs of (a data error, a potential correction) are featurized.
76% (3987 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 223.
615444 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 67.
615444 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 771.
618360 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1800.
623004 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 433.
624183 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 681.
630498 pairs of (a data error, a potential correction) are featurized.
78% (4052 / 5212) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_6_algo_2/repaired_dataset_6_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_6_algo_2/repaired_dataset_6_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_6.csv
运行时间: 646.23 秒
[INFO] 运行聚类算法: AP，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_6/repaired_6.txt
Program completed in: 277.269020318985 seconds

[INFO] 聚类完成: AP, 运行时间: 277.27 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_6/repaired_6.txt
Program completed in: 31.848297834396362 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 31.85 秒
[INFO] 运行聚类算法: GMM，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 43
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 43
Refined optimal number of components: 28
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_6/repaired_6.txt
Program completed in: 12.788968563079834 seconds

[INFO] 聚类完成: GMM, 运行时间: 12.79 秒
[INFO] 运行聚类算法: HC，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_6/repaired_6.txt
Program completed in: 20.99047613143921 seconds

[INFO] 聚类完成: HC, 运行时间: 20.99 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 44
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 44
Refined optimal number of clusters: 41
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_6/repaired_6.txt
Program completed in: 62.17878317832947 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 62.18 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 6, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_6/repaired_6.txt
Program completed in: 744.7391912937164 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 744.74 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 45.44%.csv, error_rate=45.44%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 7
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_7_algo_1/repaired_dataset_7_algo_1_45.44%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_7_algo_1/repaired_dataset_7_algo_1_45.44%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_7.csv
运行时间: 18.23 秒
[INFO] 运行聚类算法: AP，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_7/repaired_7.txt
Program completed in: 769.5683991909027 seconds

[INFO] 聚类完成: AP, 运行时间: 769.57 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_7/repaired_7.txt
Program completed in: 25.71544623374939 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 25.72 秒
[INFO] 运行聚类算法: GMM，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 24
Refining in range: 24 to 48
Refined optimal number of components: 45
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_7/repaired_7.txt
Program completed in: 11.33954644203186 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.34 秒
[INFO] 运行聚类算法: HC，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_7/repaired_7.txt
Program completed in: 32.383490324020386 seconds

[INFO] 聚类完成: HC, 运行时间: 32.38 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 18
Refining in range: 18 to 48
Refined optimal number of clusters: 44
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_7/repaired_7.txt
Program completed in: 44.04100012779236 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 44.04 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 7, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_7/repaired_7.txt
Program completed in: 1483.5342164039612 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1483.53 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 7
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1079.
732344 pairs of (a data error, a potential correction) are featurized.
63% (4688 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1461.
736537 pairs of (a data error, a potential correction) are featurized.
64% (4788 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1764.
751695 pairs of (a data error, a potential correction) are featurized.
65% (4838 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1818.
755683 pairs of (a data error, a potential correction) are featurized.
65% (4838 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2239.
756670 pairs of (a data error, a potential correction) are featurized.
65% (4870 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1083.
756685 pairs of (a data error, a potential correction) are featurized.
65% (4874 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 383.
759287 pairs of (a data error, a potential correction) are featurized.
66% (4943 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 72.
765841 pairs of (a data error, a potential correction) are featurized.
66% (4943 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 25.
781668 pairs of (a data error, a potential correction) are featurized.
66% (4943 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1945.
790770 pairs of (a data error, a potential correction) are featurized.
66% (4943 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2361.
801311 pairs of (a data error, a potential correction) are featurized.
67% (4967 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1591.
808158 pairs of (a data error, a potential correction) are featurized.
67% (4972 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 186.
819227 pairs of (a data error, a potential correction) are featurized.
67% (4981 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1686.
826338 pairs of (a data error, a potential correction) are featurized.
67% (4982 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1658.
838099 pairs of (a data error, a potential correction) are featurized.
67% (4982 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 546.
843709 pairs of (a data error, a potential correction) are featurized.
67% (4982 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1981.
849825 pairs of (a data error, a potential correction) are featurized.
67% (4985 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1601.
859907 pairs of (a data error, a potential correction) are featurized.
67% (4993 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1834.
865279 pairs of (a data error, a potential correction) are featurized.
67% (4993 / 7462) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 940.
869312 pairs of (a data error, a potential correction) are featurized.
67% (4993 / 7462) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_7_algo_2/repaired_dataset_7_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_7_algo_2/repaired_dataset_7_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_7.csv
运行时间: 692.84 秒
[INFO] 运行聚类算法: AP，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_7/repaired_7.txt
Program completed in: 93.24492716789246 seconds

[INFO] 聚类完成: AP, 运行时间: 93.24 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_7/repaired_7.txt
Program completed in: 16.68518853187561 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 16.69 秒
[INFO] 运行聚类算法: GMM，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 38
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 18
Refining in range: 18 to 38
Refined optimal number of components: 34
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_7/repaired_7.txt
Program completed in: 11.741875171661377 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.74 秒
[INFO] 运行聚类算法: HC，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_7/repaired_7.txt
Program completed in: 11.504863262176514 seconds

[INFO] 聚类完成: HC, 运行时间: 11.50 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 38
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 38
Refined optimal number of clusters: 32
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_7/repaired_7.txt
Program completed in: 4.368887186050415 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 4.37 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 7, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_7/repaired_7.txt
Program completed in: 294.7257318496704 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 294.73 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 51.59%.csv, error_rate=51.59%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 8
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_8_algo_1/repaired_dataset_8_algo_1_51.59%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_8_algo_1/repaired_dataset_8_algo_1_51.59%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_8.csv
运行时间: 19.44 秒
[INFO] 运行聚类算法: AP，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_8/repaired_8.txt
Program completed in: 651.9059624671936 seconds

[INFO] 聚类完成: AP, 运行时间: 651.91 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_8/repaired_8.txt
Program completed in: 26.64843463897705 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 26.65 秒
[INFO] 运行聚类算法: GMM，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 48
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 2
Refining in range: 2 to 48
Refined optimal number of components: 48
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_8/repaired_8.txt
Program completed in: 11.554973602294922 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.55 秒
[INFO] 运行聚类算法: HC，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_8/repaired_8.txt
Program completed in: 31.91349458694458 seconds

[INFO] 聚类完成: HC, 运行时间: 31.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 16
Refining in range: 16 to 48
Refined optimal number of clusters: 48
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_8/repaired_8.txt
Program completed in: 57.76861095428467 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 57.77 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 8, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_8/repaired_8.txt
Program completed in: 1508.5132775306702 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1508.51 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 8
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1671.
789865 pairs of (a data error, a potential correction) are featurized.
58% (4659 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 174.
798941 pairs of (a data error, a potential correction) are featurized.
58% (4667 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1744.
801940 pairs of (a data error, a potential correction) are featurized.
59% (4735 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 651.
808529 pairs of (a data error, a potential correction) are featurized.
59% (4738 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 804.
823384 pairs of (a data error, a potential correction) are featurized.
61% (4919 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2105.
830667 pairs of (a data error, a potential correction) are featurized.
62% (4972 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 945.
833058 pairs of (a data error, a potential correction) are featurized.
62% (4996 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 509.
850294 pairs of (a data error, a potential correction) are featurized.
62% (5040 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2286.
855276 pairs of (a data error, a potential correction) are featurized.
63% (5057 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1812.
865992 pairs of (a data error, a potential correction) are featurized.
63% (5067 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1065.
865992 pairs of (a data error, a potential correction) are featurized.
63% (5067 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1466.
878886 pairs of (a data error, a potential correction) are featurized.
63% (5079 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1438.
890707 pairs of (a data error, a potential correction) are featurized.
63% (5080 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2016.
901477 pairs of (a data error, a potential correction) are featurized.
64% (5156 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1114.
914466 pairs of (a data error, a potential correction) are featurized.
64% (5156 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1091.
933477 pairs of (a data error, a potential correction) are featurized.
64% (5172 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 897.
945118 pairs of (a data error, a potential correction) are featurized.
64% (5172 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 46.
957647 pairs of (a data error, a potential correction) are featurized.
64% (5183 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1490.
968123 pairs of (a data error, a potential correction) are featurized.
64% (5183 / 8077) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2370.
978599 pairs of (a data error, a potential correction) are featurized.
64% (5183 / 8077) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_8_algo_2/repaired_dataset_8_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_8_algo_2/repaired_dataset_8_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_8.csv
运行时间: 709.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_8/repaired_8.txt
Program completed in: 57.14277672767639 seconds

[INFO] 聚类完成: AP, 运行时间: 57.14 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_8/repaired_8.txt
Program completed in: 12.920410394668579 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 12.92 秒
[INFO] 运行聚类算法: GMM，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 28
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 12
Refining in range: 12 to 28
Refined optimal number of components: 28
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_8/repaired_8.txt
Program completed in: 10.52679967880249 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.53 秒
[INFO] 运行聚类算法: HC，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_8/repaired_8.txt
Program completed in: 10.258979082107544 seconds

[INFO] 聚类完成: HC, 运行时间: 10.26 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_8/repaired_8.txt
Program completed in: 3.8754172325134277 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 3.88 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 8, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_8/repaired_8.txt
Program completed in: 209.29463386535645 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 209.29 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 62.87%.csv, error_rate=62.87%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 9
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_9_algo_1/repaired_dataset_9_algo_1_62.87%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_9_algo_1/repaired_dataset_9_algo_1_62.87%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_9.csv
运行时间: 18.08 秒
[INFO] 运行聚类算法: AP，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_9/repaired_9.txt
Program completed in: 765.0919115543365 seconds

[INFO] 聚类完成: AP, 运行时间: 765.09 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_9/repaired_9.txt
Program completed in: 28.746262073516846 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 28.75 秒
[INFO] 运行聚类算法: GMM，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 46
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 3
Refining in range: 3 to 46
Refined optimal number of components: 45
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_9/repaired_9.txt
Program completed in: 14.248477220535278 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.25 秒
[INFO] 运行聚类算法: HC，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=complete, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_9/repaired_9.txt
Program completed in: 30.13375210762024 seconds

[INFO] 聚类完成: HC, 运行时间: 30.13 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 17
Refining in range: 17 to 48
Refined optimal number of clusters: 45
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_9/repaired_9.txt
Program completed in: 41.947829723358154 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 41.95 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 9, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_9/repaired_9.txt
Program completed in: 1491.7049491405487 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1491.70 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 9
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 762.
1396671 pairs of (a data error, a potential correction) are featurized.
44% (4280 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1415.
1412330 pairs of (a data error, a potential correction) are featurized.
47% (4570 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 249.
1433686 pairs of (a data error, a potential correction) are featurized.
47% (4601 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1025.
1453648 pairs of (a data error, a potential correction) are featurized.
47% (4607 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1478.
1465616 pairs of (a data error, a potential correction) are featurized.
47% (4609 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1695.
1466498 pairs of (a data error, a potential correction) are featurized.
47% (4609 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2091.
1491930 pairs of (a data error, a potential correction) are featurized.
47% (4635 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2210.
1509414 pairs of (a data error, a potential correction) are featurized.
48% (4660 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1612.
1526550 pairs of (a data error, a potential correction) are featurized.
48% (4709 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1094.
1539875 pairs of (a data error, a potential correction) are featurized.
48% (4713 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2222.
1543397 pairs of (a data error, a potential correction) are featurized.
49% (4803 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2233.
1577820 pairs of (a data error, a potential correction) are featurized.
50% (4859 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 733.
1596141 pairs of (a data error, a potential correction) are featurized.
50% (4884 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1374.
1615976 pairs of (a data error, a potential correction) are featurized.
50% (4885 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1748.
1616106 pairs of (a data error, a potential correction) are featurized.
50% (4885 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1893.
1633121 pairs of (a data error, a potential correction) are featurized.
50% (4885 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1346.
1646585 pairs of (a data error, a potential correction) are featurized.
51% (4945 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 395.
1653400 pairs of (a data error, a potential correction) are featurized.
51% (4953 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 125.
1663637 pairs of (a data error, a potential correction) are featurized.
51% (4996 / 9773) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1866.
1676218 pairs of (a data error, a potential correction) are featurized.
51% (4996 / 9773) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_9_algo_2/repaired_dataset_9_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_9_algo_2/repaired_dataset_9_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_9.csv
运行时间: 592.37 秒
[INFO] 运行聚类算法: AP，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_9/repaired_9.txt
Program completed in: 17.809427976608276 seconds

[INFO] 聚类完成: AP, 运行时间: 17.81 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_9/repaired_9.txt
Program completed in: 6.185878276824951 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 6.19 秒
[INFO] 运行聚类算法: GMM，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 26
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 9
Refining in range: 9 to 26
Refined optimal number of components: 21
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_9/repaired_9.txt
Program completed in: 6.240180015563965 seconds

[INFO] 聚类完成: GMM, 运行时间: 6.24 秒
[INFO] 运行聚类算法: HC，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=13, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_9/repaired_9.txt
Program completed in: 4.995159149169922 seconds

[INFO] 聚类完成: HC, 运行时间: 5.00 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 26
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 26
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_9/repaired_9.txt
Program completed in: 2.212738037109375 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 2.21 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 9, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_9/repaired_9.txt
Program completed in: 62.0929958820343 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 62.09 秒
==================================================
[INFO] 准备处理数据集: flights (CSV: 16.97%.csv, error_rate=16.97%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 10
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_10_algo_1/repaired_dataset_10_algo_1_16.97%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_10_algo_1/repaired_dataset_10_algo_1_16.97%.csv
清洗完成: Dataset=flights, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_10.csv
运行时间: 16.19 秒
[INFO] 运行聚类算法: AP，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_10/repaired_10.txt
Program completed in: 683.6908299922943 seconds

[INFO] 聚类完成: AP, 运行时间: 683.69 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_10/repaired_10.txt
Program completed in: 31.587539196014404 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 31.59 秒
[INFO] 运行聚类算法: GMM，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 46
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 3
Refining in range: 3 to 46
Refined optimal number of components: 45
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_10/repaired_10.txt
Program completed in: 14.121663570404053 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.12 秒
[INFO] 运行聚类算法: HC，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=48, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_10/repaired_10.txt
Program completed in: 33.149073362350464 seconds

[INFO] 聚类完成: HC, 运行时间: 33.15 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 48
Optimal number of clusters from Kneedle: 14
Refining in range: 14 to 48
Refined optimal number of clusters: 47
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_10/repaired_10.txt
Program completed in: 43.007752418518066 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 43.01 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 10, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_10/repaired_10.txt
Program completed in: 1496.0826859474182 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1496.08 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 10
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 354.
280417 pairs of (a data error, a potential correction) are featurized.
68% (1627 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2352.
282049 pairs of (a data error, a potential correction) are featurized.
75% (1814 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 137.
283045 pairs of (a data error, a potential correction) are featurized.
79% (1906 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1830.
286393 pairs of (a data error, a potential correction) are featurized.
82% (1965 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1400.
287721 pairs of (a data error, a potential correction) are featurized.
83% (1993 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2295.
287721 pairs of (a data error, a potential correction) are featurized.
83% (2007 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 18.
290045 pairs of (a data error, a potential correction) are featurized.
83% (2007 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1792.
292369 pairs of (a data error, a potential correction) are featurized.
83% (2007 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 625.
292431 pairs of (a data error, a potential correction) are featurized.
84% (2012 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 38.
292431 pairs of (a data error, a potential correction) are featurized.
84% (2012 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 931.
293458 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2090.
294916 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1041.
296936 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1309.
296936 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2123.
297930 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2302.
298926 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1146.
298966 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1419.
299016 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1931.
300010 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1071.
301504 pairs of (a data error, a potential correction) are featurized.
84% (2020 / 2406) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/flights/raha_baran/results-dataset_10_algo_2/repaired_dataset_10_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/flights/raha_baran/results-dataset_10_algo_2/repaired_dataset_10_algo_2.csv
清洗完成: Dataset=flights, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_10.csv
运行时间: 560.19 秒
[INFO] 运行聚类算法: AP，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_10/repaired_10.txt
Program completed in: 308.9158878326416 seconds

[INFO] 聚类完成: AP, 运行时间: 308.92 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_10/repaired_10.txt
Program completed in: 32.026134729385376 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 32.03 秒
[INFO] 运行聚类算法: GMM，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of components from Optuna: 42
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 18
Refining in range: 18 to 42
Refined optimal number of components: 41
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_10/repaired_10.txt
Program completed in: 12.781102418899536 seconds

[INFO] 聚类完成: GMM, 运行时间: 12.78 秒
[INFO] 运行聚类算法: HC，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_10/repaired_10.txt
Program completed in: 23.801424026489258 seconds

[INFO] 聚类完成: HC, 运行时间: 23.80 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using multiple columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Initial optimal number of clusters from Optuna: 46
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 46
Refined optimal number of clusters: 46
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_10/repaired_10.txt
Program completed in: 59.48330521583557 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 59.48 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 10, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['tuple_id']
Using all columns for clustering: ['act_arr_time', 'act_dep_time', 'flight', 'sched_arr_time', 'sched_dep_time', 'src']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_10/repaired_10.txt
Program completed in: 1038.753496170044 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 1038.75 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 49.29%.csv, error_rate=49.29%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 11
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_11_algo_1/repaired_dataset_11_algo_1_49.29%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_11_algo_1/repaired_dataset_11_algo_1_49.29%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_11.csv
运行时间: 40.56 秒
[INFO] 运行聚类算法: AP，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_11/repaired_11.txt
Program completed in: 38.4301655292511 seconds

[INFO] 聚类完成: AP, 运行时间: 38.43 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_11/repaired_11.txt
Program completed in: 2.25166392326355 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.25 秒
[INFO] 运行聚类算法: GMM，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 22
Refined optimal number of components: 21
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_11/repaired_11.txt
Program completed in: 7.670708894729614 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.67 秒
[INFO] 运行聚类算法: HC，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_11/repaired_11.txt
Program completed in: 8.444235801696777 seconds

[INFO] 聚类完成: HC, 运行时间: 8.44 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_11/repaired_11.txt
Program completed in: 51.47397303581238 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 51.47 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 11, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_11/repaired_11.txt
Program completed in: 124.63849973678589 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 124.64 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 11
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 590.
383311 pairs of (a data error, a potential correction) are featurized.
73% (7766 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 485.
409351 pairs of (a data error, a potential correction) are featurized.
74% (7926 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 876.
444717 pairs of (a data error, a potential correction) are featurized.
75% (8007 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 256.
501686 pairs of (a data error, a potential correction) are featurized.
76% (8073 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 733.
527486 pairs of (a data error, a potential correction) are featurized.
76% (8133 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 49.
564110 pairs of (a data error, a potential correction) are featurized.
77% (8185 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 405.
605671 pairs of (a data error, a potential correction) are featurized.
78% (8330 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 817.
654372 pairs of (a data error, a potential correction) are featurized.
79% (8441 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
691520 pairs of (a data error, a potential correction) are featurized.
79% (8455 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 312.
711331 pairs of (a data error, a potential correction) are featurized.
80% (8472 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 216.
742329 pairs of (a data error, a potential correction) are featurized.
80% (8504 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 890.
751675 pairs of (a data error, a potential correction) are featurized.
80% (8527 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 295.
767380 pairs of (a data error, a potential correction) are featurized.
81% (8610 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 393.
785383 pairs of (a data error, a potential correction) are featurized.
81% (8641 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 737.
796112 pairs of (a data error, a potential correction) are featurized.
82% (8705 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 555.
822168 pairs of (a data error, a potential correction) are featurized.
82% (8725 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1.
827781 pairs of (a data error, a potential correction) are featurized.
82% (8730 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 296.
838564 pairs of (a data error, a potential correction) are featurized.
82% (8781 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 340.
864149 pairs of (a data error, a potential correction) are featurized.
83% (8801 / 10645) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 352.
885661 pairs of (a data error, a potential correction) are featurized.
83% (8801 / 10645) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_11_algo_2/repaired_dataset_11_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_11_algo_2/repaired_dataset_11_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_11.csv
运行时间: 852.87 秒
[INFO] 运行聚类算法: AP，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_11/repaired_11.txt
Program completed in: 6.0721588134765625 seconds

[INFO] 聚类完成: AP, 运行时间: 6.07 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_11/repaired_11.txt
Program completed in: 1.827423095703125 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.83 秒
[INFO] 运行聚类算法: GMM，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 12
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 12
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_11/repaired_11.txt
Program completed in: 4.807810306549072 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.81 秒
[INFO] 运行聚类算法: HC，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_11/repaired_11.txt
Program completed in: 3.4494211673736572 seconds

[INFO] 聚类完成: HC, 运行时间: 3.45 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 20
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 20
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_11/repaired_11.txt
Program completed in: 1.849656581878662 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.85 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 11, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_11/repaired_11.txt
Program completed in: 26.442073345184326 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 26.44 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 11.96%.csv, error_rate=11.96%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 12
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_12_algo_1/repaired_dataset_12_algo_1_11.96%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_12_algo_1/repaired_dataset_12_algo_1_11.96%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_12.csv
运行时间: 38.02 秒
[INFO] 运行聚类算法: AP，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_12/repaired_12.txt
Program completed in: 27.846937656402588 seconds

[INFO] 聚类完成: AP, 运行时间: 27.85 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_12/repaired_12.txt
Program completed in: 20.159136295318604 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.16 秒
[INFO] 运行聚类算法: GMM，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 15
No further refinement needed. Final optimal number of components: 15
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_12/repaired_12.txt
Program completed in: 5.871855974197388 seconds

[INFO] 聚类完成: GMM, 运行时间: 5.87 秒
[INFO] 运行聚类算法: HC，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_12/repaired_12.txt
Program completed in: 7.915978193283081 seconds

[INFO] 聚类完成: HC, 运行时间: 7.92 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_12/repaired_12.txt
Program completed in: 48.68770503997803 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 48.69 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 12, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_12/repaired_12.txt
Program completed in: 116.90071654319763 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 116.90 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 12
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 354.
49726 pairs of (a data error, a potential correction) are featurized.
93% (3741 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 963.
56775 pairs of (a data error, a potential correction) are featurized.
94% (3788 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
61768 pairs of (a data error, a potential correction) are featurized.
94% (3794 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
67448 pairs of (a data error, a potential correction) are featurized.
94% (3799 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 715.
74098 pairs of (a data error, a potential correction) are featurized.
94% (3805 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 683.
81660 pairs of (a data error, a potential correction) are featurized.
95% (3807 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 296.
86692 pairs of (a data error, a potential correction) are featurized.
95% (3807 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 288.
92301 pairs of (a data error, a potential correction) are featurized.
95% (3807 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 436.
97238 pairs of (a data error, a potential correction) are featurized.
95% (3809 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 547.
102126 pairs of (a data error, a potential correction) are featurized.
95% (3811 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 868.
107731 pairs of (a data error, a potential correction) are featurized.
95% (3819 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 181.
113062 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 342.
119851 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 28.
124458 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 802.
130507 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 409.
135408 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 902.
140291 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 638.
145899 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 821.
148355 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 133.
153241 pairs of (a data error, a potential correction) are featurized.
95% (3842 / 4027) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_12_algo_2/repaired_dataset_12_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_12_algo_2/repaired_dataset_12_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_12.csv
运行时间: 742.97 秒
[INFO] 运行聚类算法: AP，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_12/repaired_12.txt
Program completed in: 25.385156393051147 seconds

[INFO] 聚类完成: AP, 运行时间: 25.39 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_12/repaired_12.txt
Program completed in: 20.31106996536255 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.31 秒
[INFO] 运行聚类算法: GMM，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 14
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 14
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_12/repaired_12.txt
Program completed in: 10.125163793563843 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.13 秒
[INFO] 运行聚类算法: HC，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_12/repaired_12.txt
Program completed in: 6.963251113891602 seconds

[INFO] 聚类完成: HC, 运行时间: 6.96 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 29
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 29
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_12/repaired_12.txt
Program completed in: 48.117539167404175 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 48.12 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 12, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_12/repaired_12.txt
Program completed in: 94.50646948814392 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 94.51 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 27.96%.csv, error_rate=27.96%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 13
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_13_algo_1/repaired_dataset_13_algo_1_27.96%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_13_algo_1/repaired_dataset_13_algo_1_27.96%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_13.csv
运行时间: 41.98 秒
[INFO] 运行聚类算法: AP，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_13/repaired_13.txt
Program completed in: 32.221033334732056 seconds

[INFO] 聚类完成: AP, 运行时间: 32.22 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_13/repaired_13.txt
Program completed in: 19.194982051849365 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 19.19 秒
[INFO] 运行聚类算法: GMM，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 22
Refined optimal number of components: 21
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_13/repaired_13.txt
Program completed in: 10.747526168823242 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.75 秒
[INFO] 运行聚类算法: HC，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=13, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_13/repaired_13.txt
Program completed in: 8.208959102630615 seconds

[INFO] 聚类完成: HC, 运行时间: 8.21 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_13/repaired_13.txt
Program completed in: 52.49499201774597 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 52.49 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 13, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_13/repaired_13.txt
Program completed in: 125.10913324356079 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 125.11 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 13
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 587.
188401 pairs of (a data error, a potential correction) are featurized.
69% (4828 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 788.
205212 pairs of (a data error, a potential correction) are featurized.
82% (5700 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 953.
218486 pairs of (a data error, a potential correction) are featurized.
82% (5718 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 239.
230808 pairs of (a data error, a potential correction) are featurized.
82% (5736 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
239434 pairs of (a data error, a potential correction) are featurized.
84% (5821 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
240439 pairs of (a data error, a potential correction) are featurized.
84% (5833 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 422.
252797 pairs of (a data error, a potential correction) are featurized.
84% (5838 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 688.
268704 pairs of (a data error, a potential correction) are featurized.
85% (5947 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 98.
278828 pairs of (a data error, a potential correction) are featurized.
86% (5991 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 76.
291344 pairs of (a data error, a potential correction) are featurized.
86% (5994 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 441.
301043 pairs of (a data error, a potential correction) are featurized.
86% (6001 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 259.
320444 pairs of (a data error, a potential correction) are featurized.
87% (6030 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 311.
334418 pairs of (a data error, a potential correction) are featurized.
87% (6039 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 170.
346762 pairs of (a data error, a potential correction) are featurized.
87% (6049 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
356207 pairs of (a data error, a potential correction) are featurized.
87% (6050 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 776.
359005 pairs of (a data error, a potential correction) are featurized.
87% (6050 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 120.
371341 pairs of (a data error, a potential correction) are featurized.
87% (6057 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 214.
381160 pairs of (a data error, a potential correction) are featurized.
87% (6074 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 128.
386227 pairs of (a data error, a potential correction) are featurized.
87% (6076 / 6965) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 520.
390878 pairs of (a data error, a potential correction) are featurized.
87% (6076 / 6965) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_13_algo_2/repaired_dataset_13_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_13_algo_2/repaired_dataset_13_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_13.csv
运行时间: 798.46 秒
[INFO] 运行聚类算法: AP，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_13/repaired_13.txt
Program completed in: 12.326152801513672 seconds

[INFO] 聚类完成: AP, 运行时间: 12.33 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_13/repaired_13.txt
Program completed in: 16.85524821281433 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 16.86 秒
[INFO] 运行聚类算法: GMM，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 18
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 7
Refining in range: 7 to 18
Refined optimal number of components: 18
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_13/repaired_13.txt
Program completed in: 8.6841299533844 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.68 秒
[INFO] 运行聚类算法: HC，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_13/repaired_13.txt
Program completed in: 4.7179954051971436 seconds

[INFO] 聚类完成: HC, 运行时间: 4.72 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 25
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 25
Refined optimal number of clusters: 23
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_13/repaired_13.txt
Program completed in: 38.09001421928406 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 38.09 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 13, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_13/repaired_13.txt
Program completed in: 53.909876346588135 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 53.91 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 hospital，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: hospital (CSV: 8.53%.csv, error_rate=8.53%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 15
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_15_algo_1/repaired_dataset_15_algo_1_8.53%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_15_algo_1/repaired_dataset_15_algo_1_8.53%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_15.csv
运行时间: 39.77 秒
[INFO] 运行聚类算法: AP，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_15/repaired_15.txt
Program completed in: 27.184049606323242 seconds

[INFO] 聚类完成: AP, 运行时间: 27.18 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_15/repaired_15.txt
Program completed in: 20.273677110671997 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.27 秒
[INFO] 运行聚类算法: GMM，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 20
Refined optimal number of components: 20
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_15/repaired_15.txt
Program completed in: 9.882946968078613 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.88 秒
[INFO] 运行聚类算法: HC，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_15/repaired_15.txt
Program completed in: 7.843663930892944 seconds

[INFO] 聚类完成: HC, 运行时间: 7.84 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_15/repaired_15.txt
Program completed in: 48.543415546417236 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 48.54 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 15, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_15/repaired_15.txt
Program completed in: 117.00730609893799 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 117.01 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 15
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 396.
22807 pairs of (a data error, a potential correction) are featurized.
69% (2356 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 704.
27672 pairs of (a data error, a potential correction) are featurized.
96% (3314 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 216.
32558 pairs of (a data error, a potential correction) are featurized.
97% (3319 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
37515 pairs of (a data error, a potential correction) are featurized.
97% (3320 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 775.
42657 pairs of (a data error, a potential correction) are featurized.
97% (3321 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 97.
48076 pairs of (a data error, a potential correction) are featurized.
97% (3325 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
53306 pairs of (a data error, a potential correction) are featurized.
97% (3327 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 382.
58227 pairs of (a data error, a potential correction) are featurized.
97% (3327 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 68.
62410 pairs of (a data error, a potential correction) are featurized.
97% (3330 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 632.
67295 pairs of (a data error, a potential correction) are featurized.
97% (3330 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 769.
72197 pairs of (a data error, a potential correction) are featurized.
97% (3332 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 186.
77103 pairs of (a data error, a potential correction) are featurized.
98% (3377 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 533.
82256 pairs of (a data error, a potential correction) are featurized.
98% (3380 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 970.
87680 pairs of (a data error, a potential correction) are featurized.
98% (3385 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 345.
92683 pairs of (a data error, a potential correction) are featurized.
99% (3393 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 655.
98101 pairs of (a data error, a potential correction) are featurized.
99% (3393 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 201.
98480 pairs of (a data error, a potential correction) are featurized.
99% (3395 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 545.
103637 pairs of (a data error, a potential correction) are featurized.
99% (3395 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 51.
104627 pairs of (a data error, a potential correction) are featurized.
99% (3395 / 3438) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 593.
109514 pairs of (a data error, a potential correction) are featurized.
99% (3395 / 3438) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_15_algo_2/repaired_dataset_15_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_15_algo_2/repaired_dataset_15_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_15.csv
运行时间: 740.47 秒
[INFO] 运行聚类算法: AP，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_15/repaired_15.txt
Program completed in: 22.512139320373535 seconds

[INFO] 聚类完成: AP, 运行时间: 22.51 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_15/repaired_15.txt
Program completed in: 20.172653913497925 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.17 秒
[INFO] 运行聚类算法: GMM，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 22
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 10
Refining in range: 10 to 22
Refined optimal number of components: 22
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_15/repaired_15.txt
Program completed in: 9.958821296691895 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.96 秒
[INFO] 运行聚类算法: HC，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_15/repaired_15.txt
Program completed in: 6.758354902267456 seconds

[INFO] 聚类完成: HC, 运行时间: 6.76 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 29
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 29
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_15/repaired_15.txt
Program completed in: 45.684436559677124 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 45.68 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 15, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_15/repaired_15.txt
Program completed in: 96.45355367660522 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 96.45 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 21.65%.csv, error_rate=21.65%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 16
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_16_algo_1/repaired_dataset_16_algo_1_21.65%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_16_algo_1/repaired_dataset_16_algo_1_21.65%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_16.csv
运行时间: 38.81 秒
[INFO] 运行聚类算法: AP，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_16/repaired_16.txt
Program completed in: 34.57204461097717 seconds

[INFO] 聚类完成: AP, 运行时间: 34.57 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_16/repaired_16.txt
Program completed in: 19.28689169883728 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 19.29 秒
[INFO] 运行聚类算法: GMM，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 19
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 16
Refining in range: 16 to 19
Refined optimal number of components: 18
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_16/repaired_16.txt
Program completed in: 7.610062837600708 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.61 秒
[INFO] 运行聚类算法: HC，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=11, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_16/repaired_16.txt
Program completed in: 8.179108142852783 seconds

[INFO] 聚类完成: HC, 运行时间: 8.18 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_16/repaired_16.txt
Program completed in: 49.63112497329712 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 49.63 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 16, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_16/repaired_16.txt
Program completed in: 126.14390540122986 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 126.14 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 16
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 670.
127763 pairs of (a data error, a potential correction) are featurized.
71% (3956 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 977.
139116 pairs of (a data error, a potential correction) are featurized.
88% (4909 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 824.
149763 pairs of (a data error, a potential correction) are featurized.
89% (4927 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 77.
158907 pairs of (a data error, a potential correction) are featurized.
89% (4960 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
165837 pairs of (a data error, a potential correction) are featurized.
89% (4961 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
172518 pairs of (a data error, a potential correction) are featurized.
89% (4966 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 311.
180002 pairs of (a data error, a potential correction) are featurized.
89% (4971 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 350.
188474 pairs of (a data error, a potential correction) are featurized.
90% (4982 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 180.
199515 pairs of (a data error, a potential correction) are featurized.
90% (4985 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 441.
204355 pairs of (a data error, a potential correction) are featurized.
90% (4985 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 632.
209173 pairs of (a data error, a potential correction) are featurized.
90% (4985 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 826.
213844 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 19.
221325 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 735.
227943 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 556.
235223 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 929.
243577 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 743.
251250 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 490.
257955 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 992.
272691 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
281766 pairs of (a data error, a potential correction) are featurized.
90% (5016 / 5560) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_16_algo_2/repaired_dataset_16_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_16_algo_2/repaired_dataset_16_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_16.csv
运行时间: 771.34 秒
[INFO] 运行聚类算法: AP，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_16/repaired_16.txt
Program completed in: 15.123629331588745 seconds

[INFO] 聚类完成: AP, 运行时间: 15.12 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_16/repaired_16.txt
Program completed in: 18.166369438171387 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 18.17 秒
[INFO] 运行聚类算法: GMM，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 20
Refined optimal number of components: 20
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_16/repaired_16.txt
Program completed in: 8.314465761184692 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.31 秒
[INFO] 运行聚类算法: HC，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_16/repaired_16.txt
Program completed in: 5.789571523666382 seconds

[INFO] 聚类完成: HC, 运行时间: 5.79 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 27
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 27
Refined optimal number of clusters: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_16/repaired_16.txt
Program completed in: 40.21772837638855 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 40.22 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 16, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_16/repaired_16.txt
Program completed in: 65.7846577167511 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 65.78 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 24.83%.csv, error_rate=24.83%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 17
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_17_algo_1/repaired_dataset_17_algo_1_24.83%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_17_algo_1/repaired_dataset_17_algo_1_24.83%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_17.csv
运行时间: 39.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_17/repaired_17.txt
Program completed in: 32.20259118080139 seconds

[INFO] 聚类完成: AP, 运行时间: 32.20 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_17/repaired_17.txt
Program completed in: 18.339895725250244 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 18.34 秒
[INFO] 运行聚类算法: GMM，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 13 to 15
Refined optimal number of components: 14
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_17/repaired_17.txt
Program completed in: 7.318268537521362 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.32 秒
[INFO] 运行聚类算法: HC，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_17/repaired_17.txt
Program completed in: 7.8858630657196045 seconds

[INFO] 聚类完成: HC, 运行时间: 7.89 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 31
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_17/repaired_17.txt
Program completed in: 50.490052461624146 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 50.49 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 17, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_17/repaired_17.txt
Program completed in: 124.60742664337158 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 124.61 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 17
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 210.
154315 pairs of (a data error, a potential correction) are featurized.
82% (5325 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 588.
163434 pairs of (a data error, a potential correction) are featurized.
83% (5357 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 44.
169892 pairs of (a data error, a potential correction) are featurized.
84% (5409 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 818.
179293 pairs of (a data error, a potential correction) are featurized.
84% (5450 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 951.
192034 pairs of (a data error, a potential correction) are featurized.
86% (5586 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
201888 pairs of (a data error, a potential correction) are featurized.
87% (5607 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
216082 pairs of (a data error, a potential correction) are featurized.
87% (5617 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 19.
222238 pairs of (a data error, a potential correction) are featurized.
87% (5641 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
232482 pairs of (a data error, a potential correction) are featurized.
88% (5676 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 996.
240265 pairs of (a data error, a potential correction) are featurized.
88% (5683 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 227.
251041 pairs of (a data error, a potential correction) are featurized.
88% (5707 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 217.
259685 pairs of (a data error, a potential correction) are featurized.
88% (5713 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 265.
266058 pairs of (a data error, a potential correction) are featurized.
89% (5786 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 896.
275517 pairs of (a data error, a potential correction) are featurized.
90% (5787 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 776.
282468 pairs of (a data error, a potential correction) are featurized.
90% (5787 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 252.
286238 pairs of (a data error, a potential correction) are featurized.
90% (5787 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 349.
291091 pairs of (a data error, a potential correction) are featurized.
90% (5787 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 348.
297968 pairs of (a data error, a potential correction) are featurized.
90% (5788 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 9.
309346 pairs of (a data error, a potential correction) are featurized.
90% (5789 / 6465) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 843.
316368 pairs of (a data error, a potential correction) are featurized.
90% (5789 / 6465) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_17_algo_2/repaired_dataset_17_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_17_algo_2/repaired_dataset_17_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_17.csv
运行时间: 786.60 秒
[INFO] 运行聚类算法: AP，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_17/repaired_17.txt
Program completed in: 15.521358728408813 seconds

[INFO] 聚类完成: AP, 运行时间: 15.52 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_17/repaired_17.txt
Program completed in: 17.693372011184692 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 17.69 秒
[INFO] 运行聚类算法: GMM，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 25
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 5
Refining in range: 5 to 25
Refined optimal number of components: 25
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_17/repaired_17.txt
Program completed in: 9.104498624801636 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.10 秒
[INFO] 运行聚类算法: HC，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_17/repaired_17.txt
Program completed in: 5.338902950286865 seconds

[INFO] 聚类完成: HC, 运行时间: 5.34 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 26
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 26
Refined optimal number of clusters: 26
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_17/repaired_17.txt
Program completed in: 38.12083554267883 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 38.12 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 17, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_17/repaired_17.txt
Program completed in: 63.98642301559448 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 63.99 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 36.52%.csv, error_rate=36.52%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 18
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_18_algo_1/repaired_dataset_18_algo_1_36.52%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_18_algo_1/repaired_dataset_18_algo_1_36.52%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_18.csv
运行时间: 40.70 秒
[INFO] 运行聚类算法: AP，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_18/repaired_18.txt
Program completed in: 32.03672647476196 seconds

[INFO] 聚类完成: AP, 运行时间: 32.04 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_18/repaired_18.txt
Program completed in: 4.722710132598877 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.72 秒
[INFO] 运行聚类算法: GMM，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 11
Refining in range: 11 to 20
Refined optimal number of components: 14
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_18/repaired_18.txt
Program completed in: 7.857130765914917 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.86 秒
[INFO] 运行聚类算法: HC，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_18/repaired_18.txt
Program completed in: 8.0081307888031 seconds

[INFO] 聚类完成: HC, 运行时间: 8.01 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 29
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_18/repaired_18.txt
Program completed in: 52.58250331878662 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 52.58 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 18, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_18/repaired_18.txt
Program completed in: 122.75308990478516 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 122.75 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 18
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 244.
249869 pairs of (a data error, a potential correction) are featurized.
79% (6788 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 548.
268823 pairs of (a data error, a potential correction) are featurized.
80% (6909 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 608.
295835 pairs of (a data error, a potential correction) are featurized.
82% (7072 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 221.
321128 pairs of (a data error, a potential correction) are featurized.
83% (7127 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 655.
336625 pairs of (a data error, a potential correction) are featurized.
83% (7161 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
348312 pairs of (a data error, a potential correction) are featurized.
83% (7181 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 297.
368004 pairs of (a data error, a potential correction) are featurized.
85% (7303 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 225.
368957 pairs of (a data error, a potential correction) are featurized.
85% (7303 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 175.
372902 pairs of (a data error, a potential correction) are featurized.
85% (7319 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 442.
388083 pairs of (a data error, a potential correction) are featurized.
85% (7355 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 266.
396255 pairs of (a data error, a potential correction) are featurized.
86% (7418 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 282.
412339 pairs of (a data error, a potential correction) are featurized.
86% (7423 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 344.
420818 pairs of (a data error, a potential correction) are featurized.
86% (7443 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 686.
433574 pairs of (a data error, a potential correction) are featurized.
86% (7448 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 884.
441875 pairs of (a data error, a potential correction) are featurized.
86% (7460 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 403.
462837 pairs of (a data error, a potential correction) are featurized.
87% (7475 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 81.
470532 pairs of (a data error, a potential correction) are featurized.
87% (7485 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 904.
493441 pairs of (a data error, a potential correction) are featurized.
87% (7498 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
498729 pairs of (a data error, a potential correction) are featurized.
87% (7499 / 8634) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 705.
517005 pairs of (a data error, a potential correction) are featurized.
87% (7499 / 8634) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_18_algo_2/repaired_dataset_18_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_18_algo_2/repaired_dataset_18_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_18.csv
运行时间: 836.24 秒
[INFO] 运行聚类算法: AP，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_18/repaired_18.txt
Program completed in: 8.719835996627808 seconds

[INFO] 聚类完成: AP, 运行时间: 8.72 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_18/repaired_18.txt
Program completed in: 15.42562222480774 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 15.43 秒
[INFO] 运行聚类算法: GMM，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 8
Refined optimal number of components: 8
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_18/repaired_18.txt
Program completed in: 6.967811584472656 seconds

[INFO] 聚类完成: GMM, 运行时间: 6.97 秒
[INFO] 运行聚类算法: HC，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_18/repaired_18.txt
Program completed in: 3.963663339614868 seconds

[INFO] 聚类完成: HC, 运行时间: 3.96 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 23
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 23
Refined optimal number of clusters: 22
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_18/repaired_18.txt
Program completed in: 37.62351584434509 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 37.62 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 18, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_18/repaired_18.txt
Program completed in: 37.71899342536926 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 37.72 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 15.34%.csv, error_rate=15.34%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 19
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_19_algo_1/repaired_dataset_19_algo_1_15.34%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_19_algo_1/repaired_dataset_19_algo_1_15.34%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_19.csv
运行时间: 37.95 秒
[INFO] 运行聚类算法: AP，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_19/repaired_19.txt
Program completed in: 30.769207000732422 seconds

[INFO] 聚类完成: AP, 运行时间: 30.77 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_19/repaired_19.txt
Program completed in: 19.76416802406311 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 19.76 秒
[INFO] 运行聚类算法: GMM，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 19
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 19
Refined optimal number of components: 17
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_19/repaired_19.txt
Program completed in: 9.93771743774414 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.94 秒
[INFO] 运行聚类算法: HC，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_19/repaired_19.txt
Program completed in: 7.983618259429932 seconds

[INFO] 聚类完成: HC, 运行时间: 7.98 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_19/repaired_19.txt
Program completed in: 47.12691569328308 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 47.13 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 19, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_19/repaired_19.txt
Program completed in: 125.22855067253113 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 125.23 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 19
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 444.
71323 pairs of (a data error, a potential correction) are featurized.
89% (4147 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 455.
77110 pairs of (a data error, a potential correction) are featurized.
90% (4182 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 713.
86066 pairs of (a data error, a potential correction) are featurized.
91% (4226 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
92169 pairs of (a data error, a potential correction) are featurized.
91% (4236 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 505.
97975 pairs of (a data error, a potential correction) are featurized.
91% (4244 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 250.
102027 pairs of (a data error, a potential correction) are featurized.
92% (4257 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 125.
108732 pairs of (a data error, a potential correction) are featurized.
93% (4331 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 412.
114048 pairs of (a data error, a potential correction) are featurized.
93% (4344 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 310.
123847 pairs of (a data error, a potential correction) are featurized.
93% (4344 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 551.
130783 pairs of (a data error, a potential correction) are featurized.
94% (4371 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 673.
134772 pairs of (a data error, a potential correction) are featurized.
94% (4375 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 73.
142668 pairs of (a data error, a potential correction) are featurized.
94% (4383 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 453.
143809 pairs of (a data error, a potential correction) are featurized.
94% (4389 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 563.
144753 pairs of (a data error, a potential correction) are featurized.
94% (4389 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 896.
149564 pairs of (a data error, a potential correction) are featurized.
94% (4389 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 945.
157651 pairs of (a data error, a potential correction) are featurized.
94% (4389 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 389.
162454 pairs of (a data error, a potential correction) are featurized.
94% (4391 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 353.
167508 pairs of (a data error, a potential correction) are featurized.
94% (4391 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 774.
173303 pairs of (a data error, a potential correction) are featurized.
94% (4391 / 4650) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 151.
179101 pairs of (a data error, a potential correction) are featurized.
94% (4391 / 4650) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_19_algo_2/repaired_dataset_19_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_19_algo_2/repaired_dataset_19_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_19.csv
运行时间: 769.46 秒
[INFO] 运行聚类算法: AP，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_19/repaired_19.txt
Program completed in: 19.629443168640137 seconds

[INFO] 聚类完成: AP, 运行时间: 19.63 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_19/repaired_19.txt
Program completed in: 18.62389302253723 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 18.62 秒
[INFO] 运行聚类算法: GMM，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 20
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 9
Refining in range: 9 to 20
Refined optimal number of components: 20
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_19/repaired_19.txt
Program completed in: 9.74522852897644 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.75 秒
[INFO] 运行聚类算法: HC，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_19/repaired_19.txt
Program completed in: 6.743872165679932 seconds

[INFO] 聚类完成: HC, 运行时间: 6.74 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 28
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 28
Refined optimal number of clusters: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_19/repaired_19.txt
Program completed in: 40.0668625831604 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 40.07 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 19, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_19/repaired_19.txt
Program completed in: 79.60884594917297 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 79.61 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 46.52%.csv, error_rate=46.52%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 20
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_20_algo_1/repaired_dataset_20_algo_1_46.52%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_20_algo_1/repaired_dataset_20_algo_1_46.52%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_20.csv
运行时间: 40.53 秒
[INFO] 运行聚类算法: AP，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_20/repaired_20.txt
Program completed in: 64.54378771781921 seconds

[INFO] 聚类完成: AP, 运行时间: 64.54 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_20/repaired_20.txt
Program completed in: 17.969892978668213 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 17.97 秒
[INFO] 运行聚类算法: GMM，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 31
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 11
Refining in range: 11 to 31
Refined optimal number of components: 29
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_20/repaired_20.txt
Program completed in: 7.932213068008423 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.93 秒
[INFO] 运行聚类算法: HC，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_20/repaired_20.txt
Program completed in: 7.914451360702515 seconds

[INFO] 聚类完成: HC, 运行时间: 7.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_20/repaired_20.txt
Program completed in: 52.39381551742554 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 52.39 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 20, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_20/repaired_20.txt
Program completed in: 132.6981806755066 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 132.70 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 20
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 630.
341623 pairs of (a data error, a potential correction) are featurized.
76% (8443 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 499.
362538 pairs of (a data error, a potential correction) are featurized.
78% (8614 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 182.
388113 pairs of (a data error, a potential correction) are featurized.
78% (8719 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 734.
414788 pairs of (a data error, a potential correction) are featurized.
80% (8861 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 449.
447652 pairs of (a data error, a potential correction) are featurized.
81% (9025 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
470027 pairs of (a data error, a potential correction) are featurized.
82% (9115 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 8.
482787 pairs of (a data error, a potential correction) are featurized.
82% (9146 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 774.
505403 pairs of (a data error, a potential correction) are featurized.
83% (9180 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 179.
516586 pairs of (a data error, a potential correction) are featurized.
83% (9188 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 246.
532483 pairs of (a data error, a potential correction) are featurized.
83% (9235 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 606.
560021 pairs of (a data error, a potential correction) are featurized.
84% (9288 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 652.
578891 pairs of (a data error, a potential correction) are featurized.
84% (9346 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 126.
598371 pairs of (a data error, a potential correction) are featurized.
84% (9384 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 256.
612806 pairs of (a data error, a potential correction) are featurized.
85% (9405 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 188.
623794 pairs of (a data error, a potential correction) are featurized.
85% (9421 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 299.
635107 pairs of (a data error, a potential correction) are featurized.
85% (9463 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 658.
654329 pairs of (a data error, a potential correction) are featurized.
86% (9525 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
664431 pairs of (a data error, a potential correction) are featurized.
86% (9526 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 217.
679221 pairs of (a data error, a potential correction) are featurized.
86% (9532 / 11111) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 95.
708168 pairs of (a data error, a potential correction) are featurized.
86% (9532 / 11111) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_20_algo_2/repaired_dataset_20_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_20_algo_2/repaired_dataset_20_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_20.csv
运行时间: 871.13 秒
[INFO] 运行聚类算法: AP，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_20/repaired_20.txt
Program completed in: 7.570266485214233 seconds

[INFO] 聚类完成: AP, 运行时间: 7.57 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_20/repaired_20.txt
Program completed in: 14.932727575302124 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 14.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 10
Refined optimal number of components: 10
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_20/repaired_20.txt
Program completed in: 4.532579660415649 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.53 秒
[INFO] 运行聚类算法: HC，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=15, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_20/repaired_20.txt
Program completed in: 3.9112398624420166 seconds

[INFO] 聚类完成: HC, 运行时间: 3.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 21
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 21
Refined optimal number of clusters: 20
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_20/repaired_20.txt
Program completed in: 2.0177688598632812 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 2.02 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 20, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_20/repaired_20.txt
Program completed in: 31.552578926086426 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 31.55 秒
==================================================
[INFO] 准备处理数据集: hospital (CSV: 33.68%.csv, error_rate=33.68%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 21
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_21_algo_1/repaired_dataset_21_algo_1_33.68%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_21_algo_1/repaired_dataset_21_algo_1_33.68%.csv
清洗完成: Dataset=hospital, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_21.csv
运行时间: 39.44 秒
[INFO] 运行聚类算法: AP，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_21/repaired_21.txt
Program completed in: 33.847407579422 seconds

[INFO] 聚类完成: AP, 运行时间: 33.85 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_21/repaired_21.txt
Program completed in: 17.592909336090088 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 17.59 秒
[INFO] 运行聚类算法: GMM，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 5 to 13
Refined optimal number of components: 11
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_21/repaired_21.txt
Program completed in: 8.096371412277222 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.10 秒
[INFO] 运行聚类算法: HC，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_21/repaired_21.txt
Program completed in: 8.663429021835327 seconds

[INFO] 聚类完成: HC, 运行时间: 8.66 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 31
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 31
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_21/repaired_21.txt
Program completed in: 51.755253076553345 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 51.76 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 21, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_21/repaired_21.txt
Program completed in: 130.4340214729309 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 130.43 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 21
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 808.
241245 pairs of (a data error, a potential correction) are featurized.
82% (6834 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 178.
267513 pairs of (a data error, a potential correction) are featurized.
84% (6944 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 514.
291544 pairs of (a data error, a potential correction) are featurized.
84% (7003 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 450.
302114 pairs of (a data error, a potential correction) are featurized.
85% (7076 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 14.
316556 pairs of (a data error, a potential correction) are featurized.
85% (7100 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 377.
327137 pairs of (a data error, a potential correction) are featurized.
86% (7135 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 964.
344714 pairs of (a data error, a potential correction) are featurized.
86% (7183 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 904.
355135 pairs of (a data error, a potential correction) are featurized.
87% (7213 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 273.
370012 pairs of (a data error, a potential correction) are featurized.
87% (7260 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 413.
381273 pairs of (a data error, a potential correction) are featurized.
88% (7271 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 105.
389067 pairs of (a data error, a potential correction) are featurized.
88% (7295 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 440.
406399 pairs of (a data error, a potential correction) are featurized.
88% (7341 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 261.
428839 pairs of (a data error, a potential correction) are featurized.
89% (7357 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 451.
435401 pairs of (a data error, a potential correction) are featurized.
89% (7362 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 975.
443050 pairs of (a data error, a potential correction) are featurized.
89% (7371 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 748.
454132 pairs of (a data error, a potential correction) are featurized.
89% (7393 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 805.
480104 pairs of (a data error, a potential correction) are featurized.
89% (7402 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 442.
483914 pairs of (a data error, a potential correction) are featurized.
89% (7403 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 39.
497463 pairs of (a data error, a potential correction) are featurized.
89% (7411 / 8307) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 139.
512181 pairs of (a data error, a potential correction) are featurized.
89% (7411 / 8307) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_21_algo_2/repaired_dataset_21_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/hospital/raha_baran/results-dataset_21_algo_2/repaired_dataset_21_algo_2.csv
清洗完成: Dataset=hospital, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_21.csv
运行时间: 837.06 秒
[INFO] 运行聚类算法: AP，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_21/repaired_21.txt
Program completed in: 11.404664993286133 seconds

[INFO] 聚类完成: AP, 运行时间: 11.40 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_21/repaired_21.txt
Program completed in: 16.839107275009155 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 16.84 秒
[INFO] 运行聚类算法: GMM，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of components from Optuna: 16
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 16
Refined optimal number of components: 15
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_21/repaired_21.txt
Program completed in: 7.573480844497681 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.57 秒
[INFO] 运行聚类算法: HC，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_21/repaired_21.txt
Program completed in: 5.128441333770752 seconds

[INFO] 聚类完成: HC, 运行时间: 5.13 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using multiple columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Initial optimal number of clusters from Optuna: 24
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 24
Refined optimal number of clusters: 19
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_21/repaired_21.txt
Program completed in: 37.44397521018982 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 37.44 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 21, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['ProviderNumber']
Using all columns for clustering: ['Address1', 'Address2', 'Address3', 'City', 'Condition', 'CountyName', 'EmergencyService', 'HospitalName', 'HospitalOwner', 'HospitalType', 'MeasureCode', 'MeasureName', 'PhoneNumber', 'Sample', 'Score', 'State', 'Stateavg', 'ZipCode', 'index']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_21/repaired_21.txt
Program completed in: 51.29844284057617 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 51.30 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 46.73%.csv, error_rate=46.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 22
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_22_algo_1/repaired_dataset_22_algo_1_46.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_22_algo_1/repaired_dataset_22_algo_1_46.73%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_22.csv
运行时间: 39.33 秒
[INFO] 运行聚类算法: AP，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_22/repaired_22.txt
Program completed in: 289.38300371170044 seconds

[INFO] 聚类完成: AP, 运行时间: 289.38 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_22/repaired_22.txt
Program completed in: 20.383063793182373 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 20.38 秒
[INFO] 运行聚类算法: GMM，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 36
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 36
Refined optimal number of components: 33
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_22/repaired_22.txt
Program completed in: 10.82338285446167 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.82 秒
[INFO] 运行聚类算法: HC，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=40, linkage=average, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_22/repaired_22.txt
Program completed in: 17.69765567779541 seconds

[INFO] 聚类完成: HC, 运行时间: 17.70 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 40
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 40
Refined optimal number of clusters: 39
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_22/repaired_22.txt
Program completed in: 72.67137265205383 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 72.67 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 22, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_22/repaired_22.txt
Program completed in: 389.2083077430725 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 389.21 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 22
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1017.
802507 pairs of (a data error, a potential correction) are featurized.
27% (4418 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2151.
826616 pairs of (a data error, a potential correction) are featurized.
29% (4636 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 751.
844558 pairs of (a data error, a potential correction) are featurized.
29% (4646 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1054.
857455 pairs of (a data error, a potential correction) are featurized.
31% (5069 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1033.
875288 pairs of (a data error, a potential correction) are featurized.
32% (5238 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 155.
890343 pairs of (a data error, a potential correction) are featurized.
32% (5238 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1062.
917110 pairs of (a data error, a potential correction) are featurized.
33% (5347 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 440.
933367 pairs of (a data error, a potential correction) are featurized.
34% (5422 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1766.
954171 pairs of (a data error, a potential correction) are featurized.
34% (5479 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1644.
959424 pairs of (a data error, a potential correction) are featurized.
34% (5513 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 470.
979635 pairs of (a data error, a potential correction) are featurized.
35% (5585 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2266.
991802 pairs of (a data error, a potential correction) are featurized.
35% (5590 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 71.
1016055 pairs of (a data error, a potential correction) are featurized.
35% (5607 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1231.
1036565 pairs of (a data error, a potential correction) are featurized.
35% (5627 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 698.
1050472 pairs of (a data error, a potential correction) are featurized.
35% (5627 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 165.
1084459 pairs of (a data error, a potential correction) are featurized.
35% (5655 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1104.
1104946 pairs of (a data error, a potential correction) are featurized.
35% (5660 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 308.
1112881 pairs of (a data error, a potential correction) are featurized.
35% (5666 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 602.
1124281 pairs of (a data error, a potential correction) are featurized.
35% (5689 / 16165) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 570.
1150960 pairs of (a data error, a potential correction) are featurized.
35% (5713 / 16165) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_22_algo_2/repaired_dataset_22_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_22_algo_2/repaired_dataset_22_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_22.csv
运行时间: 1040.25 秒
[INFO] 运行聚类算法: AP，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_22/repaired_22.txt
Program completed in: 1.345060110092163 seconds

[INFO] 聚类完成: AP, 运行时间: 1.35 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_22/repaired_22.txt
Program completed in: 2.4511072635650635 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.45 秒
[INFO] 运行聚类算法: GMM，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 11
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 7
Refining in range: 7 to 11
Refined optimal number of components: 11
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_22/repaired_22.txt
Program completed in: 2.4351425170898438 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.44 秒
[INFO] 运行聚类算法: HC，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=11, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_22/repaired_22.txt
Program completed in: 2.3720192909240723 seconds

[INFO] 聚类完成: HC, 运行时间: 2.37 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 12
Optimal number of clusters from Kneedle: 5
Refining in range: 5 to 12
Refined optimal number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_22/repaired_22.txt
Program completed in: 0.9330506324768066 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 0.93 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 22, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_22/repaired_22.txt
Program completed in: 8.69361162185669 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 8.69 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 beers，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: beers (CSV: 31.73%.csv, error_rate=31.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 24
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_24_algo_1/repaired_dataset_24_algo_1_31.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_24_algo_1/repaired_dataset_24_algo_1_31.73%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_24.csv
运行时间: 38.60 秒
[INFO] 运行聚类算法: AP，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_24/repaired_24.txt
Program completed in: 172.3367886543274 seconds

[INFO] 聚类完成: AP, 运行时间: 172.34 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_24/repaired_24.txt
Program completed in: 18.496431589126587 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 18.50 秒
[INFO] 运行聚类算法: GMM，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 41
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 15
Refining in range: 15 to 41
Refined optimal number of components: 37
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_24/repaired_24.txt
Program completed in: 8.895391464233398 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.90 秒
[INFO] 运行聚类算法: HC，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=41, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_24/repaired_24.txt
Program completed in: 19.19454002380371 seconds

[INFO] 聚类完成: HC, 运行时间: 19.19 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 41
Optimal number of clusters from Kneedle: 14
Refining in range: 14 to 41
Refined optimal number of clusters: 36
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_24/repaired_24.txt
Program completed in: 74.23351740837097 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 74.23 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 24, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_24/repaired_24.txt
Program completed in: 452.28854727745056 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 452.29 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 24
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2013.
2536700 pairs of (a data error, a potential correction) are featurized.
50% (5949 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1437.
2549164 pairs of (a data error, a potential correction) are featurized.
52% (6205 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 150.
2561497 pairs of (a data error, a potential correction) are featurized.
53% (6378 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 725.
2571541 pairs of (a data error, a potential correction) are featurized.
56% (6679 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1.
2581166 pairs of (a data error, a potential correction) are featurized.
57% (6804 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 484.
2584589 pairs of (a data error, a potential correction) are featurized.
57% (6830 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1519.
2590085 pairs of (a data error, a potential correction) are featurized.
57% (6834 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1554.
2594885 pairs of (a data error, a potential correction) are featurized.
57% (6857 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1199.
2614115 pairs of (a data error, a potential correction) are featurized.
57% (6859 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 52.
2632126 pairs of (a data error, a potential correction) are featurized.
59% (7024 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1393.
2639523 pairs of (a data error, a potential correction) are featurized.
59% (7067 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 899.
2651187 pairs of (a data error, a potential correction) are featurized.
59% (7110 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1772.
2662332 pairs of (a data error, a potential correction) are featurized.
60% (7227 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1106.
2680623 pairs of (a data error, a potential correction) are featurized.
60% (7237 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1948.
2694938 pairs of (a data error, a potential correction) are featurized.
60% (7246 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 24.
2704352 pairs of (a data error, a potential correction) are featurized.
60% (7248 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 594.
2706910 pairs of (a data error, a potential correction) are featurized.
61% (7372 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2162.
2715444 pairs of (a data error, a potential correction) are featurized.
61% (7377 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2356.
2726838 pairs of (a data error, a potential correction) are featurized.
61% (7377 / 11998) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1219.
2735641 pairs of (a data error, a potential correction) are featurized.
62% (7419 / 11998) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_24_algo_2/repaired_dataset_24_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_24_algo_2/repaired_dataset_24_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_24.csv
运行时间: 1263.72 秒
[INFO] 运行聚类算法: AP，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_24/repaired_24.txt
Program completed in: 6.844390630722046 seconds

[INFO] 聚类完成: AP, 运行时间: 6.84 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_24/repaired_24.txt
Program completed in: 2.969196081161499 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.97 秒
[INFO] 运行聚类算法: GMM，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 19
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 13
Refining in range: 13 to 19
Refined optimal number of components: 19
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_24/repaired_24.txt
Program completed in: 3.061110019683838 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.06 秒
[INFO] 运行聚类算法: HC，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_24/repaired_24.txt
Program completed in: 3.8129374980926514 seconds

[INFO] 聚类完成: HC, 运行时间: 3.81 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 21
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 21
Refined optimal number of clusters: 21
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_24/repaired_24.txt
Program completed in: 1.874758005142212 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.87 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 24, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_24/repaired_24.txt
Program completed in: 32.60419750213623 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 32.60 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 29.78%.csv, error_rate=29.78%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 25
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_25_algo_1/repaired_dataset_25_algo_1_29.78%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_25_algo_1/repaired_dataset_25_algo_1_29.78%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_25.csv
运行时间: 39.22 秒
[INFO] 运行聚类算法: AP，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_25/repaired_25.txt
Program completed in: 203.8184893131256 seconds

[INFO] 聚类完成: AP, 运行时间: 203.82 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_25/repaired_25.txt
Program completed in: 16.24047875404358 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 16.24 秒
[INFO] 运行聚类算法: GMM，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 35
Refined optimal number of components: 23
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_25/repaired_25.txt
Program completed in: 14.637061357498169 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.64 秒
[INFO] 运行聚类算法: HC，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=39, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_25/repaired_25.txt
Program completed in: 16.294039964675903 seconds

[INFO] 聚类完成: HC, 运行时间: 16.29 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 40
Optimal number of clusters from Kneedle: 13
Refining in range: 13 to 40
Refined optimal number of clusters: 40
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_25/repaired_25.txt
Program completed in: 73.37866950035095 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 73.38 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 25, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_25/repaired_25.txt
Program completed in: 388.2516701221466 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 388.25 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 25
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1925.
2262149 pairs of (a data error, a potential correction) are featurized.
51% (5434 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1795.
2270250 pairs of (a data error, a potential correction) are featurized.
51% (5514 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1395.
2278100 pairs of (a data error, a potential correction) are featurized.
52% (5608 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 787.
2285411 pairs of (a data error, a potential correction) are featurized.
54% (5769 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1117.
2291368 pairs of (a data error, a potential correction) are featurized.
55% (5932 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1938.
2300924 pairs of (a data error, a potential correction) are featurized.
55% (5950 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1636.
2304358 pairs of (a data error, a potential correction) are featurized.
56% (5982 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 912.
2315444 pairs of (a data error, a potential correction) are featurized.
57% (6085 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1442.
2325297 pairs of (a data error, a potential correction) are featurized.
57% (6164 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 754.
2327917 pairs of (a data error, a potential correction) are featurized.
61% (6573 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1058.
2333264 pairs of (a data error, a potential correction) are featurized.
62% (6600 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1347.
2339838 pairs of (a data error, a potential correction) are featurized.
62% (6621 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2221.
2348303 pairs of (a data error, a potential correction) are featurized.
62% (6657 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1407.
2355295 pairs of (a data error, a potential correction) are featurized.
62% (6687 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 567.
2363032 pairs of (a data error, a potential correction) are featurized.
62% (6702 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2317.
2365669 pairs of (a data error, a potential correction) are featurized.
63% (6707 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 54.
2372691 pairs of (a data error, a potential correction) are featurized.
63% (6749 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 118.
2374558 pairs of (a data error, a potential correction) are featurized.
63% (6750 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2333.
2382619 pairs of (a data error, a potential correction) are featurized.
63% (6752 / 10725) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1613.
2389978 pairs of (a data error, a potential correction) are featurized.
63% (6764 / 10725) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_25_algo_2/repaired_dataset_25_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_25_algo_2/repaired_dataset_25_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_25.csv
运行时间: 1226.39 秒
[INFO] 运行聚类算法: AP，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_25/repaired_25.txt
Program completed in: 17.015114068984985 seconds

[INFO] 聚类完成: AP, 运行时间: 17.02 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_25/repaired_25.txt
Program completed in: 6.196521759033203 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 6.20 秒
[INFO] 运行聚类算法: GMM，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 25
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 12
Refining in range: 12 to 25
Refined optimal number of components: 21
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_25/repaired_25.txt
Program completed in: 3.9132204055786133 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.91 秒
[INFO] 运行聚类算法: HC，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_25/repaired_25.txt
Program completed in: 5.053393363952637 seconds

[INFO] 聚类完成: HC, 运行时间: 5.05 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 27
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 27
Refined optimal number of clusters: 27
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_25/repaired_25.txt
Program completed in: 2.71346116065979 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 2.71 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 25, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_25/repaired_25.txt
Program completed in: 70.2652268409729 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 70.27 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 45.08%.csv, error_rate=45.08%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 26
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_26_algo_1/repaired_dataset_26_algo_1_45.08%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_26_algo_1/repaired_dataset_26_algo_1_45.08%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_26.csv
运行时间: 39.80 秒
[INFO] 运行聚类算法: AP，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_26/repaired_26.txt
Program completed in: 104.70506024360657 seconds

[INFO] 聚类完成: AP, 运行时间: 104.71 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_26/repaired_26.txt
Program completed in: 12.03218388557434 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 12.03 秒
[INFO] 运行聚类算法: GMM，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 32
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 7
Refining in range: 7 to 32
Refined optimal number of components: 32
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_26/repaired_26.txt
Program completed in: 10.74985408782959 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.75 秒
[INFO] 运行聚类算法: HC，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=12, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_26/repaired_26.txt
Program completed in: 7.916880369186401 seconds

[INFO] 聚类完成: HC, 运行时间: 7.92 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 32
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 32
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_26/repaired_26.txt
Program completed in: 54.702561378479004 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 54.70 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 26, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_26/repaired_26.txt
Program completed in: 146.16908502578735 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 146.17 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 26
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 686.
615429 pairs of (a data error, a potential correction) are featurized.
32% (5082 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 855.
635417 pairs of (a data error, a potential correction) are featurized.
32% (5137 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1456.
669175 pairs of (a data error, a potential correction) are featurized.
34% (5388 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 311.
695566 pairs of (a data error, a potential correction) are featurized.
34% (5401 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2286.
724506 pairs of (a data error, a potential correction) are featurized.
34% (5426 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 212.
751964 pairs of (a data error, a potential correction) are featurized.
34% (5447 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1087.
768061 pairs of (a data error, a potential correction) are featurized.
34% (5452 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1036.
793212 pairs of (a data error, a potential correction) are featurized.
34% (5484 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2099.
830202 pairs of (a data error, a potential correction) are featurized.
34% (5484 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2141.
863708 pairs of (a data error, a potential correction) are featurized.
34% (5489 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 42.
911210 pairs of (a data error, a potential correction) are featurized.
34% (5495 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2176.
929800 pairs of (a data error, a potential correction) are featurized.
34% (5516 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2250.
963373 pairs of (a data error, a potential correction) are featurized.
34% (5520 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1720.
993300 pairs of (a data error, a potential correction) are featurized.
34% (5527 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2198.
1020770 pairs of (a data error, a potential correction) are featurized.
34% (5527 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1204.
1034235 pairs of (a data error, a potential correction) are featurized.
35% (5586 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1506.
1050894 pairs of (a data error, a potential correction) are featurized.
35% (5590 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 444.
1072135 pairs of (a data error, a potential correction) are featurized.
35% (5590 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2147.
1089711 pairs of (a data error, a potential correction) are featurized.
35% (5593 / 16070) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 65.
1112805 pairs of (a data error, a potential correction) are featurized.
35% (5593 / 16070) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_26_algo_2/repaired_dataset_26_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_26_algo_2/repaired_dataset_26_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_26.csv
运行时间: 939.32 秒
[INFO] 运行聚类算法: AP，数据集编号: 26, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 06:57:09,302][0m A new study created in memory with name: no-name-7d2fe701-1989-4db7-b033-3b837b2a0e26[0m
[32m[I 2025-01-23 06:57:09,307][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7947022417704419, 'preference': -263}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,312][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.6309633945665223, 'preference': -234}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,316][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.7603293571715071, 'preference': -284}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,320][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.8268362608621314, 'preference': -152}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,325][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.6309312309583838, 'preference': -449}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,328][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.6487260019507675, 'preference': -116}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,332][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6842027983675766, 'preference': -411}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,337][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8850609401547697, 'preference': -115}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,341][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.8494337652140598, 'preference': -348}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,346][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.8368679898328035, 'preference': -429}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,354][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.5419758068239453, 'preference': -217}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,362][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7513165085526927, 'preference': -255}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,370][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.5500830439040176, 'preference': -202}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,378][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.7641951971703325, 'preference': -340}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,386][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.6015412219648981, 'preference': -336}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,394][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.7079499744696791, 'preference': -219}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,403][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.5882161507780984, 'preference': -277}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,411][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.5891647971485081, 'preference': -498}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,419][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.7132675561047402, 'preference': -192}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,429][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.5203791647742749, 'preference': -291}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,437][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.8062350323150899, 'preference': -385}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,445][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.7082844619798824, 'preference': -173}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,454][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.5034254334265317, 'preference': -319}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,462][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.7965781645828605, 'preference': -375}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,471][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.8964183568648264, 'preference': -166}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,479][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6777433480262269, 'preference': -314}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,488][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.7856986079956826, 'preference': -370}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,497][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.8937880339401176, 'preference': -150}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,506][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.873410349770528, 'preference': -254}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,514][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6730260008977599, 'preference': -308}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,523][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.7937041942456509, 'preference': -372}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,531][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.8571164813491396, 'preference': -243}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,540][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.8777599624659375, 'preference': -266}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,548][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.7370103909377935, 'preference': -292}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,556][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.8192649724865065, 'preference': -230}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,564][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.731556707637957, 'preference': -174}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,573][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7756299866928403, 'preference': -407}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,582][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.813378562924246, 'preference': -473}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,590][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.6512046598058967, 'preference': -140}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,598][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.638253884970346, 'preference': -356}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,607][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.8459847868497761, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,615][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6760176636073824, 'preference': -313}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,624][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.7833727008426841, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,632][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.7554301511444007, 'preference': -426}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,642][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.8897477408042777, 'preference': -137}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,651][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.8992931060055306, 'preference': -156}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,660][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.8682035163684486, 'preference': -265}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,668][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.8350036370748084, 'preference': -330}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,677][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.8705709191936619, 'preference': -246}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 06:57:09,685][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.8572124097041038, 'preference': -277}. Best is trial 0 with value: -inf.[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py", line 94, in <module>
    final_silhouette_score = silhouette_score(X_scaled, best_labels)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 117, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 231, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 33, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_26/repaired_26.txt
Program completed in: 1.2694406509399414 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.27 秒
[INFO] 运行聚类算法: GMM，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 7
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 2
Refining in range: 2 to 7
Refined optimal number of components: 7
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_26/repaired_26.txt
Program completed in: 1.3433482646942139 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.34 秒
[INFO] 运行聚类算法: HC，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_26/repaired_26.txt
Program completed in: 1.3562798500061035 seconds

[INFO] 聚类完成: HC, 运行时间: 1.36 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 26, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 06:57:17,397][0m A new study created in memory with name: no-name-0208e30b-adc0-4d06-8d24-31d1daa8d047[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,530][0m Trial 0 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,542][0m Trial 1 finished with value: 276.7821585881391 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,554][0m Trial 2 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,565][0m Trial 3 finished with value: 294.3678903854569 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,576][0m Trial 4 finished with value: 294.3678903854569 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,586][0m Trial 5 finished with value: 294.3678903854569 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,598][0m Trial 6 finished with value: 276.78215858813905 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,609][0m Trial 7 finished with value: 276.7821585881391 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,621][0m Trial 8 finished with value: 276.7821585881391 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,632][0m Trial 9 finished with value: 276.7821585881391 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,648][0m Trial 10 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,664][0m Trial 11 finished with value: 261.0619245938328 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,679][0m Trial 12 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,695][0m Trial 13 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,710][0m Trial 14 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,725][0m Trial 15 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,740][0m Trial 16 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,755][0m Trial 17 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,770][0m Trial 18 finished with value: 261.06192459383277 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 06:57:17,784][0m Trial 19 finished with value: 276.7821585881391 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 261.06192459383277.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 96, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 26, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_26/repaired_26.txt
Program completed in: 4.261633396148682 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 4.26 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 40.23%.csv, error_rate=40.23%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 27
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_27_algo_1/repaired_dataset_27_algo_1_40.23%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_27_algo_1/repaired_dataset_27_algo_1_40.23%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_27.csv
运行时间: 39.23 秒
[INFO] 运行聚类算法: AP，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_27/repaired_27.txt
Program completed in: 191.61611199378967 seconds

[INFO] 聚类完成: AP, 运行时间: 191.62 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_27/repaired_27.txt
Program completed in: 14.520685195922852 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 14.52 秒
[INFO] 运行聚类算法: GMM，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 21
Best covariance type from Optuna: full
Optimal number of components from Kneedle: 9
Refining in range: 9 to 21
Refined optimal number of components: 17
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_27/repaired_27.txt
Program completed in: 14.571754217147827 seconds

[INFO] 聚类完成: GMM, 运行时间: 14.57 秒
[INFO] 运行聚类算法: HC，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=37, linkage=average, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_27/repaired_27.txt
Program completed in: 14.982909440994263 seconds

[INFO] 聚类完成: HC, 运行时间: 14.98 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 37
Optimal number of clusters from Kneedle: 12
Refining in range: 12 to 37
Refined optimal number of clusters: 32
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_27/repaired_27.txt
Program completed in: 66.13463521003723 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 66.13 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 27, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_27/repaired_27.txt
Program completed in: 276.37831115722656 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 276.38 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 27
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 31.
1840758 pairs of (a data error, a potential correction) are featurized.
37% (5212 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2036.
1862528 pairs of (a data error, a potential correction) are featurized.
37% (5229 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1270.
1882814 pairs of (a data error, a potential correction) are featurized.
38% (5293 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 825.
1895591 pairs of (a data error, a potential correction) are featurized.
38% (5363 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 300.
1904669 pairs of (a data error, a potential correction) are featurized.
40% (5658 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 145.
1913699 pairs of (a data error, a potential correction) are featurized.
40% (5685 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 347.
1928681 pairs of (a data error, a potential correction) are featurized.
42% (5879 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1037.
1942221 pairs of (a data error, a potential correction) are featurized.
42% (5883 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 452.
1954403 pairs of (a data error, a potential correction) are featurized.
43% (6017 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1883.
1973378 pairs of (a data error, a potential correction) are featurized.
43% (6030 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 830.
1973839 pairs of (a data error, a potential correction) are featurized.
43% (6087 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1802.
1987346 pairs of (a data error, a potential correction) are featurized.
43% (6115 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 349.
1990752 pairs of (a data error, a potential correction) are featurized.
43% (6119 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2304.
2003764 pairs of (a data error, a potential correction) are featurized.
44% (6126 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 138.
2018255 pairs of (a data error, a potential correction) are featurized.
44% (6135 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 706.
2033322 pairs of (a data error, a potential correction) are featurized.
44% (6137 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2025.
2045752 pairs of (a data error, a potential correction) are featurized.
44% (6176 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 429.
2056966 pairs of (a data error, a potential correction) are featurized.
44% (6176 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 213.
2068498 pairs of (a data error, a potential correction) are featurized.
44% (6176 / 14082) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1969.
2081324 pairs of (a data error, a potential correction) are featurized.
44% (6176 / 14082) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_27_algo_2/repaired_dataset_27_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_27_algo_2/repaired_dataset_27_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_27.csv
运行时间: 1114.73 秒
[INFO] 运行聚类算法: AP，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_27/repaired_27.txt
Program completed in: 6.3364198207855225 seconds

[INFO] 聚类完成: AP, 运行时间: 6.34 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_27/repaired_27.txt
Program completed in: 3.616994619369507 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.62 秒
[INFO] 运行聚类算法: GMM，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 18
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 10
Refining in range: 10 to 18
Refined optimal number of components: 18
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_27/repaired_27.txt
Program completed in: 2.7648401260375977 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.76 秒
[INFO] 运行聚类算法: HC，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=9, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_27/repaired_27.txt
Program completed in: 3.0242722034454346 seconds

[INFO] 聚类完成: HC, 运行时间: 3.02 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 20
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 20
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_27/repaired_27.txt
Program completed in: 1.7381787300109863 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.74 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 27, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_27/repaired_27.txt
Program completed in: 25.609327793121338 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 25.61 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 6.17%.csv, error_rate=6.17%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 28
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_28_algo_1/repaired_dataset_28_algo_1_6.17%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_28_algo_1/repaired_dataset_28_algo_1_6.17%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_28.csv
运行时间: 37.17 秒
[INFO] 运行聚类算法: AP，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_28/repaired_28.txt
Program completed in: 79.60908317565918 seconds

[INFO] 聚类完成: AP, 运行时间: 79.61 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_28/repaired_28.txt
Program completed in: 15.540540218353271 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 15.54 秒
[INFO] 运行聚类算法: GMM，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 18
Refining in range: 10 to 18
Refined optimal number of components: 10
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_28/repaired_28.txt
Program completed in: 7.878371477127075 seconds

[INFO] 聚类完成: GMM, 运行时间: 7.88 秒
[INFO] 运行聚类算法: HC，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=30, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_28/repaired_28.txt
Program completed in: 10.218552112579346 seconds

[INFO] 聚类完成: HC, 运行时间: 10.22 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_28/repaired_28.txt
Program completed in: 65.38280510902405 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 65.38 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 28, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_28/repaired_28.txt
Program completed in: 215.5667703151703 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 215.57 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 28
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1144.
679537 pairs of (a data error, a potential correction) are featurized.
89% (4510 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1122.
683423 pairs of (a data error, a potential correction) are featurized.
90% (4574 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1766.
683608 pairs of (a data error, a potential correction) are featurized.
91% (4603 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 150.
685494 pairs of (a data error, a potential correction) are featurized.
92% (4644 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1633.
685822 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1271.
689835 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 924.
689835 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 753.
690620 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1117.
690620 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 379.
694328 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 70.
698049 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1969.
698049 pairs of (a data error, a potential correction) are featurized.
92% (4645 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1811.
702069 pairs of (a data error, a potential correction) are featurized.
92% (4647 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1125.
706081 pairs of (a data error, a potential correction) are featurized.
92% (4651 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2264.
706226 pairs of (a data error, a potential correction) are featurized.
92% (4651 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2391.
707103 pairs of (a data error, a potential correction) are featurized.
92% (4652 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1349.
707271 pairs of (a data error, a potential correction) are featurized.
92% (4652 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 152.
707393 pairs of (a data error, a potential correction) are featurized.
92% (4652 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2162.
707393 pairs of (a data error, a potential correction) are featurized.
92% (4653 / 5072) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1143.
711090 pairs of (a data error, a potential correction) are featurized.
92% (4654 / 5072) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_28_algo_2/repaired_dataset_28_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_28_algo_2/repaired_dataset_28_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_28.csv
运行时间: 1003.20 秒
[INFO] 运行聚类算法: AP，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_28/repaired_28.txt
Program completed in: 50.525821685791016 seconds

[INFO] 聚类完成: AP, 运行时间: 50.53 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_28/repaired_28.txt
Program completed in: 13.317122220993042 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 13.32 秒
[INFO] 运行聚类算法: GMM，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 35
Refined optimal number of components: 35
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_28/repaired_28.txt
Program completed in: 9.1733078956604 seconds

[INFO] 聚类完成: GMM, 运行时间: 9.17 秒
[INFO] 运行聚类算法: HC，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=14, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_28/repaired_28.txt
Program completed in: 10.390572786331177 seconds

[INFO] 聚类完成: HC, 运行时间: 10.39 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 35
Refined optimal number of clusters: 34
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_28/repaired_28.txt
Program completed in: 62.01190757751465 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 62.01 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 28, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_28/repaired_28.txt
Program completed in: 192.45087337493896 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 192.45 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 12.48%.csv, error_rate=12.48%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 29
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_29_algo_1/repaired_dataset_29_algo_1_12.48%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_29_algo_1/repaired_dataset_29_algo_1_12.48%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_29.csv
运行时间: 36.97 秒
[INFO] 运行聚类算法: AP，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_29/repaired_29.txt
Program completed in: 60.75798964500427 seconds

[INFO] 聚类完成: AP, 运行时间: 60.76 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_29/repaired_29.txt
Program completed in: 15.491074562072754 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 15.49 秒
[INFO] 运行聚类算法: GMM，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 35
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 12
Refining in range: 12 to 35
Refined optimal number of components: 35
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_29/repaired_29.txt
Program completed in: 11.74067759513855 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.74 秒
[INFO] 运行聚类算法: HC，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=19, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_29/repaired_29.txt
Program completed in: 10.557788372039795 seconds

[INFO] 聚类完成: HC, 运行时间: 10.56 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 35
Refined optimal number of clusters: 35
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_29/repaired_29.txt
Program completed in: 59.52598571777344 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 59.53 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 29, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_29/repaired_29.txt
Program completed in: 209.48404669761658 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 209.48 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 29
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1108.
1354753 pairs of (a data error, a potential correction) are featurized.
75% (5166 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1351.
1360965 pairs of (a data error, a potential correction) are featurized.
75% (5186 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 858.
1360965 pairs of (a data error, a potential correction) are featurized.
75% (5186 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2050.
1364741 pairs of (a data error, a potential correction) are featurized.
75% (5186 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1906.
1368167 pairs of (a data error, a potential correction) are featurized.
76% (5251 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2057.
1372868 pairs of (a data error, a potential correction) are featurized.
76% (5257 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 566.
1374242 pairs of (a data error, a potential correction) are featurized.
76% (5257 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 487.
1379805 pairs of (a data error, a potential correction) are featurized.
77% (5314 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 35.
1383645 pairs of (a data error, a potential correction) are featurized.
77% (5323 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1942.
1387574 pairs of (a data error, a potential correction) are featurized.
80% (5535 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1854.
1387574 pairs of (a data error, a potential correction) are featurized.
80% (5535 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1081.
1391341 pairs of (a data error, a potential correction) are featurized.
80% (5535 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 358.
1392652 pairs of (a data error, a potential correction) are featurized.
80% (5542 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1238.
1394000 pairs of (a data error, a potential correction) are featurized.
80% (5542 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1828.
1397607 pairs of (a data error, a potential correction) are featurized.
80% (5544 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 387.
1397770 pairs of (a data error, a potential correction) are featurized.
80% (5544 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 57.
1401389 pairs of (a data error, a potential correction) are featurized.
80% (5548 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1117.
1402078 pairs of (a data error, a potential correction) are featurized.
80% (5548 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 21.
1405742 pairs of (a data error, a potential correction) are featurized.
80% (5548 / 6917) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1035.
1406354 pairs of (a data error, a potential correction) are featurized.
80% (5548 / 6917) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_29_algo_2/repaired_dataset_29_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_29_algo_2/repaired_dataset_29_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_29.csv
运行时间: 1046.58 秒
[INFO] 运行聚类算法: AP，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_29/repaired_29.txt
Program completed in: 25.825037717819214 seconds

[INFO] 聚类完成: AP, 运行时间: 25.83 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_29/repaired_29.txt
Program completed in: 8.31064510345459 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.31 秒
[INFO] 运行聚类算法: GMM，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 19
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 9
Refining in range: 9 to 19
Refined optimal number of components: 19
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_29/repaired_29.txt
Program completed in: 4.825977087020874 seconds

[INFO] 聚类完成: GMM, 运行时间: 4.83 秒
[INFO] 运行聚类算法: HC，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_29/repaired_29.txt
Program completed in: 6.379351377487183 seconds

[INFO] 聚类完成: HC, 运行时间: 6.38 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 30
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_29/repaired_29.txt
Program completed in: 3.071457862854004 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 3.07 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 29, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_29/repaired_29.txt
Program completed in: 99.95785570144653 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 99.96 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 26.60%.csv, error_rate=26.6%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 30
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_30_algo_1/repaired_dataset_30_algo_1_26.60%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_30_algo_1/repaired_dataset_30_algo_1_26.60%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_30.csv
运行时间: 37.67 秒
[INFO] 运行聚类算法: AP，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_30/repaired_30.txt
Program completed in: 61.61197018623352 seconds

[INFO] 聚类完成: AP, 运行时间: 61.61 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_30/repaired_30.txt
Program completed in: 12.946003913879395 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 12.95 秒
[INFO] 运行聚类算法: GMM，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 33
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 33
Refined optimal number of components: 33
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_30/repaired_30.txt
Program completed in: 10.959019422531128 seconds

[INFO] 聚类完成: GMM, 运行时间: 10.96 秒
[INFO] 运行聚类算法: HC，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=35, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_30/repaired_30.txt
Program completed in: 10.156627416610718 seconds

[INFO] 聚类完成: HC, 运行时间: 10.16 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 35
Optimal number of clusters from Kneedle: 11
Refining in range: 11 to 35
Refined optimal number of clusters: 33
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_30/repaired_30.txt
Program completed in: 58.913631439208984 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 58.91 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 30, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_30/repaired_30.txt
Program completed in: 204.71920680999756 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 204.72 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 30
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 309.
1845592 pairs of (a data error, a potential correction) are featurized.
50% (5432 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 308.
1850057 pairs of (a data error, a potential correction) are featurized.
51% (5443 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2266.
1855712 pairs of (a data error, a potential correction) are featurized.
51% (5443 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2189.
1862082 pairs of (a data error, a potential correction) are featurized.
51% (5443 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1914.
1863580 pairs of (a data error, a potential correction) are featurized.
51% (5458 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 30.
1871986 pairs of (a data error, a potential correction) are featurized.
51% (5516 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 628.
1874598 pairs of (a data error, a potential correction) are featurized.
52% (5545 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1652.
1883661 pairs of (a data error, a potential correction) are featurized.
52% (5643 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1601.
1892932 pairs of (a data error, a potential correction) are featurized.
53% (5689 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1635.
1897605 pairs of (a data error, a potential correction) are featurized.
55% (5959 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2001.
1908287 pairs of (a data error, a potential correction) are featurized.
55% (5973 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1864.
1913920 pairs of (a data error, a potential correction) are featurized.
55% (5973 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2390.
1921771 pairs of (a data error, a potential correction) are featurized.
56% (6013 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 836.
1925104 pairs of (a data error, a potential correction) are featurized.
56% (6013 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1317.
1929006 pairs of (a data error, a potential correction) are featurized.
56% (6013 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1144.
1930374 pairs of (a data error, a potential correction) are featurized.
56% (6013 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 0.
1934482 pairs of (a data error, a potential correction) are featurized.
56% (6023 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 98.
1937624 pairs of (a data error, a potential correction) are featurized.
56% (6025 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2226.
1941356 pairs of (a data error, a potential correction) are featurized.
56% (6025 / 10766) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1337.
1943649 pairs of (a data error, a potential correction) are featurized.
56% (6025 / 10766) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_30_algo_2/repaired_dataset_30_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_30_algo_2/repaired_dataset_30_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_30.csv
运行时间: 1249.79 秒
[INFO] 运行聚类算法: AP，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_30/repaired_30.txt
Program completed in: 35.98664474487305 seconds

[INFO] 聚类完成: AP, 运行时间: 35.99 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_30/repaired_30.txt
Program completed in: 11.387205600738525 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 11.39 秒
[INFO] 运行聚类算法: GMM，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 26
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 10
Refining in range: 10 to 26
Refined optimal number of components: 13
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_30/repaired_30.txt
Program completed in: 8.012596607208252 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.01 秒
[INFO] 运行聚类算法: HC，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_30/repaired_30.txt
Program completed in: 8.115811586380005 seconds

[INFO] 聚类完成: HC, 运行时间: 8.12 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 33
Optimal number of clusters from Kneedle: 9
Refining in range: 9 to 33
Refined optimal number of clusters: 32
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_30/repaired_30.txt
Program completed in: 59.358943462371826 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 59.36 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 30, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_30/repaired_30.txt
Program completed in: 152.8865921497345 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 152.89 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 52.00%.csv, error_rate=52.0%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 31
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_31_algo_1/repaired_dataset_31_algo_1_52.00%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_31_algo_1/repaired_dataset_31_algo_1_52.00%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_31.csv
运行时间: 38.86 秒
[INFO] 运行聚类算法: AP，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_31/repaired_31.txt
Program completed in: 125.50133848190308 seconds

[INFO] 聚类完成: AP, 运行时间: 125.50 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_31/repaired_31.txt
Program completed in: 6.336642265319824 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 6.34 秒
[INFO] 运行聚类算法: GMM，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 5
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 3
Refining in range: 3 to 5
Refined optimal number of components: 5
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_31/repaired_31.txt
Program completed in: 8.793341636657715 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.79 秒
[INFO] 运行聚类算法: HC，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_31/repaired_31.txt
Program completed in: 7.898936033248901 seconds

[INFO] 聚类完成: HC, 运行时间: 7.90 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 32
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 32
Refined optimal number of clusters: 30
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_31/repaired_31.txt
Program completed in: 57.96578073501587 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 57.97 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 31, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_31/repaired_31.txt
Program completed in: 143.03560948371887 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 143.04 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 31
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 263.
137572 pairs of (a data error, a potential correction) are featurized.
23% (3802 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2302.
170637 pairs of (a data error, a potential correction) are featurized.
23% (3845 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1232.
195193 pairs of (a data error, a potential correction) are featurized.
24% (3952 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1031.
223030 pairs of (a data error, a potential correction) are featurized.
24% (4028 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 378.
242820 pairs of (a data error, a potential correction) are featurized.
24% (4034 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 5.
272689 pairs of (a data error, a potential correction) are featurized.
25% (4057 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1699.
295617 pairs of (a data error, a potential correction) are featurized.
25% (4104 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1895.
336363 pairs of (a data error, a potential correction) are featurized.
27% (4425 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 505.
351564 pairs of (a data error, a potential correction) are featurized.
27% (4438 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 287.
381350 pairs of (a data error, a potential correction) are featurized.
29% (4836 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 308.
406659 pairs of (a data error, a potential correction) are featurized.
30% (4904 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1925.
421990 pairs of (a data error, a potential correction) are featurized.
30% (4930 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 818.
445792 pairs of (a data error, a potential correction) are featurized.
30% (4994 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1472.
466908 pairs of (a data error, a potential correction) are featurized.
31% (5086 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2134.
502369 pairs of (a data error, a potential correction) are featurized.
31% (5111 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 843.
530293 pairs of (a data error, a potential correction) are featurized.
31% (5153 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 21.
560706 pairs of (a data error, a potential correction) are featurized.
31% (5198 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1989.
574199 pairs of (a data error, a potential correction) are featurized.
31% (5204 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1561.
606753 pairs of (a data error, a potential correction) are featurized.
32% (5261 / 16555) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1488.
641253 pairs of (a data error, a potential correction) are featurized.
32% (5317 / 16555) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_31_algo_2/repaired_dataset_31_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_31_algo_2/repaired_dataset_31_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_31.csv
运行时间: 911.98 秒
[INFO] 运行聚类算法: AP，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_31/repaired_31.txt
Program completed in: 2.188690423965454 seconds

[INFO] 聚类完成: AP, 运行时间: 2.19 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_31/repaired_31.txt
Program completed in: 2.7493679523468018 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.75 秒
[INFO] 运行聚类算法: GMM，数据集编号: 31, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 09:17:49,798][0m A new study created in memory with name: no-name-de866a30-918c-43ac-9b05-f1952908d467[0m
[32m[I 2025-01-23 09:17:49,899][0m Trial 0 finished with value: 0.5430710249360657 and parameters: {'n_components': 14, 'covariance_type': 'full'}. Best is trial 0 with value: 0.5430710249360657.[0m
[32m[I 2025-01-23 09:17:49,936][0m Trial 1 finished with value: 0.398340551441683 and parameters: {'n_components': 11, 'covariance_type': 'diag'}. Best is trial 0 with value: 0.5430710249360657.[0m
[32m[I 2025-01-23 09:17:49,986][0m Trial 2 finished with value: 0.398340551441683 and parameters: {'n_components': 11, 'covariance_type': 'diag'}. Best is trial 0 with value: 0.5430710249360657.[0m
[32m[I 2025-01-23 09:17:50,065][0m Trial 3 finished with value: 0.5727030107965483 and parameters: {'n_components': 12, 'covariance_type': 'tied'}. Best is trial 3 with value: 0.5727030107965483.[0m
[32m[I 2025-01-23 09:17:50,120][0m Trial 4 finished with value: 0.6243160485507029 and parameters: {'n_components': 9, 'covariance_type': 'tied'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,183][0m Trial 5 finished with value: 0.4494909655199365 and parameters: {'n_components': 6, 'covariance_type': 'full'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,258][0m Trial 6 finished with value: 0.5268587735072865 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,326][0m Trial 7 finished with value: 0.5515567638168801 and parameters: {'n_components': 8, 'covariance_type': 'diag'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,383][0m Trial 8 finished with value: 0.5553590248256124 and parameters: {'n_components': 8, 'covariance_type': 'tied'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,454][0m Trial 9 finished with value: 0.5178531186353452 and parameters: {'n_components': 10, 'covariance_type': 'tied'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,522][0m Trial 10 finished with value: 0.5346011599097149 and parameters: {'n_components': 8, 'covariance_type': 'spherical'}. Best is trial 4 with value: 0.6243160485507029.[0m
[32m[I 2025-01-23 09:17:50,612][0m Trial 11 finished with value: 0.6276775186847358 and parameters: {'n_components': 13, 'covariance_type': 'tied'}. Best is trial 11 with value: 0.6276775186847358.[0m
[32m[I 2025-01-23 09:17:50,699][0m Trial 12 finished with value: 0.605240599171054 and parameters: {'n_components': 14, 'covariance_type': 'tied'}. Best is trial 11 with value: 0.6276775186847358.[0m
[32m[I 2025-01-23 09:17:50,750][0m Trial 13 finished with value: 0.6275564596660044 and parameters: {'n_components': 13, 'covariance_type': 'spherical'}. Best is trial 11 with value: 0.6276775186847358.[0m
[32m[I 2025-01-23 09:17:50,799][0m Trial 14 finished with value: 0.6275564596660044 and parameters: {'n_components': 13, 'covariance_type': 'spherical'}. Best is trial 11 with value: 0.6276775186847358.[0m
[32m[I 2025-01-23 09:17:50,840][0m Trial 15 finished with value: 0.6280638672482588 and parameters: {'n_components': 12, 'covariance_type': 'spherical'}. Best is trial 15 with value: 0.6280638672482588.[0m
[32m[I 2025-01-23 09:17:50,877][0m Trial 16 finished with value: 0.6280638672482588 and parameters: {'n_components': 12, 'covariance_type': 'spherical'}. Best is trial 15 with value: 0.6280638672482588.[0m
[32m[I 2025-01-23 09:17:50,918][0m Trial 17 finished with value: 0.637519036220534 and parameters: {'n_components': 11, 'covariance_type': 'spherical'}. Best is trial 17 with value: 0.637519036220534.[0m
[32m[I 2025-01-23 09:17:50,956][0m Trial 18 finished with value: 0.6170738969599452 and parameters: {'n_components': 10, 'covariance_type': 'spherical'}. Best is trial 17 with value: 0.637519036220534.[0m
[32m[I 2025-01-23 09:17:50,998][0m Trial 19 finished with value: 0.637519036220534 and parameters: {'n_components': 11, 'covariance_type': 'spherical'}. Best is trial 17 with value: 0.637519036220534.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 107, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 GMM 运行失败
[INFO] 运行聚类算法: HC，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=10, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_31/repaired_31.txt
Program completed in: 2.4668636322021484 seconds

[INFO] 聚类完成: HC, 运行时间: 2.47 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 14
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 14
Refined optimal number of clusters: 14
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_31/repaired_31.txt
Program completed in: 1.0677824020385742 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.07 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 31, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_31/repaired_31.txt
Program completed in: 10.94242811203003 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 10.94 秒
==================================================
[INFO] 准备处理数据集: beers (CSV: 20.34%.csv, error_rate=20.34%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 32
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_32_algo_1/repaired_dataset_32_algo_1_20.34%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_32_algo_1/repaired_dataset_32_algo_1_20.34%.csv
清洗完成: Dataset=beers, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_32.csv
运行时间: 37.58 秒
[INFO] 运行聚类算法: AP，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_32/repaired_32.txt
Program completed in: 64.77712059020996 seconds

[INFO] 聚类完成: AP, 运行时间: 64.78 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_32/repaired_32.txt
Program completed in: 14.04209017753601 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 14.04 秒
[INFO] 运行聚类算法: GMM，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 33
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 3
Refining in range: 3 to 33
Refined optimal number of components: 22
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_32/repaired_32.txt
Program completed in: 11.004546880722046 seconds

[INFO] 聚类完成: GMM, 运行时间: 11.00 秒
[INFO] 运行聚类算法: HC，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=30, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_32/repaired_32.txt
Program completed in: 9.999388694763184 seconds

[INFO] 聚类完成: HC, 运行时间: 10.00 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 34
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 34
Refined optimal number of clusters: 31
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_32/repaired_32.txt
Program completed in: 60.87037634849548 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 60.87 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 32, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_32/repaired_32.txt
Program completed in: 186.8670003414154 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 186.87 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 32
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1355.
1732892 pairs of (a data error, a potential correction) are featurized.
63% (5289 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 644.
1737535 pairs of (a data error, a potential correction) are featurized.
66% (5621 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2326.
1743296 pairs of (a data error, a potential correction) are featurized.
68% (5765 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 397.
1744656 pairs of (a data error, a potential correction) are featurized.
68% (5767 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 953.
1746925 pairs of (a data error, a potential correction) are featurized.
68% (5793 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 246.
1751826 pairs of (a data error, a potential correction) are featurized.
69% (5813 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 775.
1757569 pairs of (a data error, a potential correction) are featurized.
71% (6008 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1126.
1760675 pairs of (a data error, a potential correction) are featurized.
71% (6011 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2329.
1762176 pairs of (a data error, a potential correction) are featurized.
71% (6013 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 2262.
1768158 pairs of (a data error, a potential correction) are featurized.
75% (6320 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 317.
1768494 pairs of (a data error, a potential correction) are featurized.
75% (6320 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 309.
1770174 pairs of (a data error, a potential correction) are featurized.
75% (6320 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1874.
1772660 pairs of (a data error, a potential correction) are featurized.
75% (6357 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1997.
1774981 pairs of (a data error, a potential correction) are featurized.
76% (6391 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1535.
1781217 pairs of (a data error, a potential correction) are featurized.
76% (6424 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1736.
1782490 pairs of (a data error, a potential correction) are featurized.
77% (6480 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 777.
1786228 pairs of (a data error, a potential correction) are featurized.
77% (6486 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1655.
1789976 pairs of (a data error, a potential correction) are featurized.
77% (6486 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1212.
1797240 pairs of (a data error, a potential correction) are featurized.
77% (6486 / 8458) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1644.
1804247 pairs of (a data error, a potential correction) are featurized.
77% (6486 / 8458) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/beers/raha_baran/results-dataset_32_algo_2/repaired_dataset_32_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/beers/raha_baran/results-dataset_32_algo_2/repaired_dataset_32_algo_2.csv
清洗完成: Dataset=beers, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_32.csv
运行时间: 1250.26 秒
[INFO] 运行聚类算法: AP，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_32/repaired_32.txt
Program completed in: 27.197805881500244 seconds

[INFO] 聚类完成: AP, 运行时间: 27.20 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_32/repaired_32.txt
Program completed in: 8.291042804718018 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 8.29 秒
[INFO] 运行聚类算法: GMM，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 12
Refining in range: 12 to 17
Refined optimal number of components: 17
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_32/repaired_32.txt
Program completed in: 8.732805013656616 seconds

[INFO] 聚类完成: GMM, 运行时间: 8.73 秒
[INFO] 运行聚类算法: HC，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Final optimal parameters from Optuna: n_clusters=10, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_32/repaired_32.txt
Program completed in: 6.9355926513671875 seconds

[INFO] 聚类完成: HC, 运行时间: 6.94 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using multiple columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Initial optimal number of clusters from Optuna: 30
Optimal number of clusters from Kneedle: 10
Refining in range: 10 to 30
Refined optimal number of clusters: 24
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_32/repaired_32.txt
Program completed in: 3.01782488822937 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 3.02 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 32, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id', 'brewery_id']
Using all columns for clustering: ['abv', 'beer-name', 'brewery-name', 'city', 'ibu', 'index', 'ounces', 'state', 'style']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_32/repaired_32.txt
Program completed in: 108.33104014396667 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 108.33 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 29.25%.csv, error_rate=29.25%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 33
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_33_algo_1/repaired_dataset_33_algo_1_29.25%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_33_algo_1/repaired_dataset_33_algo_1_29.25%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_33.csv
运行时间: 14.92 秒
[INFO] 运行聚类算法: AP，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_33/repaired_33.txt
Program completed in: 3.3017830848693848 seconds

[INFO] 聚类完成: AP, 运行时间: 3.30 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_33/repaired_33.txt
Program completed in: 3.2508456707000732 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.25 秒
[INFO] 运行聚类算法: GMM，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 3
Refining in range: 3 to 15
Refined optimal number of components: 13
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_33/repaired_33.txt
Program completed in: 2.4562296867370605 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.46 秒
[INFO] 运行聚类算法: HC，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=15, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_33/repaired_33.txt
Program completed in: 2.909489393234253 seconds

[INFO] 聚类完成: HC, 运行时间: 2.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 15
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 15
Refined optimal number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_33/repaired_33.txt
Program completed in: 1.1034045219421387 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.10 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 33, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_33/repaired_33.txt
Program completed in: 13.610158920288086 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 13.61 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 33
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 139.
887797 pairs of (a data error, a potential correction) are featurized.
25% (969 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 518.
895293 pairs of (a data error, a potential correction) are featurized.
42% (1634 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 644.
901434 pairs of (a data error, a potential correction) are featurized.
45% (1767 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 879.
906182 pairs of (a data error, a potential correction) are featurized.
46% (1794 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 192.
911791 pairs of (a data error, a potential correction) are featurized.
46% (1802 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 975.
914692 pairs of (a data error, a potential correction) are featurized.
50% (1962 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 822.
918851 pairs of (a data error, a potential correction) are featurized.
54% (2116 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 220.
922484 pairs of (a data error, a potential correction) are featurized.
54% (2116 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 650.
923477 pairs of (a data error, a potential correction) are featurized.
54% (2116 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 655.
927229 pairs of (a data error, a potential correction) are featurized.
54% (2118 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 647.
932421 pairs of (a data error, a potential correction) are featurized.
54% (2118 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 180.
933164 pairs of (a data error, a potential correction) are featurized.
54% (2118 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 421.
935698 pairs of (a data error, a potential correction) are featurized.
54% (2126 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 754.
938099 pairs of (a data error, a potential correction) are featurized.
55% (2138 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 351.
942393 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 391.
947833 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 817.
954789 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 947.
956062 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 223.
961693 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 155.
967024 pairs of (a data error, a potential correction) are featurized.
55% (2140 / 3913) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_33_algo_2/repaired_dataset_33_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_33_algo_2/repaired_dataset_33_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_33.csv
运行时间: 416.24 秒
[INFO] 运行聚类算法: AP，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_33/repaired_33.txt
Program completed in: 0.4811255931854248 seconds

[INFO] 聚类完成: AP, 运行时间: 0.48 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_33/repaired_33.txt
Program completed in: 1.5301318168640137 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.53 秒
[INFO] 运行聚类算法: GMM，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 8
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 8
Refined optimal number of components: 2
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_33/repaired_33.txt
Program completed in: 1.3795158863067627 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.38 秒
[INFO] 运行聚类算法: HC，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_33/repaired_33.txt
Program completed in: 1.3789567947387695 seconds

[INFO] 聚类完成: HC, 运行时间: 1.38 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 33, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 09:56:09,939][0m A new study created in memory with name: no-name-641a04cd-1e78-4c05-83fb-62b4f627026f[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,071][0m Trial 0 finished with value: 152.82080256544282 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,082][0m Trial 1 finished with value: 249.77994018252005 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,097][0m Trial 2 finished with value: 152.82080256544285 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,112][0m Trial 3 finished with value: 152.82080256544282 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,122][0m Trial 4 finished with value: 315.80762101525454 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,134][0m Trial 5 finished with value: 249.77994018252008 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,144][0m Trial 6 finished with value: 249.77994018252005 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,154][0m Trial 7 finished with value: 315.80762101525454 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,166][0m Trial 8 finished with value: 194.47614006997898 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,177][0m Trial 9 finished with value: 249.77994018252008 and parameters: {'n_clusters': 6}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,193][0m Trial 10 finished with value: 194.47614006997898 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,211][0m Trial 11 finished with value: 152.82080256544285 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,228][0m Trial 12 finished with value: 152.82080256544282 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,243][0m Trial 13 finished with value: 194.47614006997895 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,261][0m Trial 14 finished with value: 152.82080256544282 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,279][0m Trial 15 finished with value: 152.82080256544282 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,295][0m Trial 16 finished with value: 194.476140069979 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,312][0m Trial 17 finished with value: 152.82080256544285 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,328][0m Trial 18 finished with value: 194.47614006997895 and parameters: {'n_clusters': 7}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 09:56:10,346][0m Trial 19 finished with value: 152.82080256544285 and parameters: {'n_clusters': 8}. Best is trial 0 with value: 152.82080256544282.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 96, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 33, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_33/repaired_33.txt
Program completed in: 4.641942024230957 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 4.64 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 47.88%.csv, error_rate=47.88%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 34
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_34_algo_1/repaired_dataset_34_algo_1_47.88%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_34_algo_1/repaired_dataset_34_algo_1_47.88%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_34.csv
运行时间: 16.48 秒
[INFO] 运行聚类算法: AP，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_34/repaired_34.txt
Program completed in: 2.557610511779785 seconds

[INFO] 聚类完成: AP, 运行时间: 2.56 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_34/repaired_34.txt
Program completed in: 2.505183458328247 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.51 秒
[INFO] 运行聚类算法: GMM，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 13
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 2
Refining in range: 2 to 13
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_34/repaired_34.txt
Program completed in: 1.364199161529541 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.36 秒
[INFO] 运行聚类算法: HC，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_34/repaired_34.txt
Program completed in: 1.5289912223815918 seconds

[INFO] 聚类完成: HC, 运行时间: 1.53 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 13
Optimal number of clusters from Kneedle: 5
Refining in range: 5 to 13
Refined optimal number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_34/repaired_34.txt
Program completed in: 0.9430739879608154 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 0.94 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 34, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_34/repaired_34.txt
Program completed in: 9.418178796768188 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 9.42 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 34
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 68.
1042955 pairs of (a data error, a potential correction) are featurized.
7% (395 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 795.
1054328 pairs of (a data error, a potential correction) are featurized.
8% (424 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 669.
1066050 pairs of (a data error, a potential correction) are featurized.
12% (639 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 899.
1077413 pairs of (a data error, a potential correction) are featurized.
13% (677 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1.
1084323 pairs of (a data error, a potential correction) are featurized.
15% (821 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 119.
1094145 pairs of (a data error, a potential correction) are featurized.
20% (1076 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 203.
1100935 pairs of (a data error, a potential correction) are featurized.
27% (1415 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 477.
1113086 pairs of (a data error, a potential correction) are featurized.
27% (1415 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 702.
1125903 pairs of (a data error, a potential correction) are featurized.
30% (1584 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 60.
1140577 pairs of (a data error, a potential correction) are featurized.
30% (1584 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 567.
1147445 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 269.
1150782 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 557.
1157647 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 89.
1167676 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 406.
1174435 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 114.
1188052 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 923.
1197399 pairs of (a data error, a potential correction) are featurized.
30% (1590 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 166.
1204840 pairs of (a data error, a potential correction) are featurized.
30% (1593 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 513.
1208956 pairs of (a data error, a potential correction) are featurized.
30% (1593 / 5326) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 745.
1220246 pairs of (a data error, a potential correction) are featurized.
30% (1593 / 5326) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_34_algo_2/repaired_dataset_34_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_34_algo_2/repaired_dataset_34_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_34.csv
运行时间: 375.81 秒
[INFO] 运行聚类算法: AP，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:03:12,663][0m A new study created in memory with name: no-name-4065d7ca-247e-4219-b18e-f04deaa50269[0m
[32m[I 2025-01-23 10:03:12,666][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.507717865637356, 'preference': -159}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,669][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.6701923890378345, 'preference': -163}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,672][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.717240843594877, 'preference': -318}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,675][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.8572566176700913, 'preference': -310}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,679][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.8896185069997782, 'preference': -482}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,682][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.8065512220457249, 'preference': -140}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,685][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.6705482536099843, 'preference': -456}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,689][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.8029964080668832, 'preference': -283}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,691][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.5613419192318766, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,694][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.7693075736578088, 'preference': -276}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,701][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.5167928440942102, 'preference': -100}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,707][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.6153177058124923, 'preference': -182}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,714][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.6208513215814775, 'preference': -205}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,721][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.5209149502059339, 'preference': -212}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,727][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.5942412052670522, 'preference': -410}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,734][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.686081989050064, 'preference': -140}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,741][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.7373458802780687, 'preference': -246}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,748][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.5721362932602174, 'preference': -395}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,755][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.6625969473257645, 'preference': -109}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,762][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.7344135214064478, 'preference': -242}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,769][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.5564724071579614, 'preference': -364}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,775][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.5648946422359907, 'preference': -364}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,783][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7561570219357365, 'preference': -105}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,790][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.5034450047664254, 'preference': -245}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,796][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.5511058590746515, 'preference': -361}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,803][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6254739287201869, 'preference': -132}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,810][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.5041296310028576, 'preference': -179}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,816][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.5311028236113948, 'preference': -355}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,823][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.6308607810317556, 'preference': -139}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,830][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.6467540109836047, 'preference': -169}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,837][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.5364063445653775, 'preference': -335}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,844][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.5022528801122409, 'preference': -201}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,851][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.6490220419467558, 'preference': -157}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,858][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.6436915343807202, 'preference': -171}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,865][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.5956198332187993, 'preference': -329}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,873][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7059311804139077, 'preference': -401}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,879][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.5848044844714396, 'preference': -381}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,887][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.8190424189987696, 'preference': -456}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,894][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.5386116071901658, 'preference': -300}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,901][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.771445162766839, 'preference': -239}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,909][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.8768511140299934, 'preference': -119}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,916][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.5499725594118872, 'preference': -131}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,923][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.5009909453793, 'preference': -226}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,930][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.515982999450833, 'preference': -187}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,938][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.533147480707955, 'preference': -350}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,945][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.6068902923728551, 'preference': -422}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,952][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.5811272964525463, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,959][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.6286080103253706, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,966][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.6829205607983151, 'preference': -176}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:03:12,974][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.520019201603996, 'preference': -194}. Best is trial 0 with value: -inf.[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py", line 94, in <module>
    final_silhouette_score = silhouette_score(X_scaled, best_labels)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 117, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 231, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 33, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 34, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_34/repaired_34.txt
Program completed in: 1.6517136096954346 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.65 秒
[INFO] 运行聚类算法: GMM，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:03:16,523][0m A new study created in memory with name: no-name-3a5a903f-efa6-481a-a0dd-f3860b581bd7[0m
[33m[W 2025-01-23 10:03:16,524][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=3).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 62, in objective
    n_components = trial.suggest_int("n_components", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 77, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 62, in objective
    n_components = trial.suggest_int("n_components", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).

[ERROR] 聚类算法 GMM 运行失败
[INFO] 运行聚类算法: HC，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:03:17,416][0m A new study created in memory with name: no-name-e8e01d2c-fe7c-4818-973f-dacce2b02b04[0m
[33m[W 2025-01-23 10:03:17,416][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=3).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 61, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 83, in <module>
    study.optimize(objective, n_trials=200)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 61, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).

[ERROR] 聚类算法 HC 运行失败
[INFO] 运行聚类算法: KMEANS，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:03:18,479][0m A new study created in memory with name: no-name-c1bd32f8-72de-4faa-9ad3-b7fe9a6b2024[0m
[33m[W 2025-01-23 10:03:18,479][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=3).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 69, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=3).

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 34, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:03:19,346][0m A new study created in memory with name: no-name-f0594417-8d72-4be2-90b0-168f5d48c3b3[0m
[33m[W 2025-01-23 10:03:19,348][0m Trial 0 failed because of the following error: ValueError('min_samples must be no greater than the number of samples (10). Got 21')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (10). Got 21
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 90, in <module>
    study.optimize(objective, n_trials=200)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (10). Got 21

[ERROR] 聚类算法 OPTICS 运行失败
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 13.79%.csv, error_rate=13.79%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 35
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_35_algo_1/repaired_dataset_35_algo_1_13.79%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_35_algo_1/repaired_dataset_35_algo_1_13.79%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_35.csv
运行时间: 14.49 秒
[INFO] 运行聚类算法: AP，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_35/repaired_35.txt
Program completed in: 8.623712539672852 seconds

[INFO] 聚类完成: AP, 运行时间: 8.62 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_35/repaired_35.txt
Program completed in: 3.6266300678253174 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.63 秒
[INFO] 运行聚类算法: GMM，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 15
Refined optimal number of components: 13
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_35/repaired_35.txt
Program completed in: 3.3555262088775635 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.36 秒
[INFO] 运行聚类算法: HC，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=17, linkage=single, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_35/repaired_35.txt
Program completed in: 2.9079620838165283 seconds

[INFO] 聚类完成: HC, 运行时间: 2.91 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 17
Refined optimal number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_35/repaired_35.txt
Program completed in: 1.3419325351715088 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.34 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 35, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_35/repaired_35.txt
Program completed in: 17.453744173049927 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 17.45 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 35
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 988.
134971 pairs of (a data error, a potential correction) are featurized.
47% (1092 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 35.
137665 pairs of (a data error, a potential correction) are featurized.
77% (1782 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 614.
139971 pairs of (a data error, a potential correction) are featurized.
78% (1794 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 301.
142288 pairs of (a data error, a potential correction) are featurized.
83% (1915 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 743.
143165 pairs of (a data error, a potential correction) are featurized.
84% (1934 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 764.
146700 pairs of (a data error, a potential correction) are featurized.
84% (1934 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 965.
147823 pairs of (a data error, a potential correction) are featurized.
84% (1939 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 594.
147823 pairs of (a data error, a potential correction) are featurized.
84% (1940 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
150655 pairs of (a data error, a potential correction) are featurized.
84% (1940 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 371.
151670 pairs of (a data error, a potential correction) are featurized.
84% (1946 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 740.
153870 pairs of (a data error, a potential correction) are featurized.
84% (1946 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 48.
156760 pairs of (a data error, a potential correction) are featurized.
84% (1946 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 149.
158037 pairs of (a data error, a potential correction) are featurized.
84% (1946 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 32.
158037 pairs of (a data error, a potential correction) are featurized.
84% (1946 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 813.
160335 pairs of (a data error, a potential correction) are featurized.
85% (1962 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 365.
162769 pairs of (a data error, a potential correction) are featurized.
87% (2015 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 78.
166226 pairs of (a data error, a potential correction) are featurized.
87% (2015 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 936.
167669 pairs of (a data error, a potential correction) are featurized.
87% (2015 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 916.
167669 pairs of (a data error, a potential correction) are featurized.
88% (2018 / 2304) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 126.
169062 pairs of (a data error, a potential correction) are featurized.
88% (2020 / 2304) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_35_algo_2/repaired_dataset_35_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_35_algo_2/repaired_dataset_35_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_35.csv
运行时间: 358.74 秒
[INFO] 运行聚类算法: AP，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_35/repaired_35.txt
Program completed in: 4.514225244522095 seconds

[INFO] 聚类完成: AP, 运行时间: 4.51 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_35/repaired_35.txt
Program completed in: 3.2543723583221436 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.25 秒
[INFO] 运行聚类算法: GMM，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 10
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 10
Refined optimal number of components: 10
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_35/repaired_35.txt
Program completed in: 3.763068914413452 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.76 秒
[INFO] 运行聚类算法: HC，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_35/repaired_35.txt
Program completed in: 2.571375608444214 seconds

[INFO] 聚类完成: HC, 运行时间: 2.57 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 16
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 16
Refined optimal number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_35/repaired_35.txt
Program completed in: 1.2990508079528809 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.30 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 35, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_35/repaired_35.txt
Program completed in: 15.060276508331299 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 15.06 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 40.24%.csv, error_rate=40.24%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 36
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_36_algo_1/repaired_dataset_36_algo_1_40.24%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_36_algo_1/repaired_dataset_36_algo_1_40.24%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_36.csv
运行时间: 16.88 秒
[INFO] 运行聚类算法: AP，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_36/repaired_36.txt
Program completed in: 8.23309850692749 seconds

[INFO] 聚类完成: AP, 运行时间: 8.23 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_36/repaired_36.txt
Program completed in: 3.5436947345733643 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.54 秒
[INFO] 运行聚类算法: GMM，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 7
Refining in range: 7 to 15
Refined optimal number of components: 15
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_36/repaired_36.txt
Program completed in: 1.9130301475524902 seconds

[INFO] 聚类完成: GMM, 运行时间: 1.91 秒
[INFO] 运行聚类算法: HC，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_36/repaired_36.txt
Program completed in: 2.632169723510742 seconds

[INFO] 聚类完成: HC, 运行时间: 2.63 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 16
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 16
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_36/repaired_36.txt
Program completed in: 1.3343515396118164 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.33 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 36, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_36/repaired_36.txt
Program completed in: 15.845553159713745 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 15.85 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 36
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 507.
873930 pairs of (a data error, a potential correction) are featurized.
20% (1059 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 605.
881299 pairs of (a data error, a potential correction) are featurized.
22% (1182 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 648.
889800 pairs of (a data error, a potential correction) are featurized.
23% (1270 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 840.
894981 pairs of (a data error, a potential correction) are featurized.
37% (1987 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 957.
902161 pairs of (a data error, a potential correction) are featurized.
37% (2022 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 894.
903881 pairs of (a data error, a potential correction) are featurized.
37% (2031 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 616.
914166 pairs of (a data error, a potential correction) are featurized.
38% (2042 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
923322 pairs of (a data error, a potential correction) are featurized.
38% (2046 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 23.
930660 pairs of (a data error, a potential correction) are featurized.
38% (2058 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 113.
935574 pairs of (a data error, a potential correction) are featurized.
38% (2063 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 477.
946059 pairs of (a data error, a potential correction) are featurized.
38% (2063 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 409.
952348 pairs of (a data error, a potential correction) are featurized.
38% (2063 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 889.
955064 pairs of (a data error, a potential correction) are featurized.
40% (2177 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 572.
962421 pairs of (a data error, a potential correction) are featurized.
41% (2203 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 167.
970935 pairs of (a data error, a potential correction) are featurized.
41% (2207 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 209.
977628 pairs of (a data error, a potential correction) are featurized.
41% (2207 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 421.
980355 pairs of (a data error, a potential correction) are featurized.
41% (2220 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 499.
989023 pairs of (a data error, a potential correction) are featurized.
41% (2220 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 655.
994180 pairs of (a data error, a potential correction) are featurized.
41% (2233 / 5420) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 552.
998501 pairs of (a data error, a potential correction) are featurized.
41% (2233 / 5420) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_36_algo_2/repaired_dataset_36_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_36_algo_2/repaired_dataset_36_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_36.csv
运行时间: 401.53 秒
[INFO] 运行聚类算法: AP，数据集编号: 36, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:18:29,618][0m A new study created in memory with name: no-name-a9f9915a-b67b-443b-a776-a5ed12845441[0m
[32m[I 2025-01-23 10:18:29,622][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.7701578845291075, 'preference': -213}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,626][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.523814733443743, 'preference': -187}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,629][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6865670696057431, 'preference': -397}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,633][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.6363246160976084, 'preference': -222}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,636][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.5472681370393024, 'preference': -376}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,640][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.6680297513519582, 'preference': -381}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,644][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.7980378889229062, 'preference': -200}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,647][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.5446960231873013, 'preference': -419}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,651][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.5303290835814165, 'preference': -309}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,654][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.6424774496170562, 'preference': -126}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,663][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.8562819487415203, 'preference': -488}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,671][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7848791203277717, 'preference': -209}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,679][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.7459615108696502, 'preference': -123}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,688][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8735051431201669, 'preference': -280}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,695][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.5958675630689991, 'preference': -163}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,703][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.7330084022191531, 'preference': -280}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,712][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.8199310591086943, 'preference': -244}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,719][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.594344481788061, 'preference': -155}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,727][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.7362738849425411, 'preference': -318}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,736][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.8197217191915604, 'preference': -242}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,743][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.5822478329593508, 'preference': -102}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,752][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.7225109153609116, 'preference': -310}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,760][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.7668923863676106, 'preference': -330}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,768][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.8379687666330642, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,776][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.7145329117877334, 'preference': -264}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,784][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.7750057013583552, 'preference': -350}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,794][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.8960362334549217, 'preference': -346}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,803][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.839350133416786, 'preference': -255}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,812][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.7667834844118212, 'preference': -471}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,821][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.8713603415289998, 'preference': -342}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,831][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.899744562867703, 'preference': -179}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,841][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.8992301082321199, 'preference': -497}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,850][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.8094025464764527, 'preference': -451}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,859][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.8717898390881544, 'preference': -172}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,869][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.8993213303726889, 'preference': -423}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,877][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.6772844455912688, 'preference': -230}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,885][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.5033479444610441, 'preference': -327}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,893][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.7126138906939381, 'preference': -291}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,901][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.7527382947856968, 'preference': -377}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,909][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7019072870183838, 'preference': -399}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,917][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.6910637974864143, 'preference': -202}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,925][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.7838332957876714, 'preference': -266}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,934][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.8362205015877332, 'preference': -140}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,943][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.7895118407195345, 'preference': -353}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,951][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.846509176806395, 'preference': -267}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,960][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.6515213714137204, 'preference': -350}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,968][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.7696632840154828, 'preference': -468}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,976][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.8028322795584294, 'preference': -425}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,986][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.8755067323906717, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:29,995][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.8591930752405226, 'preference': -449}. Best is trial 0 with value: -inf.[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py", line 94, in <module>
    final_silhouette_score = silhouette_score(X_scaled, best_labels)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 117, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 231, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 33, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_36/repaired_36.txt
Program completed in: 1.332387924194336 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.33 秒
[INFO] 运行聚类算法: GMM，数据集编号: 36, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:18:33,205][0m A new study created in memory with name: no-name-999585c7-4fa1-4f53-a954-08eb009481ae[0m
[32m[I 2025-01-23 10:18:33,280][0m Trial 0 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,326][0m Trial 1 finished with value: 0.813840025378397 and parameters: {'n_components': 5, 'covariance_type': 'spherical'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,360][0m Trial 2 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,389][0m Trial 3 finished with value: 0.813840025378397 and parameters: {'n_components': 5, 'covariance_type': 'spherical'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,428][0m Trial 4 finished with value: 0.813840025378397 and parameters: {'n_components': 5, 'covariance_type': 'spherical'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,453][0m Trial 5 finished with value: 0.813840025378397 and parameters: {'n_components': 5, 'covariance_type': 'spherical'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,472][0m Trial 6 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'full'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,504][0m Trial 7 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'full'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,528][0m Trial 8 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'diag'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,556][0m Trial 9 finished with value: 0.813840025378397 and parameters: {'n_components': 5, 'covariance_type': 'spherical'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,591][0m Trial 10 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,624][0m Trial 11 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,655][0m Trial 12 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,688][0m Trial 13 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,723][0m Trial 14 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,749][0m Trial 15 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'diag'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,782][0m Trial 16 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,824][0m Trial 17 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,855][0m Trial 18 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'diag'}. Best is trial 0 with value: 0.9789424578941024.[0m
[32m[I 2025-01-23 10:18:33,908][0m Trial 19 finished with value: 0.9789424578941024 and parameters: {'n_components': 5, 'covariance_type': 'tied'}. Best is trial 0 with value: 0.9789424578941024.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 107, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 GMM 运行失败
[INFO] 运行聚类算法: HC，数据集编号: 36, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=average, metric=euclidean
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_36/repaired_36.txt
Program completed in: 0.7716195583343506 seconds

[INFO] 聚类完成: HC, 运行时间: 0.77 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 36, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:18:36,769][0m A new study created in memory with name: no-name-0a03ce24-4141-4ece-a17c-073296ecbf51[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,900][0m Trial 0 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,909][0m Trial 1 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,918][0m Trial 2 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,927][0m Trial 3 finished with value: 94.88907293518398 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,936][0m Trial 4 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,944][0m Trial 5 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 94.88907293518396.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,953][0m Trial 6 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,962][0m Trial 7 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,970][0m Trial 8 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,979][0m Trial 9 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,987][0m Trial 10 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:36,996][0m Trial 11 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,004][0m Trial 12 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,013][0m Trial 13 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,021][0m Trial 14 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,030][0m Trial 15 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,039][0m Trial 16 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,047][0m Trial 17 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,056][0m Trial 18 finished with value: 94.88907293518396 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:18:37,064][0m Trial 19 finished with value: 94.88907293518395 and parameters: {'n_clusters': 5}. Best is trial 6 with value: 94.88907293518395.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 96, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 36, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:18:38,005][0m A new study created in memory with name: no-name-27915ca9-533f-4e17-aba4-b66af886edf5[0m
[32m[I 2025-01-23 10:18:38,012][0m Trial 0 finished with value: -inf and parameters: {'min_samples': 17, 'xi': 0.012251653200940866, 'min_cluster_size': 0.033739639390696186}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:38,019][0m Trial 1 finished with value: -inf and parameters: {'min_samples': 6, 'xi': 0.03247913556022233, 'min_cluster_size': 0.04181468581700734}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:38,025][0m Trial 2 finished with value: -inf and parameters: {'min_samples': 18, 'xi': 0.08738740395988054, 'min_cluster_size': 0.021422234958886358}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:18:38,033][0m Trial 3 finished with value: 0.28459946139739223 and parameters: {'min_samples': 5, 'xi': 0.05007054165255838, 'min_cluster_size': 0.014269837975638229}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,039][0m Trial 4 finished with value: -inf and parameters: {'min_samples': 26, 'xi': 0.06001949034957853, 'min_cluster_size': 0.02850448282004857}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,046][0m Trial 5 finished with value: -inf and parameters: {'min_samples': 25, 'xi': 0.04210167704826042, 'min_cluster_size': 0.012333288629713427}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,052][0m Trial 6 finished with value: -inf and parameters: {'min_samples': 21, 'xi': 0.07925748870686654, 'min_cluster_size': 0.04839544441200032}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,058][0m Trial 7 finished with value: -inf and parameters: {'min_samples': 13, 'xi': 0.06172762138204857, 'min_cluster_size': 0.04926963713327961}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,064][0m Trial 8 finished with value: -inf and parameters: {'min_samples': 23, 'xi': 0.09518950300506604, 'min_cluster_size': 0.012530387033225145}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,070][0m Trial 9 finished with value: -inf and parameters: {'min_samples': 23, 'xi': 0.091620640726525, 'min_cluster_size': 0.044596907797638446}. Best is trial 3 with value: 0.28459946139739223.[0m
[32m[I 2025-01-23 10:18:38,084][0m Trial 10 finished with value: 0.2849635686535725 and parameters: {'min_samples': 5, 'xi': 0.029985088540767865, 'min_cluster_size': 0.020183310009967956}. Best is trial 10 with value: 0.2849635686535725.[0m
[32m[I 2025-01-23 10:18:38,098][0m Trial 11 finished with value: 0.2849635686535725 and parameters: {'min_samples': 5, 'xi': 0.027406606525925272, 'min_cluster_size': 0.02017977729003808}. Best is trial 10 with value: 0.2849635686535725.[0m
[32m[I 2025-01-23 10:18:38,111][0m Trial 12 finished with value: -inf and parameters: {'min_samples': 10, 'xi': 0.02003124325452277, 'min_cluster_size': 0.023074521730270085}. Best is trial 10 with value: 0.2849635686535725.[0m
[33m[W 2025-01-23 10:18:38,118][0m Trial 13 failed because of the following error: ValueError('min_samples must be no greater than the number of samples (26). Got 30')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (26). Got 30
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 90, in <module>
    study.optimize(objective, n_trials=200)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (26). Got 30

[ERROR] 聚类算法 OPTICS 运行失败
==================================================
[INFO] 准备处理数据集: rayyan (CSV: clean.csv, error_rate=0.01%)
[INFO] 检测到 clean 数据集 rayyan，跳过清洗和聚类
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 24.35%.csv, error_rate=24.35%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 38
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_38_algo_1/repaired_dataset_38_algo_1_24.35%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_38_algo_1/repaired_dataset_38_algo_1_24.35%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_38.csv
运行时间: 15.66 秒
[INFO] 运行聚类算法: AP，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_38/repaired_38.txt
Program completed in: 5.631936073303223 seconds

[INFO] 聚类完成: AP, 运行时间: 5.63 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_38/repaired_38.txt
Program completed in: 3.340029001235962 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.34 秒
[INFO] 运行聚类算法: GMM，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 4
Refining in range: 4 to 15
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_38/repaired_38.txt
Program completed in: 2.347881555557251 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.35 秒
[INFO] 运行聚类算法: HC，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=14, linkage=average, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_38/repaired_38.txt
Program completed in: 2.8089077472686768 seconds

[INFO] 聚类完成: HC, 运行时间: 2.81 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 15
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 15
Refined optimal number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_38/repaired_38.txt
Program completed in: 1.0607686042785645 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.06 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 38, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_38/repaired_38.txt
Program completed in: 13.303858518600464 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 13.30 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 38
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 469.
687451 pairs of (a data error, a potential correction) are featurized.
57% (1904 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 356.
691275 pairs of (a data error, a potential correction) are featurized.
58% (1938 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 326.
694536 pairs of (a data error, a potential correction) are featurized.
58% (1938 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 185.
698091 pairs of (a data error, a potential correction) are featurized.
58% (1951 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 875.
700725 pairs of (a data error, a potential correction) are featurized.
58% (1958 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 720.
705533 pairs of (a data error, a potential correction) are featurized.
58% (1959 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 122.
707809 pairs of (a data error, a potential correction) are featurized.
59% (1974 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 585.
711292 pairs of (a data error, a potential correction) are featurized.
60% (2018 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 23.
714203 pairs of (a data error, a potential correction) are featurized.
60% (2031 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 302.
717036 pairs of (a data error, a potential correction) are featurized.
61% (2035 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 914.
723376 pairs of (a data error, a potential correction) are featurized.
61% (2040 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
727888 pairs of (a data error, a potential correction) are featurized.
61% (2040 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 295.
728886 pairs of (a data error, a potential correction) are featurized.
61% (2057 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 158.
731630 pairs of (a data error, a potential correction) are featurized.
61% (2057 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 925.
733507 pairs of (a data error, a potential correction) are featurized.
61% (2057 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 285.
735279 pairs of (a data error, a potential correction) are featurized.
61% (2063 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 359.
739240 pairs of (a data error, a potential correction) are featurized.
61% (2063 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 664.
743377 pairs of (a data error, a potential correction) are featurized.
61% (2063 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 70.
745071 pairs of (a data error, a potential correction) are featurized.
62% (2084 / 3360) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 952.
746271 pairs of (a data error, a potential correction) are featurized.
62% (2084 / 3360) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_38_algo_2/repaired_dataset_38_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_38_algo_2/repaired_dataset_38_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_38.csv
运行时间: 394.86 秒
[INFO] 运行聚类算法: AP，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_38/repaired_38.txt
Program completed in: 0.7677335739135742 seconds

[INFO] 聚类完成: AP, 运行时间: 0.77 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_38/repaired_38.txt
Program completed in: 1.7052817344665527 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.71 秒
[INFO] 运行聚类算法: GMM，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 9
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 9
Refined optimal number of components: 2
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_38/repaired_38.txt
Program completed in: 2.0751492977142334 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.08 秒
[INFO] 运行聚类算法: HC，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_38/repaired_38.txt
Program completed in: 1.5151290893554688 seconds

[INFO] 聚类完成: HC, 运行时间: 1.52 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 38, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:26:13,240][0m A new study created in memory with name: no-name-77c64593-c3bd-4edd-93e6-da3dcdcba76f[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,370][0m Trial 0 finished with value: 718.648473298 and parameters: {'n_clusters': 5}. Best is trial 0 with value: 718.648473298.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,389][0m Trial 1 finished with value: 370.04037669636006 and parameters: {'n_clusters': 9}. Best is trial 1 with value: 370.04037669636006.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,407][0m Trial 2 finished with value: 370.04037669636006 and parameters: {'n_clusters': 9}. Best is trial 1 with value: 370.04037669636006.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,424][0m Trial 3 finished with value: 442.10236276762464 and parameters: {'n_clusters': 8}. Best is trial 1 with value: 370.04037669636006.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,446][0m Trial 4 finished with value: 301.3378900522616 and parameters: {'n_clusters': 11}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,468][0m Trial 5 finished with value: 301.3378900522616 and parameters: {'n_clusters': 11}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,489][0m Trial 6 finished with value: 301.3378900522616 and parameters: {'n_clusters': 11}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,506][0m Trial 7 finished with value: 442.1023627676246 and parameters: {'n_clusters': 8}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,520][0m Trial 8 finished with value: 536.1145625520901 and parameters: {'n_clusters': 7}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,538][0m Trial 9 finished with value: 370.04037669636 and parameters: {'n_clusters': 9}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,554][0m Trial 10 finished with value: 718.6484732980001 and parameters: {'n_clusters': 5}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,578][0m Trial 11 finished with value: 301.3378900522616 and parameters: {'n_clusters': 11}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,602][0m Trial 12 finished with value: 301.3378900522616 and parameters: {'n_clusters': 11}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,624][0m Trial 13 finished with value: 331.6447549688211 and parameters: {'n_clusters': 10}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,647][0m Trial 14 finished with value: 331.6447549688211 and parameters: {'n_clusters': 10}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,669][0m Trial 15 finished with value: 331.6447549688211 and parameters: {'n_clusters': 10}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,686][0m Trial 16 finished with value: 536.1145625520901 and parameters: {'n_clusters': 7}. Best is trial 4 with value: 301.3378900522616.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,710][0m Trial 17 finished with value: 301.33789005226157 and parameters: {'n_clusters': 11}. Best is trial 17 with value: 301.33789005226157.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,733][0m Trial 18 finished with value: 331.6447549688211 and parameters: {'n_clusters': 10}. Best is trial 17 with value: 301.33789005226157.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
[32m[I 2025-01-23 10:26:13,748][0m Trial 19 finished with value: 618.609876990745 and parameters: {'n_clusters': 6}. Best is trial 17 with value: 301.33789005226157.[0m
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
/root/AutoMLClustering/venv/lib/python3.9/site-packages/kneed/knee_locator.py:311: UserWarning: No knee/elbow found
  warnings.warn("No knee/elbow found")
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 96, in <module>
    refined_range_min = min(k_optuna, k_kneedle)
TypeError: '<' not supported between instances of 'NoneType' and 'int'

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 38, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_38/repaired_38.txt
Program completed in: 7.284433603286743 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 7.28 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 10.75%.csv, error_rate=10.75%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 39
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_39_algo_1/repaired_dataset_39_algo_1_10.75%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_39_algo_1/repaired_dataset_39_algo_1_10.75%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_39.csv
运行时间: 14.85 秒
[INFO] 运行聚类算法: AP，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_39/repaired_39.txt
Program completed in: 12.867443799972534 seconds

[INFO] 聚类完成: AP, 运行时间: 12.87 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_39/repaired_39.txt
Program completed in: 3.9260191917419434 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.93 秒
[INFO] 运行聚类算法: GMM，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 12
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 8
Refining in range: 8 to 12
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_39/repaired_39.txt
Program completed in: 3.7248642444610596 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.72 秒
[INFO] 运行聚类算法: HC，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=6, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_39/repaired_39.txt
Program completed in: 2.8966825008392334 seconds

[INFO] 聚类完成: HC, 运行时间: 2.90 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 18
Refined optimal number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_39/repaired_39.txt
Program completed in: 1.444108486175537 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.44 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 39, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_39/repaired_39.txt
Program completed in: 21.42356562614441 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 21.42 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 39
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 693.
66278 pairs of (a data error, a potential correction) are featurized.
50% (1053 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 16.
69162 pairs of (a data error, a potential correction) are featurized.
53% (1132 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 133.
70925 pairs of (a data error, a potential correction) are featurized.
54% (1147 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 366.
71729 pairs of (a data error, a potential correction) are featurized.
55% (1155 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 869.
73523 pairs of (a data error, a potential correction) are featurized.
88% (1859 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 722.
75687 pairs of (a data error, a potential correction) are featurized.
88% (1867 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 152.
78441 pairs of (a data error, a potential correction) are featurized.
94% (1995 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 615.
80463 pairs of (a data error, a potential correction) are featurized.
95% (2005 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
83090 pairs of (a data error, a potential correction) are featurized.
95% (2005 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 960.
85124 pairs of (a data error, a potential correction) are featurized.
95% (2005 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 173.
88002 pairs of (a data error, a potential correction) are featurized.
95% (2005 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 531.
90011 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 915.
91150 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 579.
92239 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 689.
93405 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 645.
93405 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 766.
93405 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 243.
94505 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 787.
95853 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 507.
98546 pairs of (a data error, a potential correction) are featurized.
95% (2006 / 2119) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_39_algo_2/repaired_dataset_39_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_39_algo_2/repaired_dataset_39_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_39.csv
运行时间: 351.85 秒
[INFO] 运行聚类算法: AP，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_39/repaired_39.txt
Program completed in: 6.6600165367126465 seconds

[INFO] 聚类完成: AP, 运行时间: 6.66 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_39/repaired_39.txt
Program completed in: 3.832467794418335 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.83 秒
[INFO] 运行聚类算法: GMM，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 15
Best covariance type from Optuna: spherical
Optimal number of components from Kneedle: 4
Refining in range: 4 to 15
Refined optimal number of components: 10
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_39/repaired_39.txt
Program completed in: 2.335475206375122 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.34 秒
[INFO] 运行聚类算法: HC，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_39/repaired_39.txt
Program completed in: 2.7917776107788086 seconds

[INFO] 聚类完成: HC, 运行时间: 2.79 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 18
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 18
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_39/repaired_39.txt
Program completed in: 1.4388773441314697 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.44 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 39, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_39/repaired_39.txt
Program completed in: 21.290509939193726 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 21.29 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 22.77%.csv, error_rate=22.77%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 40
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_40_algo_1/repaired_dataset_40_algo_1_22.77%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_40_algo_1/repaired_dataset_40_algo_1_22.77%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_40.csv
运行时间: 15.92 秒
[INFO] 运行聚类算法: AP，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_40/repaired_40.txt
Program completed in: 7.436302423477173 seconds

[INFO] 聚类完成: AP, 运行时间: 7.44 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_40/repaired_40.txt
Program completed in: 3.553765058517456 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.55 秒
[INFO] 运行聚类算法: GMM，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 16
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 6
Refining in range: 6 to 16
Refined optimal number of components: 16
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_40/repaired_40.txt
Program completed in: 3.527165174484253 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.53 秒
[INFO] 运行聚类算法: HC，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=16, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_40/repaired_40.txt
Program completed in: 2.990898609161377 seconds

[INFO] 聚类完成: HC, 运行时间: 2.99 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 17
Refined optimal number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_40/repaired_40.txt
Program completed in: 1.3363597393035889 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.34 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 40, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_40/repaired_40.txt
Program completed in: 16.471259832382202 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 16.47 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 40
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 952.
520252 pairs of (a data error, a potential correction) are featurized.
36% (1060 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 116.
523557 pairs of (a data error, a potential correction) are featurized.
57% (1706 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 769.
528288 pairs of (a data error, a potential correction) are featurized.
57% (1707 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 503.
530670 pairs of (a data error, a potential correction) are featurized.
60% (1785 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 1.
532729 pairs of (a data error, a potential correction) are featurized.
63% (1894 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 120.
536632 pairs of (a data error, a potential correction) are featurized.
64% (1896 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 145.
538931 pairs of (a data error, a potential correction) are featurized.
64% (1896 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 175.
541035 pairs of (a data error, a potential correction) are featurized.
67% (2000 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 790.
543233 pairs of (a data error, a potential correction) are featurized.
67% (2000 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 359.
545635 pairs of (a data error, a potential correction) are featurized.
67% (2001 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 576.
545840 pairs of (a data error, a potential correction) are featurized.
67% (2001 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 243.
548922 pairs of (a data error, a potential correction) are featurized.
67% (2007 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 689.
550096 pairs of (a data error, a potential correction) are featurized.
67% (2009 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 360.
550264 pairs of (a data error, a potential correction) are featurized.
69% (2051 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 99.
553099 pairs of (a data error, a potential correction) are featurized.
69% (2051 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 881.
557612 pairs of (a data error, a potential correction) are featurized.
69% (2065 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 595.
559482 pairs of (a data error, a potential correction) are featurized.
70% (2080 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 254.
563012 pairs of (a data error, a potential correction) are featurized.
70% (2080 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 536.
564405 pairs of (a data error, a potential correction) are featurized.
70% (2081 / 2984) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 598.
566004 pairs of (a data error, a potential correction) are featurized.
70% (2081 / 2984) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_40_algo_2/repaired_dataset_40_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_40_algo_2/repaired_dataset_40_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_40.csv
运行时间: 382.04 秒
[INFO] 运行聚类算法: AP，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_40/repaired_40.txt
Program completed in: 1.0471813678741455 seconds

[INFO] 聚类完成: AP, 运行时间: 1.05 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_40/repaired_40.txt
Program completed in: 1.721501111984253 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.72 秒
[INFO] 运行聚类算法: GMM，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 12
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 7
Refining in range: 7 to 12
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_40/repaired_40.txt
Program completed in: 2.0800416469573975 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.08 秒
[INFO] 运行聚类算法: HC，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_40/repaired_40.txt
Program completed in: 1.530491828918457 seconds

[INFO] 聚类完成: HC, 运行时间: 1.53 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 12
Optimal number of clusters from Kneedle: 6
Refining in range: 6 to 12
Refined optimal number of clusters: 12
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_40/repaired_40.txt
Program completed in: 0.8678231239318848 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 0.87 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 40, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_40/repaired_40.txt
Program completed in: 8.206867933273315 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 8.21 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 19.71%.csv, error_rate=19.71%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 41
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_41_algo_1/repaired_dataset_41_algo_1_19.71%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_41_algo_1/repaired_dataset_41_algo_1_19.71%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_41.csv
运行时间: 15.11 秒
[INFO] 运行聚类算法: AP，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_41/repaired_41.txt
Program completed in: 7.180984258651733 seconds

[INFO] 聚类完成: AP, 运行时间: 7.18 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_41/repaired_41.txt
Program completed in: 3.6706910133361816 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.67 秒
[INFO] 运行聚类算法: GMM，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 17
Best covariance type from Optuna: diag
Optimal number of components from Kneedle: 8
Refining in range: 8 to 17
Refined optimal number of components: 17
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_41/repaired_41.txt
Program completed in: 2.132305860519409 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.13 秒
[INFO] 运行聚类算法: HC，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=8, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_41/repaired_41.txt
Program completed in: 2.8056647777557373 seconds

[INFO] 聚类完成: HC, 运行时间: 2.81 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 17
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 17
Refined optimal number of clusters: 17
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_41/repaired_41.txt
Program completed in: 1.3427355289459229 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.34 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 41, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_41/repaired_41.txt
Program completed in: 16.457579374313354 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 16.46 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 41
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 307.
328277 pairs of (a data error, a potential correction) are featurized.
70% (1875 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 943.
331509 pairs of (a data error, a potential correction) are featurized.
71% (1901 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 200.
332867 pairs of (a data error, a potential correction) are featurized.
73% (1941 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 711.
334626 pairs of (a data error, a potential correction) are featurized.
75% (2011 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 386.
335780 pairs of (a data error, a potential correction) are featurized.
75% (2011 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 285.
337603 pairs of (a data error, a potential correction) are featurized.
76% (2026 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 829.
342032 pairs of (a data error, a potential correction) are featurized.
77% (2045 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 541.
342032 pairs of (a data error, a potential correction) are featurized.
77% (2048 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 489.
343831 pairs of (a data error, a potential correction) are featurized.
77% (2069 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 227.
346264 pairs of (a data error, a potential correction) are featurized.
78% (2079 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 950.
352341 pairs of (a data error, a potential correction) are featurized.
78% (2079 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 254.
354480 pairs of (a data error, a potential correction) are featurized.
81% (2175 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 503.
357828 pairs of (a data error, a potential correction) are featurized.
82% (2185 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 472.
359865 pairs of (a data error, a potential correction) are featurized.
82% (2195 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 207.
359865 pairs of (a data error, a potential correction) are featurized.
82% (2195 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 340.
360848 pairs of (a data error, a potential correction) are featurized.
82% (2195 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 797.
362972 pairs of (a data error, a potential correction) are featurized.
82% (2199 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 365.
364429 pairs of (a data error, a potential correction) are featurized.
82% (2199 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 144.
366386 pairs of (a data error, a potential correction) are featurized.
82% (2199 / 2673) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 258.
368065 pairs of (a data error, a potential correction) are featurized.
82% (2199 / 2673) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_41_algo_2/repaired_dataset_41_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_41_algo_2/repaired_dataset_41_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_41.csv
运行时间: 355.37 秒
[INFO] 运行聚类算法: AP，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_41/repaired_41.txt
Program completed in: 2.396463394165039 seconds

[INFO] 聚类完成: AP, 运行时间: 2.40 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_41/repaired_41.txt
Program completed in: 2.7516841888427734 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.75 秒
[INFO] 运行聚类算法: GMM，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 12
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 2
Refining in range: 2 to 12
Refined optimal number of components: 12
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_41/repaired_41.txt
Program completed in: 2.254262685775757 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.25 秒
[INFO] 运行聚类算法: HC，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_41/repaired_41.txt
Program completed in: 2.2858119010925293 seconds

[INFO] 聚类完成: HC, 运行时间: 2.29 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 13
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 13
Refined optimal number of clusters: 13
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_41/repaired_41.txt
Program completed in: 0.9155542850494385 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 0.92 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 41, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_41/repaired_41.txt
Program completed in: 9.75954532623291 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 9.76 秒
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 52.73%.csv, error_rate=52.73%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 42
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_42_algo_1/repaired_dataset_42_algo_1_52.73%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_42_algo_1/repaired_dataset_42_algo_1_52.73%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_42.csv
运行时间: 15.90 秒
[INFO] 运行聚类算法: AP，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_42/repaired_42.txt
Program completed in: 10.049737930297852 seconds

[INFO] 聚类完成: AP, 运行时间: 10.05 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_42/repaired_42.txt
Program completed in: 4.218662977218628 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 4.22 秒
[INFO] 运行聚类算法: GMM，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 19
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 19
Refined optimal number of components: 14
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_42/repaired_42.txt
Program completed in: 3.876509428024292 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.88 秒
[INFO] 运行聚类算法: HC，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=19, linkage=single, metric=cosine
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_42/repaired_42.txt
Program completed in: 3.305880308151245 seconds

[INFO] 聚类完成: HC, 运行时间: 3.31 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 19
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 19
Refined optimal number of clusters: 18
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_42/repaired_42.txt
Program completed in: 1.489276647567749 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.49 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 42, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_42/repaired_42.txt
Program completed in: 21.877845287322998 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 21.88 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 42
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 103.
573920 pairs of (a data error, a potential correction) are featurized.
21% (1228 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 877.
580821 pairs of (a data error, a potential correction) are featurized.
25% (1458 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 125.
592842 pairs of (a data error, a potential correction) are featurized.
27% (1599 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 126.
597638 pairs of (a data error, a potential correction) are featurized.
29% (1678 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 811.
600672 pairs of (a data error, a potential correction) are featurized.
29% (1679 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 445.
616169 pairs of (a data error, a potential correction) are featurized.
29% (1702 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 595.
626928 pairs of (a data error, a potential correction) are featurized.
29% (1715 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 507.
640270 pairs of (a data error, a potential correction) are featurized.
29% (1717 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 182.
643304 pairs of (a data error, a potential correction) are featurized.
29% (1722 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 676.
647921 pairs of (a data error, a potential correction) are featurized.
29% (1723 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 792.
656364 pairs of (a data error, a potential correction) are featurized.
29% (1723 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 638.
669925 pairs of (a data error, a potential correction) are featurized.
29% (1723 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 367.
684548 pairs of (a data error, a potential correction) are featurized.
29% (1723 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 727.
696605 pairs of (a data error, a potential correction) are featurized.
29% (1726 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 291.
705300 pairs of (a data error, a potential correction) are featurized.
30% (1747 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 423.
714006 pairs of (a data error, a potential correction) are featurized.
30% (1749 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 733.
720283 pairs of (a data error, a potential correction) are featurized.
30% (1750 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 428.
726507 pairs of (a data error, a potential correction) are featurized.
30% (1750 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 468.
736209 pairs of (a data error, a potential correction) are featurized.
30% (1750 / 5855) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 594.
742414 pairs of (a data error, a potential correction) are featurized.
30% (1750 / 5855) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_42_algo_2/repaired_dataset_42_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_42_algo_2/repaired_dataset_42_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_42.csv
运行时间: 289.90 秒
[INFO] 运行聚类算法: AP，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py:47: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:54:56,590][0m A new study created in memory with name: no-name-c58223dd-f9c8-4e67-a8bf-3371b5d9b07c[0m
[32m[I 2025-01-23 10:54:56,594][0m Trial 0 finished with value: -inf and parameters: {'damping': 0.8056324194148027, 'preference': -265}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,597][0m Trial 1 finished with value: -inf and parameters: {'damping': 0.8567830659866806, 'preference': -483}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,600][0m Trial 2 finished with value: -inf and parameters: {'damping': 0.6661804081604821, 'preference': -133}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,603][0m Trial 3 finished with value: -inf and parameters: {'damping': 0.8576992802888361, 'preference': -130}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,606][0m Trial 4 finished with value: -inf and parameters: {'damping': 0.8024544063659714, 'preference': -341}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,608][0m Trial 5 finished with value: -inf and parameters: {'damping': 0.599567072431857, 'preference': -365}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,610][0m Trial 6 finished with value: -inf and parameters: {'damping': 0.5410237961978833, 'preference': -442}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,613][0m Trial 7 finished with value: -inf and parameters: {'damping': 0.5138995611880366, 'preference': -310}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,616][0m Trial 8 finished with value: -inf and parameters: {'damping': 0.8780056471067255, 'preference': -288}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,619][0m Trial 9 finished with value: -inf and parameters: {'damping': 0.5480460031414938, 'preference': -254}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,626][0m Trial 10 finished with value: -inf and parameters: {'damping': 0.7337081905069929, 'preference': -198}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,633][0m Trial 11 finished with value: -inf and parameters: {'damping': 0.7813595752042461, 'preference': -491}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,640][0m Trial 12 finished with value: -inf and parameters: {'damping': 0.8147559006841789, 'preference': -397}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,648][0m Trial 13 finished with value: -inf and parameters: {'damping': 0.8967575419497457, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,655][0m Trial 14 finished with value: -inf and parameters: {'damping': 0.7326622598429068, 'preference': -496}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,663][0m Trial 15 finished with value: -inf and parameters: {'damping': 0.8331290495403186, 'preference': -434}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,670][0m Trial 16 finished with value: -inf and parameters: {'damping': 0.75749915126767, 'preference': -190}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,676][0m Trial 17 finished with value: -inf and parameters: {'damping': 0.6586969889156684, 'preference': -273}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,684][0m Trial 18 finished with value: -inf and parameters: {'damping': 0.8271793024905252, 'preference': -405}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,691][0m Trial 19 finished with value: -inf and parameters: {'damping': 0.7651368896875783, 'preference': -184}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,697][0m Trial 20 finished with value: -inf and parameters: {'damping': 0.6716099639927615, 'preference': -262}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,704][0m Trial 21 finished with value: -inf and parameters: {'damping': 0.6179598005212822, 'preference': -338}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,711][0m Trial 22 finished with value: -inf and parameters: {'damping': 0.774117117883994, 'preference': -165}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,718][0m Trial 23 finished with value: -inf and parameters: {'damping': 0.6993341802527865, 'preference': -238}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,725][0m Trial 24 finished with value: -inf and parameters: {'damping': 0.6131181480242976, 'preference': -320}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,732][0m Trial 25 finished with value: -inf and parameters: {'damping': 0.6165015228577816, 'preference': -103}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,739][0m Trial 26 finished with value: -inf and parameters: {'damping': 0.7017081962590934, 'preference': -236}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,746][0m Trial 27 finished with value: -inf and parameters: {'damping': 0.69929386829446, 'preference': -309}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,752][0m Trial 28 finished with value: -inf and parameters: {'damping': 0.6163887089907163, 'preference': -102}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,759][0m Trial 29 finished with value: -inf and parameters: {'damping': 0.5783690495807094, 'preference': -151}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,766][0m Trial 30 finished with value: -inf and parameters: {'damping': 0.7061977980119712, 'preference': -215}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,773][0m Trial 31 finished with value: -inf and parameters: {'damping': 0.6460884381490443, 'preference': -295}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,780][0m Trial 32 finished with value: -inf and parameters: {'damping': 0.5818685142424134, 'preference': -172}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,786][0m Trial 33 finished with value: -inf and parameters: {'damping': 0.5779652675519945, 'preference': -135}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,793][0m Trial 34 finished with value: -inf and parameters: {'damping': 0.6581552170921842, 'preference': -220}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,800][0m Trial 35 finished with value: -inf and parameters: {'damping': 0.7449506749087533, 'preference': -358}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,808][0m Trial 36 finished with value: -inf and parameters: {'damping': 0.7893882122823463, 'preference': -272}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,815][0m Trial 37 finished with value: -inf and parameters: {'damping': 0.6803897009072821, 'preference': -332}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,823][0m Trial 38 finished with value: -inf and parameters: {'damping': 0.8459940815074288, 'preference': -154}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,830][0m Trial 39 finished with value: -inf and parameters: {'damping': 0.7919167523357511, 'preference': -251}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,838][0m Trial 40 finished with value: -inf and parameters: {'damping': 0.8560111737907309, 'preference': -324}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,844][0m Trial 41 finished with value: -inf and parameters: {'damping': 0.6257176755150221, 'preference': -110}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,851][0m Trial 42 finished with value: -inf and parameters: {'damping': 0.7056431406892394, 'preference': -243}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,858][0m Trial 43 finished with value: -inf and parameters: {'damping': 0.512014606650916, 'preference': -288}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,865][0m Trial 44 finished with value: -inf and parameters: {'damping': 0.6380589005096134, 'preference': -302}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,872][0m Trial 45 finished with value: -inf and parameters: {'damping': 0.5597599748251215, 'preference': -364}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,879][0m Trial 46 finished with value: -inf and parameters: {'damping': 0.6836471169290737, 'preference': -107}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,886][0m Trial 47 finished with value: -inf and parameters: {'damping': 0.7196710681513799, 'preference': -126}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,893][0m Trial 48 finished with value: -inf and parameters: {'damping': 0.5903379468349679, 'preference': -130}. Best is trial 0 with value: -inf.[0m
[32m[I 2025-01-23 10:54:56,899][0m Trial 49 finished with value: -inf and parameters: {'damping': 0.5365106341365522, 'preference': -231}. Best is trial 0 with value: -inf.[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/AP/AP.py", line 94, in <module>
    final_silhouette_score = silhouette_score(X_scaled, best_labels)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 117, in silhouette_score
    return np.mean(silhouette_samples(X, labels, metric=metric, **kwds))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 231, in silhouette_samples
    check_number_of_labels(len(le.classes_), n_samples)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/metrics/cluster/_unsupervised.py", line 33, in check_number_of_labels
    raise ValueError(
ValueError: Number of labels is 1. Valid values are 2 to n_samples - 1 (inclusive)

[ERROR] 聚类算法 AP 运行失败
[INFO] 运行聚类算法: DBSCAN，数据集编号: 42, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_42/repaired_42.txt
Program completed in: 1.6393637657165527 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 1.64 秒
[INFO] 运行聚类算法: GMM，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:55:00,424][0m A new study created in memory with name: no-name-f9199a79-9172-400d-b5b4-a0bf2220efe2[0m
[33m[W 2025-01-23 10:55:00,425][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=2).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 62, in objective
    n_components = trial.suggest_int("n_components", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 77, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/GMM/GMM.py", line 62, in objective
    n_components = trial.suggest_int("n_components", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).

[ERROR] 聚类算法 GMM 运行失败
[INFO] 运行聚类算法: HC，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py:50: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:55:01,296][0m A new study created in memory with name: no-name-92b97ed8-2d9f-4e6e-bdd5-74a1abca86c1[0m
[33m[W 2025-01-23 10:55:01,297][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=2).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 61, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 83, in <module>
    study.optimize(objective, n_trials=200)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/HC/HC.py", line 61, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).

[ERROR] 聚类算法 HC 运行失败
[INFO] 运行聚类算法: KMEANS，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py:51: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:55:02,373][0m A new study created in memory with name: no-name-7479e118-542c-43ca-80f9-ae1c8ad59648[0m
[33m[W 2025-01-23 10:55:02,374][0m Trial 0 failed because of the following error: ValueError('The `low` value must be smaller than or equal to the `high` value (low=5, high=2).')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 69, in <module>
    study.optimize(objective, n_trials=20)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/KMEANS/KMEANS.py", line 62, in objective
    n_clusters = trial.suggest_int("n_clusters", 5, math.isqrt(X.shape[0]))
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/trial/_trial.py", line 313, in suggest_int
    distribution = IntDistribution(low=low, high=high, log=log, step=step)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/distributions.py", line 340, in __init__
    raise ValueError(
ValueError: The `low` value must be smaller than or equal to the `high` value (low=5, high=2).

[ERROR] 聚类算法 KMEANS 运行失败
[INFO] 运行聚类算法: OPTICS，数据集编号: 42, 清洗算法: raha_baran
[ERROR] 聚类算法运行错误: /root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py:45: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  X[col] = X[col].map(X[col].value_counts(normalize=True))
[32m[I 2025-01-23 10:55:03,280][0m A new study created in memory with name: no-name-8177e549-4188-47f4-bee7-38d8f8d6909f[0m
[33m[W 2025-01-23 10:55:03,282][0m Trial 0 failed because of the following error: ValueError('min_samples must be no greater than the number of samples (8). Got 24')[0m
Traceback (most recent call last):
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (8). Got 24
Traceback (most recent call last):
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 90, in <module>
    study.optimize(objective, n_trials=200)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/study.py", line 419, in optimize
    _optimize(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 66, in _optimize
    _optimize_sequential(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 160, in _optimize_sequential
    frozen_trial = _run_trial(study, func, catch)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 234, in _run_trial
    raise func_err
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/optuna/study/_optimize.py", line 196, in _run_trial
    value_or_values = func(trial)
  File "/root/AutoMLClustering/src/pipeline/train/../../clustering/OPTICS/OPTICS.py", line 64, in objective
    optics.fit(X_cosine)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 335, in fit
    ) = memory.cache(compute_optics_graph)(
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/joblib/memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 534, in compute_optics_graph
    _validate_size(min_samples, n_samples, "min_samples")
  File "/root/AutoMLClustering/venv/lib/python3.9/site-packages/sklearn/cluster/_optics.py", line 383, in _validate_size
    raise ValueError(
ValueError: min_samples must be no greater than the number of samples (8). Got 24

[ERROR] 聚类算法 OPTICS 运行失败
==================================================
[INFO] 准备处理数据集: rayyan (CSV: 16.88%.csv, error_rate=16.88%)
[INFO] 正在运行清洗策略: mode
运行清洗算法 1（mode），数据集编号: 43
Repaired data saved to /root/AutoMLClustering/src/pipeline/train/results/dataset_43_algo_1/repaired_dataset_43_algo_1_16.88%.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/src/pipeline/train/results/dataset_43_algo_1/repaired_dataset_43_algo_1_16.88%.csv
清洗完成: Dataset=rayyan, Algo=mode
结果文件路径: ../../../results/cleaned_data/mode/repaired_43.csv
运行时间: 14.43 秒
[INFO] 运行聚类算法: AP，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/mode/clustered_43/repaired_43.txt
Program completed in: 8.142592906951904 seconds

[INFO] 聚类完成: AP, 运行时间: 8.14 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/mode/clustered_43/repaired_43.txt
Program completed in: 3.4454634189605713 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 3.45 秒
[INFO] 运行聚类算法: GMM，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 11
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 11
Refined optimal number of components: 11
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/mode/clustered_43/repaired_43.txt
Program completed in: 3.1859936714172363 seconds

[INFO] 聚类完成: GMM, 运行时间: 3.19 秒
[INFO] 运行聚类算法: HC，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=5, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/mode/clustered_43/repaired_43.txt
Program completed in: 2.556502342224121 seconds

[INFO] 聚类完成: HC, 运行时间: 2.56 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 16
Optimal number of clusters from Kneedle: 7
Refining in range: 7 to 16
Refined optimal number of clusters: 16
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/mode/clustered_43/repaired_43.txt
Program completed in: 1.267812728881836 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.27 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 43, 清洗算法: mode
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/mode/clustered_43/repaired_43.txt
Program completed in: 15.278417825698853 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 15.28 秒
==================================================
[INFO] 正在运行清洗策略: raha_baran
运行清洗算法 2（baran），数据集编号: 43
------------------------------------------------------------------------
---------------------Initialize the Dataset Object----------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
--------------------Initialize Error Corrector Models-------------------
------------------------------------------------------------------------
The error corrector models are initialized.
------------------------------------------------------------------------
--------------Iterative Tuple Sampling, Labeling, and Learning----------
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 172.
311683 pairs of (a data error, a potential correction) are featurized.
71% (1854 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 186.
313423 pairs of (a data error, a potential correction) are featurized.
71% (1872 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 791.
315750 pairs of (a data error, a potential correction) are featurized.
74% (1938 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 979.
319029 pairs of (a data error, a potential correction) are featurized.
78% (2062 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 922.
320305 pairs of (a data error, a potential correction) are featurized.
79% (2088 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 895.
322598 pairs of (a data error, a potential correction) are featurized.
80% (2093 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 33.
323614 pairs of (a data error, a potential correction) are featurized.
80% (2093 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 152.
325837 pairs of (a data error, a potential correction) are featurized.
80% (2093 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 184.
328464 pairs of (a data error, a potential correction) are featurized.
81% (2123 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 691.
329603 pairs of (a data error, a potential correction) are featurized.
81% (2123 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 769.
332958 pairs of (a data error, a potential correction) are featurized.
81% (2124 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 709.
334097 pairs of (a data error, a potential correction) are featurized.
81% (2124 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 836.
336116 pairs of (a data error, a potential correction) are featurized.
81% (2124 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 113.
337262 pairs of (a data error, a potential correction) are featurized.
81% (2124 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 621.
339862 pairs of (a data error, a potential correction) are featurized.
81% (2124 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 816.
342702 pairs of (a data error, a potential correction) are featurized.
81% (2126 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 980.
344230 pairs of (a data error, a potential correction) are featurized.
81% (2132 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 947.
344230 pairs of (a data error, a potential correction) are featurized.
81% (2138 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 157.
345216 pairs of (a data error, a potential correction) are featurized.
81% (2138 / 2628) of data errors are corrected.
------------------------------------------------------------------------
The error corrector models are updated with new labeled tuple 250.
347459 pairs of (a data error, a potential correction) are featurized.
81% (2138 / 2628) of data errors are corrected.
------------------------------------------------------------------------
Repaired data saved to /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_43_algo_2/repaired_dataset_43_algo_2.csv
[INFO] 清洗结果文件路径: /root/AutoMLClustering/results/rayyan/raha_baran/results-dataset_43_algo_2/repaired_dataset_43_algo_2.csv
清洗完成: Dataset=rayyan, Algo=raha_baran
结果文件路径: ../../../results/cleaned_data/baran/repaired_43.csv
运行时间: 361.68 秒
[INFO] 运行聚类算法: AP，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/AP/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.6328420639038086 seconds

[INFO] 聚类完成: AP, 运行时间: 2.63 秒
[INFO] 运行聚类算法: DBSCAN，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns with 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/DBSCAN/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.9180610179901123 seconds

[INFO] 聚类完成: DBSCAN, 运行时间: 2.92 秒
[INFO] 运行聚类算法: GMM，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of components from Optuna: 14
Best covariance type from Optuna: tied
Optimal number of components from Kneedle: 5
Refining in range: 5 to 14
Refined optimal number of components: 14
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/GMM/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.443847894668579 seconds

[INFO] 聚类完成: GMM, 运行时间: 2.44 秒
[INFO] 运行聚类算法: HC，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Final optimal parameters from Optuna: n_clusters=7, linkage=single, metric=manhattan
Text output saved as /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/HC/raha_baran/clustered_43/repaired_43.txt
Program completed in: 2.5404701232910156 seconds

[INFO] 聚类完成: HC, 运行时间: 2.54 秒
[INFO] 运行聚类算法: KMEANS，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using multiple columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Initial optimal number of clusters from Optuna: 15
Optimal number of clusters from Kneedle: 8
Refining in range: 8 to 15
Refined optimal number of clusters: 15
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/KMEANS/raha_baran/clustered_43/repaired_43.txt
Program completed in: 1.1036832332611084 seconds

[INFO] 聚类完成: KMEANS, 运行时间: 1.10 秒
[INFO] 运行聚类算法: OPTICS，数据集编号: 43, 清洗算法: raha_baran
[INFO] 聚类算法输出:
Data loaded successfully.
Excluded columns containing 'id': ['id']
Using all columns for clustering: ['article_jcreated_at', 'article_jissue', 'article_jvolumn', 'article_language', 'article_pagination', 'article_title', 'author_list', 'jounral_abbreviation', 'journal_issn', 'journal_title']
Text output saved to /root/AutoMLClustering/src/pipeline/train/../../../results/clustered_data/OPTICS/raha_baran/clustered_43/repaired_43.txt
Program completed in: 11.967935562133789 seconds

[INFO] 聚类完成: OPTICS, 运行时间: 11.97 秒
==================================================
清洗结果已保存到 /root/AutoMLClustering/results/cleaned_results.json
聚类结果已保存到 /root/AutoMLClustering/results/clustered_results.json
[INFO] 开始分析聚类结果
[INFO] Top-K 值: 5
[WARNING] dataset_id 2 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 14 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 23 在 clustered_results.json 中未找到记录，跳过。
[WARNING] dataset_id 37 在 clustered_results.json 中未找到记录，跳过。
[INFO] 分析结果已保存到 /root/AutoMLClustering/results/analyzed_results.json
[INFO] 分析结果已保存到 /root/AutoMLClustering/results/analyzed_results.json
[INFO] 开始生成训练数据
训练数据已生成并保存到文件：../../../results/training_labels.json
[INFO] 训练数据已成功生成并保存
